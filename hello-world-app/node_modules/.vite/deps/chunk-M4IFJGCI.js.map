{
  "version": 3,
  "sources": ["../../@hubspot/cms-components/dist/chunk-KWJJMO7M.js"],
  "sourcesContent": ["// src/config/buildStaticEnvConfig.ts\nfunction buildStaticEnvConfig(portalID, hublet, hsEnv, hsDeployed, hsJSRGates, hsRenderSource) {\n  const getPortalID = () => portalID;\n  const getHubID = getPortalID;\n  const getHublet = () => hublet;\n  const getInternalHSEnv = () => hsEnv;\n  const getIsDeployed = () => hsDeployed;\n  const getInternalRenderSource = () => hsRenderSource;\n  const getGates = () => hsJSRGates;\n  const toJSON = () => ({\n    portalID,\n    hublet,\n    hsEnv,\n    hsDeployed,\n    hsJSRGates\n  });\n  const equals = (envConfig) => {\n    return portalID === envConfig.getPortalID() && hsEnv === envConfig.getInternalHSEnv() && hublet === envConfig.getHublet() && hsDeployed === envConfig.getIsDeployed();\n  };\n  return {\n    getPortalID,\n    getHubID,\n    getHublet,\n    getInternalHSEnv,\n    getIsDeployed,\n    equals,\n    getGates,\n    getInternalRenderSource,\n    toJSON\n  };\n}\n\n// src/config/singleton.ts\nvar hsConfigKey = typeof Symbol !== \"undefined\" ? Symbol.for(\"hs-config-singleton\") : \"HS_CONFIG_SINGLETON\";\nfunction initConfigSingleton(portalID, hublet, hsEnv, hsDeployed, hsJSRGates) {\n  if (import.meta.env.SSR) {\n    throw new Error(\n      \"Config singletons only work in the browser, not server-side\"\n    );\n  }\n  const envConfig = buildStaticEnvConfig(\n    portalID,\n    hublet,\n    hsEnv,\n    hsDeployed,\n    hsJSRGates\n  );\n  if (window[hsConfigKey]) {\n    const existingEnvConfig = window[hsConfigKey];\n    if (!envConfig.equals(existingEnvConfig)) {\n      throw new Error(\n        `Mismatch when setting environment config ${JSON.stringify(\n          envConfig.toJSON()\n        )}, existing: ${JSON.stringify(existingEnvConfig.toJSON())}`\n      );\n    } else {\n      return;\n    }\n  }\n  window[hsConfigKey] = envConfig;\n}\nfunction internalGetConfigSingletonForTest() {\n  return window[hsConfigKey];\n}\nfunction internalUpdateConfigSingletonForTest(environmentConfig) {\n  window[hsConfigKey] = environmentConfig;\n}\nfunction initConfigSingletonFromJSON({\n  portalID,\n  hublet,\n  hsEnv,\n  hsDeployed,\n  hsJSRGates\n}) {\n  return initConfigSingleton(portalID, hublet, hsEnv, hsDeployed, hsJSRGates);\n}\nfunction assertConfigSingletonDefined() {\n  if (!window[hsConfigKey]) {\n    throw new Error(\"No environment config singleton has been setup\");\n  }\n}\nfunction getConfigSingleton() {\n  if (import.meta.env.SSR) {\n    throw new Error(\n      \"Config singletons only work in the browser, not server-side\"\n    );\n  }\n  assertConfigSingletonDefined();\n  return window[hsConfigKey];\n}\n\nexport {\n  buildStaticEnvConfig,\n  initConfigSingleton,\n  internalGetConfigSingletonForTest,\n  internalUpdateConfigSingletonForTest,\n  initConfigSingletonFromJSON,\n  getConfigSingleton\n};\n"],
  "mappings": ";AACA,SAAS,qBAAqB,UAAU,QAAQ,OAAO,YAAY,YAAY,gBAAgB;AAC7F,QAAM,cAAc,MAAM;AAC1B,QAAM,WAAW;AACjB,QAAM,YAAY,MAAM;AACxB,QAAM,mBAAmB,MAAM;AAC/B,QAAM,gBAAgB,MAAM;AAC5B,QAAM,0BAA0B,MAAM;AACtC,QAAM,WAAW,MAAM;AACvB,QAAM,SAAS,OAAO;AAAA,IACpB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACA,QAAM,SAAS,CAAC,cAAc;AAC5B,WAAO,aAAa,UAAU,YAAY,KAAK,UAAU,UAAU,iBAAiB,KAAK,WAAW,UAAU,UAAU,KAAK,eAAe,UAAU,cAAc;AAAA,EACtK;AACA,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;AAGA,IAAI,cAAc,OAAO,WAAW,cAAc,OAAO,IAAI,qBAAqB,IAAI;AACtF,SAAS,oBAAoB,UAAU,QAAQ,OAAO,YAAY,YAAY;AAC5E,MAAI,YAAY,IAAI,KAAK;AACvB,UAAM,IAAI;AAAA,MACR;AAAA,IACF;AAAA,EACF;AACA,QAAM,YAAY;AAAA,IAChB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACA,MAAI,OAAO,WAAW,GAAG;AACvB,UAAM,oBAAoB,OAAO,WAAW;AAC5C,QAAI,CAAC,UAAU,OAAO,iBAAiB,GAAG;AACxC,YAAM,IAAI;AAAA,QACR,4CAA4C,KAAK;AAAA,UAC/C,UAAU,OAAO;AAAA,QACnB,CAAC,eAAe,KAAK,UAAU,kBAAkB,OAAO,CAAC,CAAC;AAAA,MAC5D;AAAA,IACF,OAAO;AACL;AAAA,IACF;AAAA,EACF;AACA,SAAO,WAAW,IAAI;AACxB;AACA,SAAS,oCAAoC;AAC3C,SAAO,OAAO,WAAW;AAC3B;AACA,SAAS,qCAAqC,mBAAmB;AAC/D,SAAO,WAAW,IAAI;AACxB;AACA,SAAS,4BAA4B;AAAA,EACnC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAAG;AACD,SAAO,oBAAoB,UAAU,QAAQ,OAAO,YAAY,UAAU;AAC5E;AACA,SAAS,+BAA+B;AACtC,MAAI,CAAC,OAAO,WAAW,GAAG;AACxB,UAAM,IAAI,MAAM,gDAAgD;AAAA,EAClE;AACF;AACA,SAAS,qBAAqB;AAC5B,MAAI,YAAY,IAAI,KAAK;AACvB,UAAM,IAAI;AAAA,MACR;AAAA,IACF;AAAA,EACF;AACA,+BAA6B;AAC7B,SAAO,OAAO,WAAW;AAC3B;",
  "names": []
}
