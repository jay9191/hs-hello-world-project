{
  "version": 3,
  "sources": ["../src/lib/cli.ts", "../src/lib/logColors.ts", "../src/createDevServer.ts", "../src/routes/createDevServerRoutes.ts", "../src/routes/partial.ts", "../src/lib/fullOriginalUrlFromRequest.ts", "../src/lib/renderPartial.ts", "../src/lib/renderComponentWithCSS.ts", "../src/lib/packagePath.ts", "../../cms-js-internal/dist/basicUtils.js", "../../cms-js-internal/dist/index.js", "../src/lib/moduleGraph.ts", "../src/lib/pathHelpers.ts", "../src/lib/renderHelpers.ts", "../src/lib/templates.ts", "../src/lib/criticalDevErrorsToServerMessages.ts", "../src/lib/trackUsage.ts", "../src/lib/debug.ts", "../src/lib/renderModulePreview.ts", "../src/lib/proxyHelpers.ts", "../src/proxyPage/proxyPage.ts", "../src/lib/renderModule.ts", "../src/lib/fetchModuleGraphQLData.ts", "../src/proxyPage/utils.ts", "../src/proxyPage/constants.ts", "../src/proxyPage/renderLocalError.ts", "../src/proxyPage/fetchPreviewInfo.ts", "../src/components/PartialsList.tsx", "../src/routes/linksToAllPartialsRouteHandler.tsx", "../src/components/ModulesList.tsx", "../src/routes/linksToAllModulesRouteHandler.tsx", "../src/routes/module.ts", "../src/proxyPage/fetchContentMetadata.ts", "../src/routes/proxyPageRouteHandler.ts", "../src/routes/proxyPageResourceRedirect.ts", "../src/routes/homeRouteHandler.tsx", "../src/routes/proxyPathPageRouteHandler.tsx", "../src/routes/proxyPathPageResourceRedirect.ts", "../src/routes/proxyServerlessHandler.ts", "../src/routes/modulePreviewRouteHandler.ts", "../src/shadowDevServer/startShadowDevServer.ts", "../src/shadowDevServer/createShadowDevServerRoutes.ts", "../src/createViteDevServer.ts", "../src/plugins/devSecretsPlugin.ts", "../src/lib/httpsRedirectingServer.ts", "../src/lib/getJSRenderingGates.ts", "../src/lib/gates.ts", "../src/proxyPage/fetchDomains.ts", "../src/lib/errors.ts", "../src/lib/validateHSPlatform.ts", "../../cms-js-internal/dist/buildFieldsTypes.js", "../src/lib/watchFieldsUpdates.ts", "../src/run.ts"],
  "sourcesContent": ["import { resolve } from 'path';\nimport { wrapMessageInColor } from './logColors.js';\n\nfunction printHelpMessage() {\n  console.log(`\n              HubSpot CMS Dev Server\n\nUsage: hs-cms-dev-server <path> [options]\n\nMandatory:\n    <path>                  Path to the directory containing your assets.\n\nOptions:\n    -c, --config            Path to alternate hubspot.config.yaml configuration.\n    -a, --account           The account name or id to use for the dev server.\n    --ssl                   Enables SSL for the dev server, serving it over an https:// URL.\n    --storybook             Launches a Storybook dev server.\n    --generateFieldsTypes   Generate types for fields.(jsx|json) files in module folders.\n\nFor more information on HubSpot CMS JS Rendering, visit:\n${wrapMessageInColor(\n  'cyan',\n  'https://github.hubspot.com/cms-js-building-block-examples/'\n)}`);\n}\n\nexport function getDevServerCommandLineOptions(argv: NodeJS.Process['argv']) {\n  const args = [...argv];\n  const webRoot = args[2];\n  let hubspotCliConfigPathOption: string | undefined;\n  let hubspotCliAccountNameOption: string | undefined;\n\n  // Print help if no arguments are provided.\n  if (args.length === 2 || args.includes('help') || args.includes('--help')) {\n    printHelpMessage();\n    process.exit(0);\n  }\n\n  // Very basic CLI option parsing\n  const configOptionIndex = args.findIndex(\n    (arg) => arg === '-c' || arg === '--config'\n  );\n  if (configOptionIndex > 0 && args.length > configOptionIndex) {\n    hubspotCliConfigPathOption = resolve(args[configOptionIndex + 1]);\n    args.splice(configOptionIndex, 2);\n  }\n\n  const accountOptionIndex = args.findIndex(\n    (arg) => arg === '-a' || arg === '--account'\n  );\n  if (accountOptionIndex > 0 && args.length > accountOptionIndex) {\n    hubspotCliAccountNameOption = args[accountOptionIndex + 1];\n    args.splice(accountOptionIndex, 2);\n  }\n\n  const sslEnabledOption = args.includes('--ssl') && !args.includes('--no-ssl');\n  const storybook = args.findIndex((arg) => arg === '--storybook') > 0;\n  const fieldGenEnabledOption = args.includes('--generateFieldsTypes');\n\n  return {\n    hubspotCliConfigPathOption,\n    hubspotCliAccountNameOption,\n    sslEnabledOption,\n    storybook,\n    fieldGenEnabledOption,\n    webRoot,\n  };\n}\n", "const CONTROL_CHARACTER = '\\x1b';\nconst DEFAULT_SCHEME = '[0m';\n\ntype ColorMap = {\n  [key: string]: number;\n};\n\nexport const ForeGroudANSIColorMap: ColorMap = {\n  black: 30,\n  red: 31,\n  green: 32,\n  yellow: 33,\n  blue: 34,\n  magenta: 35,\n  cyan: 36,\n  white: 37,\n};\n\nexport function wrapMessageInColor(color: string, message: string) {\n  return `${CONTROL_CHARACTER}[${ForeGroudANSIColorMap[color]}m${message}${CONTROL_CHARACTER}${DEFAULT_SCHEME}`;\n}\n", "import path from 'path';\nimport url from 'url';\nimport express from 'express';\nimport http from 'http';\nimport https from 'https';\nimport bodyParser from 'body-parser';\nimport { spawn } from 'child_process';\nimport { normalizePath } from 'vite';\nimport { Transform } from 'stream';\nimport createDevServerRoutes from './routes/createDevServerRoutes.js';\nimport startShadowDevServer from './shadowDevServer/startShadowDevServer.js';\nimport { getProjectNameFromHSConfig } from './lib/proxyHelpers.js';\nimport createViteDevServer from './createViteDevServer.js';\nimport { createHttpsRedirectingServer } from './lib/httpsRedirectingServer.js';\nimport getJsRenderingGates from './lib/getJSRenderingGates.js';\nimport {\n  getEnv,\n  getAccountId,\n  getAccountConfig,\n  loadConfig,\n  validateConfig,\n} from '@hubspot/local-dev-lib/config';\nimport { fetchSecrets } from '@hubspot/local-dev-lib/api/secrets';\nimport { fetchWebsiteDomainNames } from './proxyPage/fetchDomains.js';\nimport { HSEnvironment, Hublet } from '@hubspot/cms-components';\nimport {\n  handleSecretsError,\n  logMissingScopeWarning,\n  MissingScopeError,\n} from './lib/errors.js';\nimport { wrapMessageInColor } from './lib/logColors.js';\nimport {\n  Gate,\n  getCMSAssetConfig,\n  CMSAssetConfig,\n} from '@hubspot/cms-js-internal';\nimport sendTrackingRequest, { setTrackingInfo } from './lib/trackUsage.js';\nimport validateHSPlatform, {\n  findHSProjectJson,\n} from './lib/validateHSPlatform.js';\nimport localDevHttpImport from '@hubspot/local-dev-lib/http';\nimport { startFieldsTypeGenWatcher } from './lib/watchFieldsUpdates.js';\n\nconst {  default: hsCliHttp } = localDevHttpImport;\n\n\nconst BASE_PATH = '/';\nconst PORT = process.env.PORT ? parseInt(process.env.PORT, 10) : 3000;\nconst SHADOW_PORT = 1442;\nconst STORYBOOK_PORT = process.env.STORYBOOK_PORT\n  ? parseInt(process.env.STORYBOOK_PORT, 10)\n  : 3123;\n\nasync function createDevServer(\n  webRoot: string,\n  storybook: boolean,\n  hubspotCliConfigPathOption?: string,\n  hubspotCliAccountNameOption?: string,\n  sslEnabledOption?: boolean,\n  fieldGenEnabledOption?: boolean\n) {\n  let authedPortalId: number | null = null;\n  let authedEnv: HSEnvironment | null = null;\n  let jsRenderingGates: Gate[] = [];\n  let personalAccessKey: string | null = null;\n  let secretNames: Array<string> = [];\n\n  if (hubspotCliConfigPathOption && hubspotCliAccountNameOption) {\n    console.log(\n      `Loading HS auth (account = ${hubspotCliAccountNameOption}) configuration at: ${hubspotCliConfigPathOption}`\n    );\n  } else if (hubspotCliConfigPathOption) {\n    console.log(\n      `Loading HS auth configuration at: ${hubspotCliConfigPathOption}`\n    );\n  } else if (hubspotCliAccountNameOption) {\n    console.log(\n      `Loading HS auth (account = ${hubspotCliAccountNameOption}) configuration.`\n    );\n  }\n\n  // If a custom hubspot.config.yaml config path was set, make sure to force load that before\n  // any hs config values are read\n  loadConfig(hubspotCliConfigPathOption || null, { useEnv: false });\n\n  let cmsAssetConfig: CMSAssetConfig;\n  try {\n    cmsAssetConfig = getCMSAssetConfig(webRoot);\n  } catch (e) {\n    console.error(\n      `Error finding or parsing cms-assets.json when initializing in ${webRoot}`\n    );\n    process.exit(1);\n  }\n\n  if (validateConfig()) {\n    authedPortalId = getAccountId(hubspotCliAccountNameOption);\n\n    const env = getEnv(hubspotCliAccountNameOption);\n\n    if (!env) {\n      throw new Error(\n        `No environment found for account ${hubspotCliAccountNameOption} from hubspot.config.yaml`\n      );\n    }\n\n    authedEnv = env;\n\n    personalAccessKey =\n      getAccountConfig(authedPortalId) &&\n      getAccountConfig(authedPortalId).personalAccessKey;\n\n    if (!authedPortalId && hubspotCliAccountNameOption) {\n      console.error(\n        `Couldn't find ${hubspotCliAccountNameOption} in your hubspot.config.yaml`\n      );\n      process.exit(1);\n    }\n\n    if (personalAccessKey) {\n      try {\n        jsRenderingGates = await getJsRenderingGates(\n          authedPortalId,\n          authedEnv,\n          personalAccessKey\n        );\n      } catch (e) {\n        console.warn(\n          `Unable to get gating information. Gated features will not be available in the local dev server.`\n        );\n      }\n    }\n\n    try {\n      const secretsResponse = await fetchSecrets(authedPortalId);\n      if (cmsAssetConfig.secretNames && secretsResponse) {\n        secretNames = secretsResponse.results.filter((secretName: string) =>\n          cmsAssetConfig.secretNames.includes(secretName)\n        );\n\n        if (secretNames.length < cmsAssetConfig.secretNames.length) {\n          const missingSecrets = cmsAssetConfig.secretNames.filter(\n            (secretName: string) =>\n              secretsResponse.results.includes(secretName) === false\n          );\n          console.error(\n            `Secrets ${missingSecrets.join(\n              ', '\n            )} could not be found as initialized for this account, be sure to use \\`hs secrets add\\``\n          );\n        }\n      }\n    } catch (error) {\n      handleSecretsError(error);\n    }\n  } else {\n    console.warn(\n      `Couldn't find an account to use, make sure there is hubspot.config.yaml in this folder (or a parent).\nIf needed you can refer to another config file with --config.\n\nLocal proxy functionality and module preview routes will not work without setting up authentication. You can work purely on modules locally at \"/module/[module_name]\", however the experience may be degraded do to missing account data.`\n    );\n\n    // Rely only on secret names in cms-assets.json if not authenticated\n    // (to make sure that getting secrets from .env still works)\n    if (cmsAssetConfig.secretNames?.length > 0) {\n      secretNames = cmsAssetConfig.secretNames;\n    }\n  }\n\n  setTrackingInfo(authedPortalId, authedEnv);\n  sendTrackingRequest('start-dev-server');\n\n  let domainsToProxy: string[] = [];\n\n  if (authedPortalId) {\n    try {\n      const portalDomains = await fetchWebsiteDomainNames(authedPortalId);\n      domainsToProxy = (process.env.DOMAINS_TO_PROXY || '')\n        .split(',')\n        .filter((d) => !!d);\n      domainsToProxy = [...domainsToProxy, ...portalDomains];\n    } catch (e) {\n      if (e instanceof MissingScopeError) {\n        logMissingScopeWarning(e);\n      } else {\n        const failedDomainFetchMessages = [\n          \"Failed to fetch the portal's domains, as a result:\",\n          \"- HTTPS proxying won't work with them.\",\n          \"- Proxying to serverless functions won't work.\",\n        ]\n          .map((msg) => wrapMessageInColor('yellow', msg))\n          .join('\\n');\n        console.warn(failedDomainFetchMessages);\n      }\n    }\n  }\n\n  let authedHublet: Hublet;\n  try {\n    const accountInformation = await hsCliHttp.get<any>(authedPortalId, {\n      url: '/account-info/v3/details',\n    });\n    authedHublet = accountInformation.dataHostingLocation;\n  } catch (e) {\n    authedHublet = 'na1';\n  }\n\n  const absoluteWebRoot = normalizePath(path.resolve(process.cwd(), webRoot));\n  const [__webRootProjectFolder, webRootProjectComponentFolder] =\n    absoluteWebRoot.replace(/\\/$/, '').split('/').slice(-2);\n\n  const projectConfigPath = findHSProjectJson(absoluteWebRoot);\n\n  if (authedPortalId) {\n    await validateHSPlatform(projectConfigPath, authedPortalId);\n  }\n\n  const viteServer = await createViteDevServer(\n    absoluteWebRoot,\n    PORT,\n    sslEnabledOption,\n    domainsToProxy,\n    jsRenderingGates,\n    secretNames\n  );\n\n  // Start file watcher for type gen from fields.(jsx|json)\n  if (fieldGenEnabledOption) {\n    startFieldsTypeGenWatcher(viteServer, absoluteWebRoot);\n  }\n\n  // Get https key and cert from the vite config set by vite-plugin-mkcert (if it worked  )\n  const viteHTTPSConfig = viteServer.config.server.https as https.ServerOptions;\n  const httpsKey = viteHTTPSConfig ? viteHTTPSConfig.key : null;\n  const httpsCert = viteHTTPSConfig ? viteHTTPSConfig.cert : null;\n  const projectName = getProjectNameFromHSConfig(projectConfigPath);\n\n  const httpServers = [];\n  const expressServer = express();\n  expressServer.locals.devServerHost = 'hslocal.net';\n  expressServer.locals.devServerPort = PORT;\n  expressServer.locals.webRoot = webRoot;\n  expressServer.locals.viteServer = viteServer;\n  expressServer.locals.authedPortalId = authedPortalId;\n  expressServer.locals.authedEnv = authedEnv;\n  expressServer.locals.authedHublet = authedHublet;\n  expressServer.locals.storybookEnabled = storybook;\n  expressServer.locals.storybookPort = STORYBOOK_PORT;\n  expressServer.locals.projectName = projectName;\n  expressServer.locals.projectComponentPath = webRootProjectComponentFolder;\n  expressServer.locals.jsRenderingGates = jsRenderingGates;\n  expressServer.locals.domainsToProxy = domainsToProxy;\n\n  expressServer.use(bodyParser.json());\n\n  expressServer.use(\n    BASE_PATH,\n    await createDevServerRoutes(viteServer, storybook ? STORYBOOK_PORT : null)\n  );\n\n  if (sslEnabledOption) {\n    if (httpsKey && httpsCert) {\n      const { server, innerHTTPServer, innerHTTPSServer } =\n        createHttpsRedirectingServer(\n          { key: httpsKey, cert: httpsCert },\n          expressServer\n        );\n\n      server.listen(PORT);\n\n      httpServers.push(server);\n      // Not sure if we need to worry about closing all of these, but\uD83E\uDD37\n      httpServers.push(innerHTTPServer);\n      httpServers.push(innerHTTPSServer);\n    } else {\n      console.error('Failed to start a HTTPS server, try --no-ssl');\n      process.exit(1);\n    }\n  } else {\n    const httpServer = http.createServer(expressServer);\n    httpServer.listen(PORT);\n    httpServers.push(httpServer);\n  }\n\n  if (!process.env.IN_CODESANDBOX && !process.env.CODESANDBOX_HOST) {\n    startShadowDevServer(PORT, SHADOW_PORT, projectName, jsRenderingGates);\n  }\n\n  let extraServerInfo = '';\n  const protocol = sslEnabledOption ? 'https' : 'http';\n\n  if (authedPortalId) {\n    extraServerInfo += `, hubid=${authedPortalId}`;\n  }\n\n  if (authedEnv && authedEnv !== 'prod') {\n    extraServerInfo += `, env=${authedEnv}`;\n  }\n\n  console.log(\n    `\nHubSpot CMS dev server hosting: ${projectName}/${expressServer.locals.projectComponentPath} (at ${protocol}://hslocal.net:${PORT}${extraServerInfo})\n`\n  );\n\n  if (storybook) {\n    const packageRoot = path.dirname(url.fileURLToPath(import.meta.url));\n\n    const configPath = path.resolve(packageRoot, './storybook-main');\n\n    sendTrackingRequest('start-storybook');\n\n    const storybookProcess = spawn(\n      'sb',\n      [\n        'dev',\n        '-p',\n        STORYBOOK_PORT.toString(),\n        '-c',\n        configPath,\n        '--quiet',\n        '--no-open',\n      ],\n      {\n        cwd: process.cwd(),\n        env: {\n          ...process.env,\n          portalId: authedPortalId.toString(),\n          hsEnv: authedEnv,\n          hublet: authedHublet,\n          WEB_ROOT: path.join(webRoot, 'components'),\n        },\n      }\n    );\n\n    console.log(\n      wrapMessageInColor(\n        'yellow',\n        `Starting storybook server on port ${STORYBOOK_PORT}`\n      )\n    );\n\n    storybookProcess.stdout\n      .pipe(\n        new Transform({\n          transform(chunk, _encoding, callback) {\n            callback(null, wrapMessageInColor('yellow', chunk.toString()));\n          },\n        })\n      )\n      .pipe(process.stdout);\n\n    storybookProcess.stderr\n      .pipe(\n        new Transform({\n          transform(chunk, _encoding, callback) {\n            callback(null, wrapMessageInColor('red', chunk.toString()));\n          },\n        })\n      )\n      .pipe(process.stderr);\n  }\n\n  // Return hook to shut down server gracefully\n  return {\n    close: () => {\n      const serverClosePromises = httpServers.map(\n        (server) =>\n          new Promise((resolve) => {\n            server.close(() => {\n              resolve(null);\n            });\n          })\n      );\n      return Promise.allSettled([...serverClosePromises, viteServer.close()]);\n    },\n  };\n}\n\nexport default createDevServer;\n", "/* hs-eslint ignored failing-rules */\n/* eslint-disable require-await */\n\nimport { ViteDevServer } from 'vite';\nimport { Request, Response, Router } from 'express';\nimport { createProxyMiddleware } from 'http-proxy-middleware';\nimport partialRouteHandler from './partial.js';\nimport linksToAllPartialsRouteHandler from './linksToAllPartialsRouteHandler.js';\nimport linksToAllModulesRouteHandler from './linksToAllModulesRouteHandler.js';\nimport moduleRouteHandler from './module.js';\nimport proxyPageRouteHandler from './proxyPageRouteHandler.js';\nimport proxyPageResourceRedirect from './proxyPageResourceRedirect.js';\nimport homeRouteHandler from './homeRouteHandler.js';\nimport { debug } from '../lib/debug.js';\nimport { VALID_PROXY_DOMAIN_SUFFIXES } from '../proxyPage/constants.js';\nimport proxyPathPageRouteHandler from './proxyPathPageRouteHandler.js';\nimport proxyPathPageResourceRedirect from './proxyPathPageResourceRedirect.js';\nimport proxyServerlessHandler from './proxyServerlessHandler.js';\nimport modulePreviewRouteHandler from './modulePreviewRouteHandler.js';\n\nconst STORYBOOK_DOMAINS = VALID_PROXY_DOMAIN_SUFFIXES.map(\n  (domain) => `storybook.${domain}`\n);\n\nconst createDevServerRoutes = async (\n  viteServer: ViteDevServer,\n  storybookPort?: number\n) => {\n  const devServerApp = Router();\n\n  // Debug incoming requests, enable with the DEBUG=cms-dev-server env variable\n  devServerApp.use((request: Request, response: Response, next) => {\n    const { method, url, hostname } = request;\n    debug(`${method}:${hostname}${url}`);\n    next();\n  });\n\n  if (storybookPort) {\n    devServerApp.use(\n      createProxyMiddleware(\n        (__pathname, req) => STORYBOOK_DOMAINS.includes(req.hostname),\n        {\n          logLevel: 'warn',\n          target: `http://localhost:${storybookPort}`,\n        }\n      )\n    );\n  }\n  devServerApp.use(viteServer.middlewares);\n  devServerApp.get('/proxy', proxyPathPageRouteHandler);\n  devServerApp.get('/partials/', linksToAllPartialsRouteHandler);\n  devServerApp.get('/partial/:partial', partialRouteHandler);\n  devServerApp.get('/partial/:partial/*', partialRouteHandler);\n\n  devServerApp.get('/preview/module/:moduleName', modulePreviewRouteHandler);\n  devServerApp.get('/modules/', linksToAllModulesRouteHandler);\n  devServerApp.get('/module/:moduleName', moduleRouteHandler);\n  devServerApp.get('/module/:moduleName/*', moduleRouteHandler);\n\n  devServerApp.all('/hs/serverless/*', proxyServerlessHandler);\n  devServerApp.all('/_hcms/api/*', proxyServerlessHandler);\n\n  devServerApp.get('/', homeRouteHandler);\n  devServerApp.get('/*', proxyPathPageResourceRedirect);\n  devServerApp.get('/*', proxyPageResourceRedirect);\n  devServerApp.post('/*', proxyPageResourceRedirect);\n  devServerApp.delete('/*', proxyPageResourceRedirect);\n  devServerApp.head('/*', proxyPageResourceRedirect);\n  devServerApp.put('/*', proxyPageResourceRedirect);\n  devServerApp.options('/*', proxyPageResourceRedirect);\n  devServerApp.get('/*', proxyPageRouteHandler);\n\n  return devServerApp;\n};\n\nexport default createDevServerRoutes;\n", "import path from 'path';\nimport { ModuleNode, normalizePath } from 'vite';\nimport fullOriginalUrlFromRequest from '../lib/fullOriginalUrlFromRequest.js';\nimport renderPartial from '../lib/renderPartial.js';\nimport { createHtmlShellDependingOnRenderContext } from '../lib/templates.js';\nimport { buildStaticEnvConfig } from '@hubspot/cms-components';\nimport packagePath from '../lib/packagePath.js';\nimport {\n  Gate,\n  getEntryPointHash,\n  hasComponentExtension,\n} from '@hubspot/cms-js-internal';\nimport { getEntryPointBasePath } from '../lib/pathHelpers.js';\nimport sendTrackingRequest from '../lib/trackUsage.js';\nimport {\n  renderLocalProjectModulePreview,\n  renderRemoteModulePreview,\n} from '../lib/renderModulePreview.js';\nimport { join as joinPosix } from 'path/posix';\n\nconst partialRouteHandler = async (request, response) => {\n  sendTrackingRequest('view-partial-route');\n  const {\n    authedPortalId,\n    authedEnv,\n    authedHublet,\n    webRoot,\n    viteServer,\n    jsRenderingGates,\n    projectName,\n    projectComponentPath,\n  } = request.app.locals;\n  const partialName = request.params.partial;\n\n  const baseTemplatePath = packagePath(\n    import.meta.url,\n    'html/baseTemplate.html'\n  );\n\n  // todo: use partial prefix const\n  const partialPath = normalizePath(\n    path.resolve(webRoot, 'components/partials/', partialName)\n  );\n\n  const entrypointPath = normalizePath(\n    [\n      '@projects',\n      projectName,\n      projectComponentPath,\n      'components/modules/',\n      partialName,\n    ].join('/')\n  );\n\n  const basePath = getEntryPointBasePath(partialPath);\n\n  const environmentConfig = buildStaticEnvConfig(\n    authedPortalId,\n    authedHublet,\n    authedEnv,\n    false,\n    jsRenderingGates\n  );\n\n  try {\n    const {\n      html: renderedHtml,\n      cssNeeded,\n      renderContext,\n      inlineAssets,\n    } = await renderPartial(\n      viteServer,\n      partialPath,\n      {},\n      fullOriginalUrlFromRequest(request),\n      basePath,\n      environmentConfig,\n      {\n        identifierPrefix: getEntryPointHash(entrypointPath),\n      }\n    );\n\n    let resolvedCss = cssNeeded;\n    let resolvedInlineAssets = inlineAssets;\n    let partialHtml = renderedHtml;\n\n    if (true) {\n      const moduleNode: ModuleNode =\n        await viteServer.moduleGraph.getModuleByUrl(\n          hasComponentExtension(partialPath)\n            ? partialPath\n            : joinPosix(partialPath, 'index')\n        );\n      if (!moduleNode) {\n        throw new Error(`Error: could not find partial: ${partialPath}`);\n      }\n      const moduleInfo = viteServer.pluginContainer.getModuleInfo(\n        moduleNode.id\n      );\n      const moduleMeta = moduleInfo.meta;\n\n      const localProjectModules: any = Object.values(\n        moduleMeta.findCmsModules\n      ).filter((moduleDescriptor: any) =>\n        moduleDescriptor.path.startsWith(\n          `@projects/${projectName}/${projectComponentPath}/components/modules/`\n        )\n      );\n      const remoteModules: any = Object.values(\n        moduleMeta.findCmsModules\n      ).filter(\n        (moduleDescriptor: any) =>\n          !moduleDescriptor.path.startsWith(\n            `@projects/${projectName}/${projectComponentPath}/components/modules/`\n          )\n      );\n      const remoteModulePreviewPromises = [];\n      const localProjectModulePreviewPromises = [];\n      for (const remoteModule of remoteModules) {\n        remoteModulePreviewPromises.push(\n          renderRemoteModulePreview(\n            remoteModule.path,\n            authedPortalId,\n            authedEnv,\n            request.get('COOKIE')\n          ).then((result) => ({\n            remoteModule,\n            result,\n          }))\n        );\n      }\n      for (const localProjectModule of localProjectModules) {\n        const modulePlaceholder = `<!-- hs-module-placeholder-${localProjectModule.name} -->`;\n        if (renderedHtml.includes(modulePlaceholder)) {\n          localProjectModulePreviewPromises.push(\n            renderLocalProjectModulePreview(\n              path.basename(localProjectModule.path),\n              authedPortalId,\n              authedEnv,\n              authedHublet,\n              webRoot,\n              viteServer,\n              jsRenderingGates,\n              projectName,\n              projectComponentPath,\n              fullOriginalUrlFromRequest(request),\n              request.get('COOKIE')\n            ).then((result) => ({\n              localProjectModule,\n              result,\n            }))\n          );\n        }\n      }\n      const [remoteModuleResults, localProjectModuleResults] =\n        await Promise.all([\n          Promise.all(remoteModulePreviewPromises),\n          Promise.all(localProjectModulePreviewPromises),\n        ]);\n\n      // replace remote module placeholders\n      for (const { remoteModule, result } of remoteModuleResults) {\n        partialHtml = partialHtml.replace(\n          `<!-- hs-module-placeholder-${remoteModule.name} -->`,\n          result.html\n        );\n        resolvedCss = resolvedCss.concat(result.cssNeeded);\n      }\n\n      // replace local project module placeholders\n      for (const { localProjectModule, result } of localProjectModuleResults) {\n        const modulePlaceholder = `<!-- hs-module-placeholder-${localProjectModule.name} -->`;\n        renderContext.islands.push(...result.renderContext.islands);\n        resolvedCss = resolvedCss.concat(result.cssNeeded);\n        resolvedInlineAssets = resolvedInlineAssets.concat(result.inlineAssets);\n        partialHtml = partialHtml.replace(modulePlaceholder, result.html);\n      }\n    }\n\n    const htmlShell = await createHtmlShellDependingOnRenderContext(\n      baseTemplatePath,\n      request.originalUrl,\n      `Partial: ${partialPath}`,\n      renderContext,\n      viteServer,\n      jsRenderingGates\n    );\n\n    const html = htmlShell\n      .replace(\n        '<!--headend-->',\n        [\n          resolvedCss,\n          ...resolvedInlineAssets.map((inlineAsset) => inlineAsset.html),\n        ].join('\\n')\n      )\n      .replace(`<!--ssr-outlet-->`, partialHtml);\n\n    response.status(200).set({ 'Content-Type': 'text/html' }).end(html);\n  } catch (e) {\n    console.error(e);\n    viteServer.ssrFixStacktrace(e);\n\n    response\n      .status(500)\n      .end(`Error rendering partial (${partialName})\\n\\n${e.stack}`);\n  }\n};\n\nexport default partialRouteHandler;\n", "import { Request } from 'express';\n\nexport default function fullOriginalUrlFromRequest(request: Request) {\n  return `${request.protocol}://${request.get('host')}${request.originalUrl}`;\n}\n", "import { EnvironmentConfig } from '@hubspot/cms-components/config';\nimport { ViteDevServer } from 'vite';\nimport { join as joinPosix } from 'path/posix';\nimport { RenderToPipeableStreamOptions } from 'react-dom/server';\nimport renderComponentWithCSS from './renderComponentWithCSS.js';\nimport { logPartialInfo } from './renderHelpers.js';\nimport { hasComponentExtension } from '@hubspot/cms-js-internal';\n\nconst lookForModuleInFolder = async (\n  modulePath: string,\n  viteServer: ViteDevServer\n): Promise<[any, string]> => {\n  let componentModule: any;\n  const insideFolderPath = joinPosix(modulePath, 'index');\n\n  try {\n    componentModule = await viteServer.ssrLoadModule(insideFolderPath);\n  } catch (e) {\n    if (!e.message.includes('Failed to load url')) {\n      throw e;\n    }\n  }\n\n  return [componentModule, insideFolderPath];\n};\n\nasync function renderPartial(\n  viteServer: ViteDevServer,\n  partialPath: string,\n  props: any,\n  pageUrl: string,\n  basePath: string,\n  environmentConfig: EnvironmentConfig,\n  renderOptions?: RenderToPipeableStreamOptions\n) {\n  try {\n    logPartialInfo(partialPath, props);\n  } catch (e) {\n    console.log('unable to log partial prop info');\n    console.error(e);\n  }\n\n  let componentModule: any;\n  let resolvedPath: string;\n  if (!hasComponentExtension(partialPath)) {\n    [componentModule, resolvedPath] = await lookForModuleInFolder(\n      partialPath,\n      viteServer\n    );\n  }\n\n  if (!componentModule) {\n    componentModule = await viteServer.ssrLoadModule(partialPath);\n    resolvedPath = componentModule ? partialPath : undefined;\n  }\n\n  if (!componentModule) {\n    throw new Error(`Couldn't find partial: ${partialPath}`);\n  }\n\n  const Component = componentModule.default;\n\n  if (!Component) {\n    throw new Error(`Couldn't find default export on partial: ${resolvedPath}`);\n  }\n\n  return renderComponentWithCSS(\n    viteServer,\n    resolvedPath,\n    Component,\n    { props },\n    pageUrl,\n    basePath,\n    undefined, // contextOptions\n    environmentConfig,\n    renderOptions\n  );\n}\n\nexport default renderPartial;\n", "import { ViteDevServer } from 'vite';\nimport { ComponentType } from 'react';\nimport {\n  RenderToPipeableStreamOptions,\n  renderToStaticMarkup,\n} from 'react-dom/server';\nimport { ServerRenderContextValue } from '@hubspot/cms-components';\nimport { EnvironmentConfig } from '@hubspot/cms-components/config';\nimport { InlineAsset, StaticAsset } from '@hubspot/cms-js-internal';\nimport packagePath from './packagePath.js';\n\nimport { getComponentPaths } from './pathHelpers.js';\n\nexport type RenderResult = {\n  html: string;\n  inlineAssets?: InlineAsset[];\n  cssNeeded: string;\n  renderContext: ServerRenderContextValue;\n};\n\nasync function renderComponentWithCSS(\n  viteServer: ViteDevServer,\n  componentPath: string,\n  Component: ComponentType,\n  propsAndExtraDeps: any,\n  pageUrl: string,\n  entryPointBasePath: string,\n  contextOptions,\n  environmentConfig: EnvironmentConfig,\n  renderOptions: RenderToPipeableStreamOptions,\n  getServerSideProps?: Function,\n  modifyHtmlCallback?: (\n    html: string,\n    renderContext: ServerRenderContextValue,\n    staticAssets: StaticAsset[]\n  ) => string\n): Promise<RenderResult> {\n  const internalSsrPath = packagePath(import.meta.url, 'internalSsr');\n  // Need to make sure rendering happens in Vite SSR context\n  const { renderComponentOnServer, collectCssInDev } =\n    await viteServer.ssrLoadModule(internalSsrPath);\n\n  const [, componentPathWithExtension] = getComponentPaths(\n    viteServer,\n    componentPath\n  );\n\n  const renderResult: {\n    html: string;\n    renderContext: ServerRenderContextValue;\n  } = await renderComponentOnServer(\n    Component,\n    propsAndExtraDeps,\n    pageUrl,\n    environmentConfig,\n    entryPointBasePath,\n    contextOptions,\n    renderOptions,\n    getServerSideProps\n  );\n\n  let html = renderResult.html;\n  const renderContext = renderResult.renderContext;\n\n  if (modifyHtmlCallback) {\n    html = modifyHtmlCallback(\n      html,\n      renderContext,\n      [] // Build-time generated static asset arracy is only available when deployed\n    );\n  }\n\n  const cssNeeded = collectCssInDev(componentPathWithExtension, viteServer);\n\n  let inlineAssets = [];\n  if (renderContext.inlineAssets && Array.isArray(renderContext.inlineAssets)) {\n    inlineAssets = renderContext.inlineAssets.map(\n      ({ render: staticAssetRenderFunc, ...staticAsset }) => ({\n        ...staticAsset,\n        html: renderToStaticMarkup(staticAssetRenderFunc()),\n      })\n    );\n  }\n\n  return { html, inlineAssets, cssNeeded, renderContext };\n}\n\nexport default renderComponentWithCSS;\n", "import path from 'path';\nimport url from 'url';\nimport { normalizePath } from 'vite';\n\nexport default function packagePath(\n  metaUrl: string,\n  projectPath: string\n): string {\n  if (process.env.DEV_SERVER_ENV === 'production') {\n    return normalizePath(\n      path.resolve(path.dirname(url.fileURLToPath(metaUrl)), projectPath)\n    );\n  }\n\n  const parentDirPath = normalizePath(path.dirname(url.fileURLToPath(metaUrl)));\n  const subPath = parentDirPath.replace(/^.+cms-dev-server\\/src\\//, '');\n  const subPathParentDirs = subPath.split('/').map(() => '..');\n\n  return path.resolve(\n    path.dirname(url.fileURLToPath(metaUrl)),\n    path.join(...subPathParentDirs, projectPath)\n  );\n}\n", "import path from \"path\";\nimport { createHash } from \"crypto\";\nimport fs, { readFileSync, existsSync, readdirSync, lstatSync } from \"fs\";\nimport { join } from \"path/posix\";\nconst COMPONENT_EXTENSIONS = [\".jsx\", \".tsx\", \".js\", \".ts\"];\nconst ENTRY_POINTS_PATH = \"components/partials/\";\nconst MODULE_FOLDER_PATH = \"components/modules/\";\nconst VIRTUAL_ISLAND_RUNTIME = \"virtual:island-runtime\";\nconst VIRTUAL_CONFIG_SETUP = \"virtual:config-setup\";\nconst CSS_LANGS_RE = /\\.(css|less|sass|scss|styl|stylus|pcss|postcss|sss)(?:$|\\?)/;\nconst collectCssModules = (modulePathToStartWith, viteServer, cssModulesImported = /* @__PURE__ */ new Set()) => {\n  const appModulesForPath = viteServer.moduleGraph.fileToModulesMap.get(\n    modulePathToStartWith\n  );\n  if (!appModulesForPath || appModulesForPath.size === 0) {\n    throw new Error(`No modules at: ${modulePathToStartWith}`);\n  } else if (appModulesForPath.size > 1) {\n    throw new Error(`More than one module at: ${modulePathToStartWith}`);\n  }\n  const appModule = Array.from(appModulesForPath.values())[0];\n  const allServerSideModulesImported = /* @__PURE__ */ new Set();\n  const newCssModules = [];\n  const moduleQueue = Array.from(appModule.importedModules);\n  for (const importedModule of moduleQueue) {\n    if (allServerSideModulesImported.has(importedModule.id)) {\n      continue;\n    }\n    allServerSideModulesImported.add(importedModule.id);\n    const isCss = CSS_LANGS_RE.test(importedModule.file);\n    const moduleModulesToQueue = Array.from(importedModule.importedModules);\n    if (isCss && !cssModulesImported.has(importedModule)) {\n      cssModulesImported.add(importedModule);\n      newCssModules.push(importedModule);\n    }\n    moduleQueue.push(...moduleModulesToQueue);\n  }\n  return newCssModules;\n};\nfunction createPreloadLink(assetPath, basePath = \"\") {\n  if (assetPath && assetPath[0] !== \"/\") {\n    assetPath = `/${assetPath}`;\n  }\n  if (assetPath.endsWith(\".js\")) {\n    return `<link rel=\"modulepreload\" crossorigin href=\"${basePath}${assetPath}\">`;\n  } else if (CSS_LANGS_RE.test(assetPath)) {\n    return `<link rel=\"stylesheet\" href=\"${basePath}${assetPath}?css\">`;\n  } else if (assetPath.endsWith(\".woff\")) {\n    return ` <link rel=\"preload\" href=\"${basePath}${assetPath}\" as=\"font\" type=\"font/woff\" crossorigin>`;\n  } else if (assetPath.endsWith(\".woff2\")) {\n    return ` <link rel=\"preload\" href=\"${basePath}${assetPath}\" as=\"font\" type=\"font/woff2\" crossorigin>`;\n  } else if (assetPath.endsWith(\".gif\")) {\n    return ` <link rel=\"preload\" href=\"${basePath}${assetPath}\" as=\"image\" type=\"image/gif\">`;\n  } else if (assetPath.endsWith(\".jpg\") || assetPath.endsWith(\".jpeg\")) {\n    return ` <link rel=\"preload\" href=\"${basePath}${assetPath}\" as=\"image\" type=\"image/jpeg\">`;\n  } else if (assetPath.endsWith(\".png\")) {\n    return ` <link rel=\"preload\" href=\"${basePath}${assetPath}\" as=\"image\" type=\"image/png\">`;\n  } else {\n    throw new Error(`Unknown preload type for ${assetPath}`);\n  }\n}\nconst collectCssInDev = (modulePathToStartWith, viteServer, cssModulesImported = /* @__PURE__ */ new Set()) => {\n  return `${collectCssModules(\n    modulePathToStartWith,\n    viteServer,\n    cssModulesImported\n  ).map((cssModule) => createPreloadLink(cssModule.url)).join(\"\\n\")}\n`;\n};\nconst badInlineJsChars = /[\\u2028\\u2029<>/]/g;\nconst inlineJsEscapeChars = {\n  \"\\u2028\": \"\\\\u2028\",\n  \"\\u2029\": \"\\\\u2029\",\n  \"<\": \"\\\\u003C\",\n  \">\": \"\\\\u003E\",\n  \"/\": \"\\\\u002F\"\n};\nfunction escapeChar(unsafeChar) {\n  return inlineJsEscapeChars[unsafeChar];\n}\nfunction escapeForInlineJS(input) {\n  return input.replace(badInlineJsChars, escapeChar);\n}\nfunction jsonStringifyAndEscapeForInlineJS(input, { baseIndent = 0, jsonIndent = 2, prettyPrint = true } = {}) {\n  const indentString = \" \".repeat(baseIndent);\n  jsonIndent = prettyPrint ? jsonIndent : void 0;\n  return escapeForInlineJS(JSON.stringify(input, null, jsonIndent)).replace(\n    /\\n/gm,\n    `\n${indentString}`\n  );\n}\nlet viteRoot;\nlet viteCommand;\nfunction resolveIslandPlugin(islandsSet) {\n  return {\n    enforce: \"pre\",\n    name: \"resolve-islands\",\n    configResolved(config) {\n      viteRoot = config.root;\n      viteCommand = config.command;\n    },\n    load(id) {\n      if (id.endsWith(\"?island\") || id.endsWith(\"?client\")) {\n        const [idWithNoParam] = id.split(\"?\");\n        const islandModuleImportPath = `${idWithNoParam}?client-entry`;\n        const componentExtension = path.extname(idWithNoParam);\n        const componentFilenameWithNoExtension = path.basename(\n          idWithNoParam,\n          componentExtension\n        );\n        const modulePath = idWithNoParam.replace(`${viteRoot}/`, \"\");\n        const moduleId = (viteCommand === \"serve\" ? idWithNoParam : modulePath).concat(\"?client-entry\");\n        if (islandsSet) {\n          islandsSet.add(moduleId);\n        }\n        return `\n            const moduleId = '${moduleId}';\n\n            const lazyComponent = () => import('${islandModuleImportPath}');\n            lazyComponent.moduleName = '${componentFilenameWithNoExtension}';\n            lazyComponent.moduleId = moduleId;\n\n            export default lazyComponent;\n          `;\n      }\n      return null;\n    }\n  };\n}\nfunction resolveIslandToPlainModulePlugin(enabled = true) {\n  return {\n    enforce: \"pre\",\n    name: \"resolve-islands-to-plain\",\n    configResolved(config) {\n      viteRoot = config.root;\n      viteCommand = config.command;\n    },\n    async resolveId(id, importer, options) {\n      if (enabled && (id.endsWith(\"?island\") || id.endsWith(\"?client\"))) {\n        const newId = id.replace(\"?island\", \"\").replace(\"?client\", \"\");\n        const resolution = await this.resolve(newId, importer, {\n          skipSelf: true,\n          ...options\n        });\n        if (resolution) {\n          return resolution;\n        }\n      }\n      return null;\n    }\n  };\n}\nfunction resolveIslandToPlainModuleNoopPlugin() {\n  return resolveIslandToPlainModulePlugin(false);\n}\nconst clientRenderIsland = \"import type { RenderableIsland } from '@hubspot/cms-components';\\nimport * as cmsComponents from '@hubspot/cms-components';\\nimport { ClientRenderContextProvider } from '@hubspot/cms-components';\\nimport { Suspense } from 'react';\\nimport ReactDOMClient from 'react-dom/client';\\n\\nconst buildIslandIdentifierPrefix =\\n  cmsComponents.buildIslandIdentifierPrefix || ((id) => id);\\n\\nexport function clientRenderIsland(\\n  renderableIsland: RenderableIsland,\\n  Component: React.ComponentType<any>\\n) {\\n  const {\\n    island,\\n    rootElement,\\n    postHydration,\\n    pageUrl,\\n    islands,\\n    basePath,\\n    WrapperModule,\\n  } = renderableIsland;\\n  let reactRoot: any;\\n\\n  const rootOptions = {\\n    // Ensure useId is unique across island roots\\n    identifierPrefix: buildIslandIdentifierPrefix(renderableIsland.island.id),\\n  };\\n\\n  let innerComponent = <Component islandId={island.id} {...island.props} />;\\n  if (WrapperModule) {\\n    innerComponent = <WrapperModule>{innerComponent}</WrapperModule>;\\n  }\\n\\n  const elementsToHydrate = (\\n    <Suspense fallback={`client hydrate fail/waiting for ${island.id}`}>\\n      <ClientRenderContextProvider\\n        pageUrl={pageUrl}\\n        islands={islands}\\n        onTopLevelHydrationFinish={postHydration}\\n        island={island}\\n        basePath={basePath}\\n      >\\n        {innerComponent}\\n      </ClientRenderContextProvider>\\n    </Suspense>\\n  );\\n\\n  if (island.clientOnly) {\\n    reactRoot = ReactDOMClient.createRoot(rootElement, rootOptions);\\n    reactRoot.render(elementsToHydrate);\\n  } else {\\n    reactRoot = ReactDOMClient.hydrateRoot(\\n      rootElement,\\n      elementsToHydrate,\\n      rootOptions\\n    );\\n  }\\n  return reactRoot;\\n}\\n\";\nconst virtualClientRenderIslandModuleId = \"virtual:clientRenderIsland.tsx\";\nfunction clientIslandEntryPlugin() {\n  return {\n    enforce: \"pre\",\n    name: \"client-island-entry-plugin\",\n    resolveId(id) {\n      if (id === virtualClientRenderIslandModuleId) {\n        return virtualClientRenderIslandModuleId;\n      }\n      return null;\n    },\n    load(id) {\n      if (id.endsWith(\"?client-entry\")) {\n        const [idWithNoParam] = id.split(\"?\");\n        return `\n            import { clientRenderIsland } from '${virtualClientRenderIslandModuleId}';\n            import Component from '${idWithNoParam}';\n\n            export function render(island) {\n              return clientRenderIsland(island, Component)\n            }\n\n            export default Component;\n          `;\n      }\n      if (id === virtualClientRenderIslandModuleId) {\n        return clientRenderIsland;\n      }\n      return null;\n    }\n  };\n}\nconst scriptTagToLogServerMessages = (messagesForBrowser, groupLabel, nonceAttribute) => {\n  if (!messagesForBrowser) {\n    return \"\";\n  }\n  const consoleLines = [];\n  for (const message of messagesForBrowser) {\n    let funcString = \"console.log\";\n    if (message.level === \"error\") {\n      funcString = \"console.error\";\n    }\n    if (message.level === \"warn\") {\n      funcString = \"console.warn\";\n    }\n    const argString = message.parameters.map((arg) => JSON.stringify(arg)).join(\", \");\n    consoleLines.push(`  ${funcString}(${argString});`);\n  }\n  let groupStart = \"\";\n  let groupEnd = \"\";\n  if (groupLabel !== void 0 && groupLabel !== null) {\n    groupStart = `\n  console.group(${JSON.stringify(groupLabel)});`;\n    groupEnd = `  console.groupEnd()\n`;\n  }\n  return `<script ${nonceAttribute}>${groupStart}\n${consoleLines.join(\"\\n\")}\n${groupEnd}<\\/script>\n`;\n};\nconst getComponentExtension = (componentPath) => {\n  const filteredExtensions = COMPONENT_EXTENSIONS.filter(\n    (ext) => componentPath.endsWith(ext)\n  );\n  if (filteredExtensions.length === 1) {\n    return filteredExtensions[0];\n  }\n  return void 0;\n};\nconst hasComponentExtension = (componentPath) => {\n  return !!getComponentExtension(componentPath);\n};\nconst isStorybookStory = (componentPath) => {\n  return !!path.basename(componentPath, path.extname(componentPath)).endsWith(\".stories\");\n};\nconst removeComponentExtension = (componentPath) => {\n  const ext = getComponentExtension(componentPath);\n  if (ext == null) {\n    return componentPath;\n  }\n  return componentPath.slice(0, -1 * ext.length);\n};\nfunction getEntryPointHash(entryPoint) {\n  return createHash(\"md5\").update(entryPoint).digest(\"hex\").slice(0, 6);\n}\nfunction getEntryPointHashWithIndexSuffix(entryPoint, index) {\n  const renderIndexSuffix = index != null ? `i${index}` : \"\";\n  return `${getEntryPointHash(entryPoint)}${renderIndexSuffix}`;\n}\nconst COMBINED_REACT_BASE_PATH = \"https://static.hsappstatic.net/cms-js-static/ex/js/react/v18\";\nconst ISLAND_RUNTIME_CONFIG_BASE_PATH = \"https://static.hsappstatic.net/cms-js-static/ex/js/island-runtime/v1\";\nfunction getCombinedReactUrl() {\n  const hsEnv = process.env.HS_ENV;\n  const fileVersion = hsEnv === \"prod\" ? `react-combined.mjs` : \"react-combined-qa.mjs\";\n  return `${COMBINED_REACT_BASE_PATH}/${fileVersion}`;\n}\nfunction getIslandRuntimeConfigUrl() {\n  const hsEnv = process.env.HS_ENV;\n  const fileVersion = hsEnv === \"prod\" ? `island-runtime.mjs` : \"island-runtime-qa.mjs\";\n  return `${ISLAND_RUNTIME_CONFIG_BASE_PATH}/${fileVersion}`;\n}\nfunction includesHublDataReference(templateSource) {\n  const hublDataPattern = /\\{%\\s+set\\s+(experimentalHublData|hublData)\\s*=/;\n  return !!templateSource.match(hublDataPattern);\n}\nconst removeIndexFromPath = (id) => {\n  return id.replace(/\\/index\\.[jt]sx?$/, \"\");\n};\nconst removeIndexOrTrailingJsFromPath = (id) => {\n  return removeIndexFromPath(id).replace(/\\.[jt]sx?$/, \"\");\n};\nconst HEALTHCHECKS_ENABLED_DEFAULT = true;\nconst HEALTHCHECKS_STRICT_DEFAULT = false;\nfunction getCMSAssetConfig(webRoot) {\n  const cmsAssetsPath = path.join(webRoot, \"cms-assets.json\");\n  const cmsThemePath = path.join(webRoot, \"theme.json\");\n  const configPathToUse = fs.existsSync(cmsAssetsPath) ? cmsAssetsPath : cmsThemePath;\n  const parsedConfig = JSON.parse(\n    fs.readFileSync(configPathToUse).toString()\n  );\n  return parsedConfig;\n}\nfunction getCMSAssetConfigIfExists(webRoot) {\n  try {\n    return getCMSAssetConfig(webRoot);\n  } catch (e) {\n    console.error(\n      `Error finding or parsing cms-assets.json in ${webRoot}, but ignoring for now`\n    );\n    return {};\n  }\n}\nfunction areBuildHealthChecksEnabled(config) {\n  var _a, _b;\n  return ((_b = (_a = config.buildConfig) == null ? void 0 : _a.healthchecks) == null ? void 0 : _b.enabled) ?? HEALTHCHECKS_ENABLED_DEFAULT;\n}\nfunction doHealthChecksFailTheBuild(config) {\n  var _a, _b;\n  return ((_b = (_a = config.buildConfig) == null ? void 0 : _a.healthchecks) == null ? void 0 : _b.strict) ?? HEALTHCHECKS_STRICT_DEFAULT;\n}\nfunction getServerIncludePrebundleDepPatterns(config) {\n  var _a, _b;\n  return ((_b = (_a = config.buildConfig) == null ? void 0 : _a.serverPrebundling) == null ? void 0 : _b.include) ?? [];\n}\nconst BUILD_INFO_PATH = \"/build-info.json\";\nfunction getBuildInfo(buildDir) {\n  try {\n    const buildInfo = JSON.parse(\n      readFileSync(path.join(buildDir, BUILD_INFO_PATH)).toString()\n    );\n    return buildInfo;\n  } catch (e) {\n    throw new Error(`Error loading build-info.json, path: ${BUILD_INFO_PATH}`);\n  }\n}\nfunction getBaseAssetUrlFromBuild(buildDir) {\n  return getBuildInfo(buildDir).baseAssetUrl;\n}\nconst GATES = [\n  \"CMS:JSRenderer:GetServerSideProps\",\n  \"CMS:JSRenderer:ModuleHubl\",\n  \"CMS:JSRenderer:RemoveCjsPlugin\",\n  \"CMS:JSRenderer:RemoveMockClientEntryPlugin\",\n  \"CMS:JSRenderer:AnalyzeCmsModules\"\n];\nconst ENABLED_FEATURES_GATE_MAP = {\n  \"cms:jsr:getServerSideProps\": \"CMS:JSRenderer:GetServerSideProps\",\n  \"cms:jsr:RemoveCjsPlugin\": \"CMS:JSRenderer:RemoveCjsPlugin\",\n  \"cms:jsr:analyzeCmsModules\": \"CMS:JSRenderer:AnalyzeCmsModules\"\n};\nfunction isUngatedFor(gates, gate) {\n  return gates.includes(gate);\n}\nfunction ungatedAtBuildTimeFor(buildDir, gate) {\n  try {\n    const buildInfo = getBuildInfo(buildDir);\n    return isUngatedFor(buildInfo.gates, gate);\n  } catch (e) {\n    return false;\n  }\n}\nconst findAllComponentsIn = (webRoot, componentsFolder) => {\n  const fullComponentsFolderPath = join(webRoot, componentsFolder);\n  const componentsByName = {};\n  if (!existsSync(fullComponentsFolderPath)) {\n    return componentsByName;\n  }\n  readdirSync(fullComponentsFolderPath).forEach((fileOrFolderName) => {\n    const fullPath = join(fullComponentsFolderPath, fileOrFolderName);\n    const subdirPath = join(componentsFolder, fileOrFolderName);\n    const isDirectory = lstatSync(fullPath).isDirectory();\n    if (!isDirectory && hasComponentExtension(fileOrFolderName) && !isStorybookStory(fileOrFolderName)) {\n      const subdirPathNoExtension = removeComponentExtension(subdirPath);\n      componentsByName[subdirPathNoExtension] = subdirPath;\n    } else if (isDirectory) {\n      for (const potentialExtension of COMPONENT_EXTENSIONS) {\n        const potentialIndexModule = join(\n          subdirPath,\n          `index${potentialExtension}`\n        );\n        const fullPotentialPath = join(\n          fullPath,\n          `index${potentialExtension}`\n        );\n        if (existsSync(fullPotentialPath)) {\n          const moduleIndexPathNoExtension = removeComponentExtension(potentialIndexModule);\n          componentsByName[moduleIndexPathNoExtension] = potentialIndexModule;\n          break;\n        }\n      }\n    }\n  });\n  return componentsByName;\n};\nfunction findAllModulesInRoot(webRoot) {\n  const allModuleComponents = findAllComponentsIn(\n    webRoot,\n    \"./components/modules\"\n  );\n  const moduleNames = Object.keys(allModuleComponents).map(\n    (moduleSubpath) => moduleSubpath.replace(\"components/modules/\", \"\").replace(\"/index\", \"\")\n  );\n  const moduleSubpaths = Object.keys(allModuleComponents);\n  return { moduleNames, moduleSubpaths };\n}\nfunction findAllPartialsInRoot(webRoot) {\n  const allPartialComponents = findAllComponentsIn(\n    webRoot,\n    \"./components/partials\"\n  );\n  const partialNames = Object.keys(allPartialComponents).map(\n    (partialSubpath) => partialSubpath.replace(\"components/partials/\", \"\").replace(\"/index\", \"\")\n  );\n  const partialSubpaths = Object.keys(allPartialComponents);\n  return { partialNames, partialSubpaths };\n}\nfunction namespaceModulePropsShape(props) {\n  const {\n    dataQueryResult,\n    hublParameters,\n    fieldValues: passedFieldValues,\n    hublData,\n    experimentalHublData,\n    moduleName,\n    supplementalFieldValues\n  } = props;\n  const oldPropsShape = { ...props };\n  if (oldPropsShape.dataQueryResult) {\n    delete oldPropsShape.dataQueryResult;\n  }\n  if (oldPropsShape.hublParameters) {\n    delete oldPropsShape.hublParameters;\n  }\n  const fieldValues = passedFieldValues || oldPropsShape;\n  return {\n    ...fieldValues,\n    dataQueryResult,\n    fieldValues,\n    hublParameters,\n    hublData,\n    experimentalHublData,\n    moduleName,\n    supplementalFieldValues\n  };\n}\nfunction setIn(object, nestedKeysArray, value) {\n  let curr = object;\n  const finalKey = nestedKeysArray.pop();\n  for (let index = 0; index < nestedKeysArray.length; index++) {\n    const currentKey = nestedKeysArray[index];\n    const nextKey = nestedKeysArray[index + 1];\n    if (Number.isInteger(nextKey) || !nextKey && Number.isInteger(finalKey)) {\n      if (curr[currentKey] === void 0) {\n        curr[currentKey] = [];\n      }\n    }\n    if (curr[currentKey] === void 0) {\n      curr[currentKey] = {};\n    }\n    curr = curr[currentKey];\n  }\n  if (value !== void 0) {\n    curr[finalKey] = value;\n  }\n}\nfunction isStylesheetAsset(staticAsset) {\n  return staticAsset.type === \"stylesheet\";\n}\nexport {\n  COMPONENT_EXTENSIONS,\n  CSS_LANGS_RE,\n  ENABLED_FEATURES_GATE_MAP,\n  ENTRY_POINTS_PATH,\n  GATES,\n  MODULE_FOLDER_PATH,\n  VIRTUAL_CONFIG_SETUP,\n  VIRTUAL_ISLAND_RUNTIME,\n  getBaseAssetUrlFromBuild as a,\n  areBuildHealthChecksEnabled,\n  clientIslandEntryPlugin,\n  collectCssInDev,\n  collectCssModules,\n  doHealthChecksFailTheBuild,\n  escapeForInlineJS,\n  findAllComponentsIn,\n  findAllModulesInRoot,\n  findAllPartialsInRoot,\n  getBuildInfo as g,\n  getCMSAssetConfig,\n  getCMSAssetConfigIfExists,\n  getCombinedReactUrl,\n  getComponentExtension,\n  getEntryPointHash,\n  getEntryPointHashWithIndexSuffix,\n  getIslandRuntimeConfigUrl,\n  getServerIncludePrebundleDepPatterns,\n  hasComponentExtension,\n  includesHublDataReference,\n  isStorybookStory,\n  isStylesheetAsset,\n  isUngatedFor,\n  jsonStringifyAndEscapeForInlineJS,\n  namespaceModulePropsShape,\n  removeComponentExtension,\n  removeIndexFromPath,\n  removeIndexOrTrailingJsFromPath,\n  resolveIslandPlugin,\n  resolveIslandToPlainModuleNoopPlugin,\n  resolveIslandToPlainModulePlugin,\n  scriptTagToLogServerMessages,\n  setIn,\n  ungatedAtBuildTimeFor,\n  virtualClientRenderIslandModuleId\n};\n", "import { jsonStringifyAndEscapeForInlineJS, scriptTagToLogServerMessages } from \"./basicUtils.js\";\nimport { COMPONENT_EXTENSIONS, CSS_LANGS_RE, ENABLED_FEATURES_GATE_MAP, ENTRY_POINTS_PATH, GATES, MODULE_FOLDER_PATH, VIRTUAL_CONFIG_SETUP, VIRTUAL_ISLAND_RUNTIME, areBuildHealthChecksEnabled, clientIslandEntryPlugin, collectCssInDev, collectCssModules, doHealthChecksFailTheBuild, escapeForInlineJS, findAllComponentsIn, findAllModulesInRoot, findAllPartialsInRoot, a, g, getCMSAssetConfig, getCMSAssetConfigIfExists, getCombinedReactUrl, getComponentExtension, getEntryPointHash, getEntryPointHashWithIndexSuffix, getIslandRuntimeConfigUrl, getServerIncludePrebundleDepPatterns, hasComponentExtension, includesHublDataReference, isStorybookStory, isStylesheetAsset, isUngatedFor, namespaceModulePropsShape, removeComponentExtension, removeIndexFromPath, removeIndexOrTrailingJsFromPath, resolveIslandPlugin, resolveIslandToPlainModuleNoopPlugin, resolveIslandToPlainModulePlugin, setIn, ungatedAtBuildTimeFor, virtualClientRenderIslandModuleId } from \"./basicUtils.js\";\nimport * as dotProp from \"dot-prop\";\nimport * as parser from \"@babel/parser\";\nimport _traverse from \"@babel/traverse\";\nimport * as t from \"@babel/types\";\nimport { jsx } from \"react/jsx-runtime\";\nimport stream from \"stream\";\nimport { renderToPipeableStream, renderToStaticMarkup } from \"react-dom/server\";\nimport * as cmsComponents from \"@hubspot/cms-components\";\nimport { ServerRenderContext } from \"@hubspot/cms-components\";\nimport { isValidElement, cloneElement } from \"react\";\nimport \"path\";\nimport \"crypto\";\nimport \"fs\";\nimport \"path/posix\";\nconst { setProperty, getProperty, hasProperty } = dotProp;\nconst serializeIslandDataForInlineScript = (tweakedIslandsArray, perServerRequestData, baseIndent = 0, prettyPrint) => {\n  const islandsArrayToSerialize = tweakedIslandsArray.map(\n    ({\n      id,\n      moduleName,\n      moduleId,\n      props,\n      hydrateOn,\n      clientOnly,\n      priority,\n      url,\n      sharedStateID,\n      supplementalFieldValues,\n      wrapperModuleId,\n      wrapperUrl\n    }) => {\n      const output = {\n        id,\n        moduleName,\n        moduleId,\n        hydrateOn,\n        clientOnly,\n        priority,\n        props,\n        url\n      };\n      if (sharedStateID) {\n        output.sharedStateID = sharedStateID;\n      }\n      if (wrapperModuleId) {\n        output.wrapperModuleId = wrapperModuleId;\n      }\n      if (wrapperUrl) {\n        output.wrapperUrl = wrapperUrl;\n      }\n      const filteredSupplementalFieldValues = filterOutUnreadSupplementalFieldValues(\n        supplementalFieldValues,\n        perServerRequestData.get(\"supplementalFieldValuesRead\")\n      );\n      if (filteredSupplementalFieldValues) {\n        output.supplementalFieldValues = filteredSupplementalFieldValues;\n      }\n      return output;\n    }\n  );\n  return jsonStringifyAndEscapeForInlineJS(islandsArrayToSerialize, {\n    baseIndent,\n    jsonIndent: 2,\n    prettyPrint\n  });\n};\nfunction filterOutUnreadSupplementalFieldValues(supplementalFieldValues, supplementalFieldValuesRead) {\n  if (!supplementalFieldValues) {\n    return supplementalFieldValues;\n  }\n  if (!supplementalFieldValuesRead) {\n    return supplementalFieldValues;\n  }\n  const result = {};\n  Array.from(supplementalFieldValuesRead).forEach((fieldPath) => {\n    if (hasProperty(supplementalFieldValues, fieldPath)) {\n      setProperty(\n        result,\n        fieldPath,\n        getProperty(supplementalFieldValues, fieldPath)\n      );\n    }\n  });\n  return result;\n}\nconst writeSharedStateToJsGlobal = (islands, perServerRequestData, indent = 0, prettyPrint) => {\n  const sharedStateIDs = islands.map((island) => island.sharedStateID).filter((x) => !!x);\n  if (sharedStateIDs.length > 0) {\n    const indentString = \" \".repeat(indent);\n    const stateByID = {};\n    sharedStateIDs.forEach(\n      (id) => stateByID[id] = perServerRequestData.get(id)\n    );\n    const stringifiedState = jsonStringifyAndEscapeForInlineJS(stateByID, {\n      prettyPrint,\n      jsonIndent: 2\n    });\n    return `\n\nvar newState = ${stringifiedState};\nif(window.__hsSSInit) {\n  window.__hsSSInit = Object.assign(window.__hsSSInit, newState);\n} else {\n  window.__hsSSInit = newState;\n}`.replace(/\\n/gm, `\n${indentString}`);\n  }\n  return \"\";\n};\nfunction getIslandUrls(roots, viteDevServer) {\n  return roots.map((island) => {\n    const islandModule = viteDevServer.moduleGraph.getModuleById(\n      island.moduleId\n    );\n    if (!islandModule) {\n      throw new Error(`Unknown island moduleId: ${island.moduleId}`);\n    }\n    let wrapperModule;\n    if (island.wrapperModuleId) {\n      wrapperModule = viteDevServer.moduleGraph.getModuleById(\n        island.wrapperModuleId\n      );\n    }\n    const tweakedIsland = {\n      ...island,\n      url: islandModule.url,\n      wrapperUrl: wrapperModule ? wrapperModule.url : void 0\n    };\n    return tweakedIsland;\n  });\n}\nfunction getPerServerRequestUrls(perServerRequestData, viteDevServer) {\n  if (!perServerRequestData.has(\"sharedStateIDs\")) {\n    return new Map(perServerRequestData);\n  }\n  const perServerRequestDataWithUrls = new Map(\n    perServerRequestData\n  );\n  perServerRequestData.get(\"sharedStateIDs\").forEach((id) => {\n    const reducer = perServerRequestData.get(id);\n    if (reducer.reducerFuncModuleId) {\n      const reducerWithUrl = {\n        ...reducer,\n        reducerFuncModuleUrl: viteDevServer.moduleGraph.getModuleById(\n          reducer.reducerFuncModuleId\n        ).url\n      };\n      perServerRequestDataWithUrls.set(id, reducerWithUrl);\n    }\n  });\n  return perServerRequestDataWithUrls;\n}\nconst createIslandsGlobalJsForClientInDev = (roots, perServerRequestData, viteDevServer, indent, prettyPrint) => {\n  const islands = getIslandUrls(roots, viteDevServer);\n  const perServerRequestDataWithUrls = getPerServerRequestUrls(\n    perServerRequestData,\n    viteDevServer\n  );\n  return `${\" \".repeat(\n    indent\n  )}window.__islands = ${serializeIslandDataForInlineScript(\n    islands,\n    perServerRequestData,\n    indent,\n    prettyPrint\n  )}${writeSharedStateToJsGlobal(\n    islands,\n    perServerRequestDataWithUrls,\n    indent,\n    prettyPrint\n  )}`;\n};\nfunction noncePlaceholderPlugin() {\n  const HS_DEPLOYED = process.env.AWS_EXECUTION_ENV != null || process.env.HS_DEPLOYED === \"true\";\n  return {\n    name: \"hs-nonce-placeholder\",\n    enforce: \"post\",\n    apply() {\n      return HS_DEPLOYED;\n    },\n    transformIndexHtml(html) {\n      const regex = /<(style|script|link) (.*)>/gi;\n      const replacer = (_, p1, p2) => {\n        if (p1 === \"style\" || p1 === \"script\" || // if link, only nonce for stylesheet\n        p1 === \"link\" && p2.includes('rel=\"stylesheet\"')) {\n          const noncePlaceholderValue = p1 === \"script\" ? \"hs-random-nonce\" : \"hs-random-style-nonce\";\n          p2 = `nonce=\"${noncePlaceholderValue}\" ${p2}`;\n        }\n        return `<${p1} ${p2}>`;\n      };\n      return html.replace(regex, replacer);\n    }\n  };\n}\nconst traverse = _traverse.default;\nconst CMS_MODULE_COMPONENT_NAME = \"UnstableModule\";\nfunction findCmsModules(cmsModules = {}) {\n  let config;\n  return {\n    enforce: \"pre\",\n    name: \"findCmsModules\",\n    configResolved(resolvedConfig) {\n      config = resolvedConfig;\n    },\n    transform(code, id) {\n      const moduleInfo = this.getModuleInfo(id);\n      const isExternal = config.command === \"serve\" ? false : moduleInfo.isExternal;\n      if (isExternal || !moduleInfo.id.startsWith(config.root) || !code.includes(CMS_MODULE_COMPONENT_NAME)) {\n        return null;\n      }\n      const localCmsModules = {};\n      const sourceAst = parser.parse(code, {\n        sourceType: \"module\",\n        plugins: [\"jsx\", \"typescript\"]\n      });\n      let unstableModuleLocalName = CMS_MODULE_COMPONENT_NAME;\n      const pluginError = this.error.bind(this);\n      traverse(sourceAst, {\n        ImportDeclaration(path) {\n          if (!t.isStringLiteral(path.node.source, {\n            value: \"@hubspot/cms-components\"\n          })) {\n            return null;\n          }\n          for (const specifier of path.node.specifiers) {\n            if (t.isImportSpecifier(specifier) && t.isIdentifier(specifier.imported, {\n              name: CMS_MODULE_COMPONENT_NAME\n            })) {\n              unstableModuleLocalName = specifier.local.name;\n            }\n          }\n        },\n        JSXOpeningElement(path) {\n          if (!t.isJSXIdentifier(path.node.name, {\n            name: unstableModuleLocalName\n          }) || path.node.attributes.length !== 2) {\n            return null;\n          }\n          let cmsModuleName;\n          let cmsModulePath;\n          for (const prop of path.node.attributes) {\n            if (t.isJSXAttribute(prop) && t.isJSXIdentifier(prop.name, { name: \"name\" }) && t.isStringLiteral(prop.value)) {\n              cmsModuleName = prop.value.value;\n              continue;\n            }\n            if (t.isJSXAttribute(prop) && t.isJSXIdentifier(prop.name, { name: \"path\" }) && t.isStringLiteral(prop.value)) {\n              cmsModulePath = prop.value.value;\n              continue;\n            }\n            pluginError(\n              new Error(\n                `Error: ${id.replace(config.root, \"\")}:${prop.loc.start.line} \"name\" and \"path\" must be primitive strings`\n              )\n            );\n          }\n          const cmsModuleProps = {\n            name: cmsModuleName,\n            path: cmsModulePath\n          };\n          if (Object.hasOwn(localCmsModules, cmsModuleProps.name)) {\n            pluginError(\n              new Error(\n                `Error: multiple <${CMS_MODULE_COMPONENT_NAME} /> with duplicate name: ${cmsModuleProps.name}`\n              )\n            );\n          }\n          localCmsModules[cmsModuleProps.name] = cmsModuleProps;\n        }\n      });\n      return {\n        meta: {\n          findCmsModules: localCmsModules\n        }\n      };\n    },\n    buildEnd(error) {\n      if (error)\n        throw error;\n      const modulesWithCmsModuleUsage = Array.of(\n        ...this.getModuleIds()\n      ).filter((moduleId) => moduleId.startsWith(config.root)).map((moduleId) => this.getModuleInfo(moduleId)).filter(\n        (moduleInfo) => Object.hasOwn(moduleInfo.meta, \"findCmsModules\")\n      );\n      const moduleToEntryPoints = {};\n      for (const moduleWithCmsModuleUsage of modulesWithCmsModuleUsage) {\n        moduleToEntryPoints[moduleWithCmsModuleUsage.id] = findEntryPoints(\n          this,\n          moduleWithCmsModuleUsage\n        );\n      }\n      for (const moduleWithCmsModuleUsage of modulesWithCmsModuleUsage) {\n        const usageInModuleEntryPoint = moduleToEntryPoints[moduleWithCmsModuleUsage.id].find((entryPoint) => entryPoint.id.includes(\"/components/modules\"));\n        if (usageInModuleEntryPoint) {\n          this.error(`\n            Error: <${CMS_MODULE_COMPONENT_NAME} /> can only be used in Partials.\n            Module: ${usageInModuleEntryPoint.id === moduleWithCmsModuleUsage.id ? usageInModuleEntryPoint.id.replace(config.root, \"\") : `imports: ${moduleWithCmsModuleUsage.id.replace(\n            config.root,\n            \"\"\n          )}, which`} contains a <${CMS_MODULE_COMPONENT_NAME} />\n          `);\n        }\n      }\n      const root = config.root;\n      for (const moduleWithCmsModuleUsage of modulesWithCmsModuleUsage) {\n        const islandsContainingCmsModuleUsage = checkModuleTreeForIslands(\n          this,\n          moduleWithCmsModuleUsage\n        );\n        if (islandsContainingCmsModuleUsage.length > 0) {\n          throw new Error(`\n            <${CMS_MODULE_COMPONENT_NAME} /> cannot be used within islands.\n            ${formatIslandImporter(\n            moduleWithCmsModuleUsage.id,\n            root\n          )} uses <${CMS_MODULE_COMPONENT_NAME} /> and is used by islands:\n            ${islandsContainingCmsModuleUsage.map(\n            (islandModuleInfo) => formatIslandImporter(islandModuleInfo.id, root)\n          ).join(\", \")}\n          `);\n        }\n      }\n      for (const moduleWithCmsModuleUsage of modulesWithCmsModuleUsage) {\n        const entryPoints = moduleToEntryPoints[moduleWithCmsModuleUsage.id];\n        for (const entryPoint of entryPoints) {\n          const relativeEntryPoint = entryPoint.id.replace(root, \"\");\n          if (!Object.hasOwn(cmsModules, relativeEntryPoint)) {\n            cmsModules[relativeEntryPoint] = {};\n          }\n          for (const [cmsModuleName, cmsModuleValue] of Object.entries(\n            moduleWithCmsModuleUsage.meta.findCmsModules\n          )) {\n            if (Object.hasOwn(cmsModules[relativeEntryPoint], cmsModuleName)) {\n              this.error(`Error: duplicate module name: ${cmsModuleName}`);\n            }\n            cmsModules[relativeEntryPoint][cmsModuleName] = cmsModuleValue;\n          }\n        }\n      }\n    }\n  };\n}\nfunction findEntryPoints(ctx, moduleInfo) {\n  if (moduleInfo.isEntry) {\n    return [moduleInfo];\n  }\n  const result = [];\n  for (const importer of moduleInfo.importers) {\n    const importerModuleInfo = ctx.getModuleInfo(importer);\n    const entryPoints = findEntryPoints(ctx, importerModuleInfo);\n    result.push(...entryPoints);\n  }\n  return result;\n}\nfunction checkModuleTreeForIslands(ctx, module) {\n  if (module.id.endsWith(\"?client-entry\")) {\n    return [module];\n  }\n  const importerResults = [];\n  for (const importer of module.importers) {\n    const importerInfo = ctx.getModuleInfo(importer);\n    const importerResult = checkModuleTreeForIslands(ctx, importerInfo);\n    importerResults.push(importerResult);\n  }\n  return importerResults.flat();\n}\nfunction formatIslandImporter(id, root) {\n  return id.replace(root, \"\").replace(\"?client-entry\", \"\");\n}\nconst promiseForNewWritableStream = () => {\n  const chunks = [];\n  const writableStream = new stream.Writable();\n  writableStream._write = (chunk, encoding, done) => {\n    chunks.push(Buffer.from(chunk));\n    done();\n  };\n  const streamDonePromise = new Promise((resolve, reject) => {\n    writableStream.on(\"error\", (error) => {\n      reject(error);\n    });\n    writableStream._final = (done) => {\n      resolve(Buffer.concat(chunks).toString(\"utf8\"));\n      done();\n    };\n  });\n  return { streamDonePromise, writableStream };\n};\nconst renderStreamToPromise = async (reactElements, options) => {\n  const { streamDonePromise, writableStream } = promiseForNewWritableStream();\n  const {\n    pipe\n    /* abort */\n  } = renderToPipeableStream(reactElements, {\n    ...options || {},\n    onShellReady() {\n    },\n    onAllReady() {\n      pipe(writableStream);\n      if (options == null ? void 0 : options.onAllReady) {\n        options.onAllReady();\n      }\n    }\n  });\n  return streamDonePromise;\n};\nconst {\n  createServerRenderContextV2,\n  createServerRenderContext,\n  renderServerSidePropsWithAsyncLocalStoreContext\n} = cmsComponents;\nconst bootStrapRenderContext = () => {\n  const renderContext = createServerRenderContextV2 ? createServerRenderContextV2(null, {\n    environmentConfig: null,\n    entryPointBasePath: \"\",\n    supplementalFieldValues: {},\n    messagesForBrowser: []\n  }) : createServerRenderContext(\"\", null);\n  return renderContext;\n};\nasync function renderComponentOnServer(Component, propsAndDeps, pageUrl, environmentConfig, entryPointBasePath, contextOptions, renderOptions, getServerSideProps) {\n  const { props } = propsAndDeps;\n  const componentDebugName = Component.displayName || Component.name;\n  const supplementalFieldValues = contextOptions == null ? void 0 : contextOptions.supplementalFieldValues;\n  const messagesForBrowser = contextOptions == null ? void 0 : contextOptions.messagesForBrowser;\n  const renderContext = cmsComponents.createServerRenderContextV2 ? cmsComponents.createServerRenderContextV2(pageUrl, {\n    environmentConfig,\n    entryPointBasePath,\n    supplementalFieldValues,\n    messagesForBrowser\n  }) : cmsComponents.createServerRenderContext(pageUrl, environmentConfig);\n  if (getServerSideProps !== void 0 && typeof getServerSideProps === \"function\") {\n    const gSSPResult = await renderServerSidePropsWithAsyncLocalStoreContext(\n      getServerSideProps,\n      propsAndDeps,\n      renderContext\n    );\n    if (gSSPResult) {\n      props.serverSideProps = gSSPResult.serverSideProps;\n    }\n  }\n  return renderOnServer(\n    /* @__PURE__ */ jsx(Component, { ...props }),\n    renderContext,\n    componentDebugName,\n    renderOptions\n  );\n}\nasync function renderOnServer(elements, renderContext = bootStrapRenderContext(), debugName, renderOptions) {\n  let html = await renderStreamToPromise(\n    /* @__PURE__ */ jsx(ServerRenderContext.Provider, { value: renderContext, children: elements }),\n    renderOptions\n  );\n  if (renderContext.messagesForBrowser.length > 0) {\n    html = `${html}${scriptTagToLogServerMessages(\n      renderContext.messagesForBrowser,\n      `Server messages rendering: ${debugName}`\n    )}`;\n  }\n  return { html, renderContext };\n}\nfunction getServerGlobalsToInject(environmentConfig, hsServerPageUrl, hsBasePath, prettyPrint, criticalDevErrors, includeNonces) {\n  if (prettyPrint === void 0 && hsServerPageUrl && cmsComponents.isDebugUrlString) {\n    prettyPrint = cmsComponents.isDebugUrlString(hsServerPageUrl);\n  }\n  const serializedJson = jsonStringifyAndEscapeForInlineJS(\n    environmentConfig.toJSON(),\n    { baseIndent: 6, prettyPrint }\n  );\n  const globals = [`window.__hsEnvConfig = ${serializedJson};`];\n  if (hsServerPageUrl) {\n    globals.push(\n      `window.__hsServerPageUrl = ${jsonStringifyAndEscapeForInlineJS(\n        hsServerPageUrl\n      )};`\n    );\n  }\n  if (hsBasePath) {\n    globals.push(\n      `window.__hsBasePath = ${jsonStringifyAndEscapeForInlineJS(hsBasePath)};`\n    );\n  }\n  if (!environmentConfig.getIsDeployed() && (criticalDevErrors == null ? void 0 : criticalDevErrors.length)) {\n    const firstCriticalDevError = criticalDevErrors[0];\n    globals.push(`\n      customElements.whenDefined('vite-error-overlay').then(() => {\n        const ErrorOverlay = customElements.get('vite-error-overlay');\n        const error = new Error(${jsonStringifyAndEscapeForInlineJS(\n      firstCriticalDevError.message\n    )});\n        const overlay = new ErrorOverlay(error);\n\n        document.body.appendChild(overlay);\n      })\n    `);\n  }\n  const nonceAttr = includeNonces && cmsComponents.SCRIPT_NONCE_PLACEHOLDER ? ` nonce=\"${cmsComponents.SCRIPT_NONCE_PLACEHOLDER}\"` : \"\";\n  return `\n    <script type=\"text/javascript\"${nonceAttr}>\n      ${globals.join(\"\\n      \")}\n    <\\/script>\n      `;\n}\nfunction renderFieldsJSX(fieldsJSX) {\n  let moduleJson;\n  const outputCallback = (callbackJson) => {\n    moduleJson = callbackJson;\n  };\n  renderToStaticMarkup(\n    cloneElement(fieldsJSX, {\n      outputCallback\n    })\n  );\n  if (!moduleJson) {\n    throw new Error(\"couldn't render module fields definition to fields.json\");\n  }\n  return moduleJson;\n}\nfunction renderFieldsToJson(fields, moduleName) {\n  let fieldsJSON;\n  try {\n    if (isValidElement(fields)) {\n      fieldsJSON = renderFieldsJSX(fields);\n    } else if (Array.isArray(fields)) {\n      fieldsJSON = fields;\n    } else {\n      throw new Error(\n        `Couldn't recognize \\`fields\\` value for module ${moduleName}`\n      );\n    }\n    return fieldsJSON;\n  } catch (e) {\n    e.message = `Error when rendering fields for ${moduleName}: ${e.message}`;\n    throw e;\n  }\n}\nexport {\n  COMPONENT_EXTENSIONS,\n  CSS_LANGS_RE,\n  ENABLED_FEATURES_GATE_MAP,\n  ENTRY_POINTS_PATH,\n  GATES,\n  MODULE_FOLDER_PATH,\n  VIRTUAL_CONFIG_SETUP,\n  VIRTUAL_ISLAND_RUNTIME,\n  areBuildHealthChecksEnabled,\n  clientIslandEntryPlugin,\n  collectCssInDev,\n  collectCssModules,\n  createIslandsGlobalJsForClientInDev,\n  doHealthChecksFailTheBuild,\n  escapeForInlineJS,\n  findAllComponentsIn,\n  findAllModulesInRoot,\n  findAllPartialsInRoot,\n  findCmsModules,\n  a as getBaseAssetUrlFromBuild,\n  g as getBuildInfo,\n  getCMSAssetConfig,\n  getCMSAssetConfigIfExists,\n  getCombinedReactUrl,\n  getComponentExtension,\n  getEntryPointHash,\n  getEntryPointHashWithIndexSuffix,\n  getIslandRuntimeConfigUrl,\n  getIslandUrls,\n  getServerGlobalsToInject,\n  getServerIncludePrebundleDepPatterns,\n  hasComponentExtension,\n  includesHublDataReference,\n  isStorybookStory,\n  isStylesheetAsset,\n  isUngatedFor,\n  jsonStringifyAndEscapeForInlineJS,\n  namespaceModulePropsShape,\n  noncePlaceholderPlugin,\n  removeComponentExtension,\n  removeIndexFromPath,\n  removeIndexOrTrailingJsFromPath,\n  renderComponentOnServer,\n  renderFieldsToJson,\n  renderOnServer,\n  renderStreamToPromise,\n  resolveIslandPlugin,\n  resolveIslandToPlainModuleNoopPlugin,\n  resolveIslandToPlainModulePlugin,\n  scriptTagToLogServerMessages,\n  serializeIslandDataForInlineScript,\n  setIn,\n  ungatedAtBuildTimeFor,\n  virtualClientRenderIslandModuleId\n};\n", "/* hs-eslint ignored failing-rules */\n/* eslint-disable consistent-return */\n\nimport { COMPONENT_EXTENSIONS } from '@hubspot/cms-js-internal';\n\nexport const findFullPathInModuleGraph = (\n  modulePathNoExtension: string,\n  moduleGraph: any\n): string | void => {\n  for (const extension of COMPONENT_EXTENSIONS) {\n    const pathToTry = `${modulePathNoExtension}${extension}`;\n    if (moduleGraph.fileToModulesMap.has(pathToTry)) {\n      return pathToTry;\n    }\n  }\n};\n", "import { ViteDevServer } from 'vite';\n\nimport {\n  hasComponentExtension,\n  removeComponentExtension,\n  ENTRY_POINTS_PATH,\n  MODULE_FOLDER_PATH,\n} from '@hubspot/cms-js-internal';\n\nimport { findFullPathInModuleGraph } from './moduleGraph.js';\n\nexport const getComponentPaths = (\n  viteServer: ViteDevServer,\n  componentPath: string\n): [componentPathNoExtension: string, componentPathWithExtension: string] => {\n  let componentPathWithExtension;\n  let componentPathNoExtension;\n\n  // Support paths with or without an extension (do we need/want both?)\n  if (hasComponentExtension(componentPath)) {\n    componentPathWithExtension = componentPath;\n    componentPathNoExtension = removeComponentExtension(componentPath);\n  } else {\n    componentPathNoExtension = componentPath;\n  }\n\n  if (!componentPathWithExtension) {\n    componentPathWithExtension = findFullPathInModuleGraph(\n      componentPathNoExtension,\n      viteServer.moduleGraph\n    );\n    if (!componentPathWithExtension) {\n      throw new Error(\n        `Couldn't find full path to component: ${componentPathNoExtension}`\n      );\n    }\n  }\n\n  return [componentPathNoExtension, componentPathWithExtension];\n};\n\nexport const getEntryPointBasePath = (componentPath: string): string => {\n  if (componentPath.includes(ENTRY_POINTS_PATH)) {\n    return `partial/${componentPath.split(ENTRY_POINTS_PATH)[1]}`;\n  }\n\n  if (componentPath.includes(MODULE_FOLDER_PATH)) {\n    return `module/${componentPath.split(MODULE_FOLDER_PATH)[1]}`;\n  }\n\n  throw new Error('Unknown entry point path type');\n};\n", "function getByteSizeOf(props: any) {\n  return Buffer.from(JSON.stringify(props)).length;\n}\n\nfunction formatBytesToString(bytes) {\n  if (bytes > 1000000) {\n    // If byte size is > 1mb, show size in red\n    return ['\\x1b[31m', `${(bytes / 1000000).toFixed(2)}mb`, `\\x1b[0m`];\n  } else if (bytes > 10000) {\n    // if byte size is between 10kb and 1mb, show size in yellow\n    return ['\\x1b[33m', `${(bytes / 1000).toFixed(2)}kb`, `\\x1b[0m`];\n  } else {\n    // Show size in green\n    return ['\\x1b[32m', `${(bytes / 1000).toFixed(2)}kb`, `\\x1b[0m`];\n  }\n}\n\nconst getPropsInfo = (\n  props,\n  reportOptions = { showNestedKeySizeIfGreater: null },\n  recursionDepth = 0\n) => {\n  if (recursionDepth > 8) {\n    return [];\n  }\n\n  const propsSizeInBytes = getByteSizeOf(props);\n  const result = formatBytesToString(propsSizeInBytes);\n\n  if (\n    !Array.isArray(props) &&\n    Object.keys(props).length > 0 &&\n    reportOptions.showNestedKeySizeIfGreater != null &&\n    propsSizeInBytes > reportOptions.showNestedKeySizeIfGreater\n  ) {\n    for (const [key, value] of Object.entries(props)) {\n      const size = getPropsInfo(value, reportOptions, recursionDepth + 1);\n\n      if (Array.isArray(value)) {\n        result.push('\\n', `${key}[${value.length}]`, ...size);\n      } else {\n        result.push('\\n', key, ...size);\n      }\n    }\n  }\n\n  return result.flat();\n};\n\nexport const logPartialInfo = (partialPath, props) => {\n  console.log('Rendering partial', partialPath);\n  console.group();\n  console.log(\n    'Props size: ',\n    ...getPropsInfo(props, { showNestedKeySizeIfGreater: 1000000 })\n  );\n  console.groupEnd();\n};\n", "/* hs-eslint ignored failing-rules */\n/* eslint-disable @typescript-eslint/no-shadow */\n\nimport { ViteDevServer } from 'vite';\nimport { promises as fsPromises } from 'fs';\nimport {\n  createIslandsGlobalJsForClientInDev,\n  getServerGlobalsToInject,\n  scriptTagToLogServerMessages,\n} from '@hubspot/cms-js-internal';\nimport {\n  ServerRenderContextValue,\n  isDebugUrlString,\n} from '@hubspot/cms-components';\nimport packagePath from './packagePath.js';\nimport criticalDevErrorsToServerMessages from './criticalDevErrorsToServerMessages.js';\n\nconst { readFile } = fsPromises;\n\nconst generateIslandSetupScriptBlock = () => {\n  return `\n    <script type=\"module\">\n      import { initConfigSingletonFromJSON } from '@hubspot/cms-components/config';\n      initConfigSingletonFromJSON(window.__hsEnvConfig);\n      </script>\n      <script type=\"module\">\n      import { setupIslandHydration } from '${packagePath(\n        import.meta.url,\n        'island-runtime'\n      )}';\n      setupIslandHydration();\n    </script>\n      `;\n};\n\nconst createdPlainHtmlTemplate = async (\n  baseTemplatePath: string,\n  title: string,\n  globalScriptBlock: string\n): Promise<string> => {\n  const htmlTemplateBase = await readFile(baseTemplatePath, 'utf-8');\n  return htmlTemplateBase.replace('<!--title-->', title).replace(\n    '<!--bodyend-->',\n    `\n  ${globalScriptBlock}\n  <!--bodyend-->`\n  );\n};\n\nconst createIslandHtmlTemplate = async (\n  baseTemplatePath: string,\n  title: string,\n  globalScriptBlock: string\n): Promise<string> => {\n  let htmlTemplate = await createdPlainHtmlTemplate(\n    baseTemplatePath,\n    title,\n    globalScriptBlock\n  );\n\n  htmlTemplate = htmlTemplate.replace(\n    '<!--bodyend-->',\n    `\n    ${generateIslandSetupScriptBlock()}\n    <!-- ISLAND_RUNTIME_AND_SETUP_SCRIPT_BLOCK -->\n  <!--islandsglobal-->\n  `\n  );\n\n  return htmlTemplate;\n};\n\nexport const createHtmlShellDependingOnRenderContext = async (\n  baseTemplatePath: string,\n  url: string,\n  title: string,\n  renderContext: ServerRenderContextValue,\n  viteServer: ViteDevServer,\n  __jsRenderingGates: string[]\n) => {\n  let htmlTemplate;\n  const prettyPrint = isDebugUrlString(url);\n  const serverMessages = criticalDevErrorsToServerMessages(\n    renderContext.criticalDevErrors\n  );\n  const serverLogScript = serverMessages.length\n    ? scriptTagToLogServerMessages(\n        serverMessages,\n        '@hubspot/cms-dev-server messages'\n      )\n    : '';\n\n  if (renderContext.islands.length) {\n    const globalScriptBlock = getServerGlobalsToInject(\n      renderContext.environmentConfig,\n      renderContext.pageUrl,\n      renderContext.entryPointBasePath,\n      undefined,\n      renderContext.criticalDevErrors\n    );\n\n    htmlTemplate = await createIslandHtmlTemplate(\n      baseTemplatePath,\n      title,\n      `${globalScriptBlock}${serverLogScript}`\n    );\n\n    htmlTemplate = htmlTemplate.replace(\n      '<!--islandsglobal-->',\n      `<script>\n        ${createIslandsGlobalJsForClientInDev(\n          renderContext.islands,\n          renderContext.perServerRequestData,\n          viteServer,\n          6,\n          prettyPrint\n        )}\n    </script>\n  `\n    );\n  } else {\n    const globalScriptBlock = getServerGlobalsToInject(\n      renderContext.environmentConfig,\n      undefined,\n      undefined,\n      undefined,\n      renderContext.criticalDevErrors\n    );\n\n    htmlTemplate = await createdPlainHtmlTemplate(\n      baseTemplatePath,\n      title,\n      `${globalScriptBlock}${serverLogScript}`\n    );\n  }\n\n  return viteServer.transformIndexHtml(url, htmlTemplate);\n};\n\nexport const getIslandRuntimeAndGlobalToInject = async (\n  sortedIslandRoots,\n  perServerRequestData,\n  viteServer: ViteDevServer,\n  __gates: string[],\n  prettyPrint: boolean\n) => {\n  // Loading through vite so all of nested `@hubspot/cms-*` imports work\n  const internalSsrPath = packagePath(import.meta.url, 'internalSsr');\n\n  const { createIslandsGlobalJsForClientInDev } =\n    await viteServer.ssrLoadModule(internalSsrPath);\n\n  const islandRuntimeScript = await viteServer.transformIndexHtml(\n    '/',\n    generateIslandSetupScriptBlock()\n  );\n\n  return `${islandRuntimeScript}\n    <script>${createIslandsGlobalJsForClientInDev(\n      sortedIslandRoots,\n      perServerRequestData,\n      viteServer,\n      4,\n      prettyPrint\n    )}</script>\n    `;\n};\n", "import { LogMessage } from '@hubspot/cms-components';\nimport { CriticalDevError } from '@hubspot/cms-components';\n\nconst criticalDevErrorsToServerMessages = (\n  criticalDevErrors: Array<CriticalDevError>\n): Array<LogMessage> => {\n  const logMessages = criticalDevErrors.map(\n    (criticalDevError: CriticalDevError) => {\n      return {\n        level: criticalDevError.level,\n        parameters: [criticalDevError.message],\n      };\n    }\n  );\n\n  return logMessages;\n};\n\nexport default criticalDevErrorsToServerMessages;\n", "import localDevHttpImport from '@hubspot/local-dev-lib/http';\nimport { getAccountConfig } from '@hubspot/local-dev-lib/config';\nimport axios from 'axios'\n\nimport { getAxiosConfig } from '@hubspot/local-dev-lib/http/getAxiosConfig';\n\nimport { HSEnvironment } from '@hubspot/cms-components';\nimport { debug } from './debug.js';\n\nimport { wrapMessageInColor } from './logColors.js';\n\nconst {  default: hsCliHttp } = localDevHttpImport;\n\nconst DEV_SERVER_USAGE_ENDPOINT_AUTHENTICATED =\n  '/cms-dev-server-usage/v1/authenticated';\nconst DEV_SERVER_USAGE_ENDPOINT = '/cms-dev-server-usage/v1';\nconst EVENT_NAME = 'dev-server-interaction';\n\nlet trackingAccountId = null;\nlet trackingEnv = null;\n\nenum EventClass {\n  INTERACTION = 'INTERACTION',\n  USAGE = 'USAGE',\n  VIEW = 'VIEW',\n  ACTIVATION = 'ACTIVATION',\n}\n\ntype UsageEvent = {\n  portalId: number;\n  eventClass: keyof typeof EventClass;\n  eventName: 'dev-server-interaction';\n  action: string;\n  nodeVersion: string;\n  os: string;\n  version: string;\n};\n\nconst getPlatform = () => {\n  switch (process.platform) {\n    case 'darwin':\n      return 'macos';\n    case 'win32':\n      return 'windows';\n    default:\n      return process.platform;\n  }\n};\n\nconst getNodeVersionData = () => process.version;\n\nfunction trackUsage(action: string) {\n  const accountConfig =\n    trackingAccountId && getAccountConfig(trackingAccountId);\n  const isAuthedWithPersonalAccessKey =\n    accountConfig && accountConfig.authType === 'personalaccesskey';\n\n  const usageEvent: UsageEvent = {\n    portalId: trackingAccountId,\n    eventClass: EventClass.INTERACTION,\n    eventName: EVENT_NAME,\n    action,\n    nodeVersion: getNodeVersionData(),\n    version: process.env.APP_VERSION,\n    os: getPlatform(),\n  };\n\n  const url = isAuthedWithPersonalAccessKey\n    ? DEV_SERVER_USAGE_ENDPOINT_AUTHENTICATED\n    : DEV_SERVER_USAGE_ENDPOINT;\n\n  const baseRequestOptions = {\n    url,\n    data: usageEvent,\n  };\n\n  if (isAuthedWithPersonalAccessKey) {\n    return hsCliHttp.post(trackingAccountId, baseRequestOptions);\n  }\n\n  const config = getAxiosConfig({\n    ...baseRequestOptions,\n    env: trackingEnv,\n    method: 'POST',\n  } as any) as any\n\n  return axios(config)\n}\n\nexport const setTrackingInfo = (\n  accountId: number | null,\n  env: HSEnvironment | null\n) => {\n  trackingAccountId = accountId;\n  trackingEnv = env;\n};\n\nexport default function sendTrackingRequest(action: string) {\n  setImmediate(async () => {\n    try {\n      await trackUsage(action);\n\n      debug(\n        wrapMessageInColor(\n          'white',\n          `Sent usage tracking action event: ${action}`\n        )\n      );\n    } catch (e) {\n      debug(wrapMessageInColor('red', `Usage tracking failed: ${e.message}`));\n    }\n  });\n}\n", "import { default as debugFactory } from 'debug';\n\nexport const debug = debugFactory('cms-dev-server');\n", "import { buildStaticEnvConfig } from '@hubspot/cms-components';\nimport path from 'path';\nimport { normalizePath } from 'vite';\nimport { getEntryPointBasePath } from '../lib/pathHelpers.js';\nimport { findLocalRenderPlaceholders } from '../lib/proxyHelpers.js';\nimport { renderComponentForPlaceholder } from '../proxyPage/proxyPage.js';\nimport packagePath from '../lib/packagePath.js';\nimport { hasComponentExtension } from '@hubspot/cms-js-internal';\nimport { lookForModuleInFolder } from '../lib/renderModule.js';\nimport localDevHttpImport from '@hubspot/local-dev-lib/http';\nimport * as cheerio from 'cheerio';\n\nconst { default: hsCliHttp } = localDevHttpImport;\n\nexport async function renderRemoteModulePreview(\n  modulePath: string,\n  authedPortalId: any,\n  authedEnv: any,\n  cookieValue: any\n) {\n  const moduleInfoQueryParams = new URLSearchParams({\n    portalId: `${authedPortalId}`,\n  });\n  const moduleInfo = await hsCliHttp.get<any>(authedPortalId, {\n    url: `/api/designmanager/v1/modules/by-path/${encodeURIComponent(\n      modulePath\n    )}?${moduleInfoQueryParams}`,\n    headers: {\n      ['Accept']: 'application/json',\n      referer: `https://app.hubspot${authedEnv === 'qa' ? 'qa' : ''}.com`,\n      cookie: cookieValue,\n      'User-Agent': 'HubSpot CMS Dev Server',\n    },\n  });\n\n  const currentHubApiDomainOverride = process.env.HUBAPI_DOMAIN_OVERRIDE;\n  process.env.HUBAPI_DOMAIN_OVERRIDE = `api.hubspot`;\n\n  const queryParams = new URLSearchParams({\n    portalId: `${authedPortalId}`,\n    hsLocalProxy: `${true}`,\n    localProxySchemaVersion: '2',\n    hsLoginVerifyDisabled: `${true}`,\n    module_id: moduleInfo.moduleId,\n  });\n  const modulePreviewResponse = await hsCliHttp.get<string>(authedPortalId, {\n    url: `/api/cos-rendering/v1/public/_hcms/preview/template/multi?${queryParams}`,\n    headers: {\n      ['content-type']: 'application/x-www-form-urlencoded',\n      ['Accept']: 'text/html',\n      referer: `https://app.hubspot${authedEnv === 'qa' ? 'qa' : ''}.com`,\n      cookie: cookieValue,\n      'User-Agent': 'HubSpot CMS Dev Server',\n    },\n  });\n  // reset HUBAPI_DOMAIN_OVERRIDE to previous value\n  // clear env variable if none previously set\n  if (currentHubApiDomainOverride) {\n    process.env.HUBAPI_DOMAIN_OVERRIDE = currentHubApiDomainOverride;\n  } else {\n    delete process.env.HUBAPI_DOMAIN_OVERRIDE;\n  }\n\n  const $ = cheerio.load(modulePreviewResponse);\n  const modulePreviewContent = $('div[data-hs-cos-type=\"module\"]').prop(\n    'outerHTML'\n  );\n\n  const cssNeeded = $('style')\n    .toArray()\n    .map((element) => $(element).prop('outerHTML'))\n    .join('');\n\n  return { html: modulePreviewContent, cssNeeded };\n}\n\nexport async function renderLocalProjectModulePreview(\n  moduleName: string,\n  authedPortalId: any,\n  authedEnv: any,\n  authedHublet: any,\n  webRoot: any,\n  viteServer: any,\n  jsRenderingGates: any,\n  projectName: any,\n  projectComponentPath: any,\n  fullOriginalUrl: any,\n  cookieValue: any\n) {\n  const modulePath = normalizePath(\n    path.resolve(webRoot, 'components/modules/', moduleName)\n  );\n\n  const basePath = `preview/${getEntryPointBasePath(modulePath)}`;\n\n  const environmentConfig = buildStaticEnvConfig(\n    authedPortalId,\n    authedHublet,\n    authedEnv,\n    false,\n    jsRenderingGates\n  );\n\n  // get local fields.json and hublDataTemplate\n  let componentModule: any;\n  let foundPath: string;\n  if (!hasComponentExtension(modulePath)) {\n    [componentModule, foundPath] = await lookForModuleInFolder(\n      modulePath,\n      viteServer\n    );\n  }\n\n  if (!componentModule) {\n    // Look for non-folder module\n    componentModule = await viteServer.ssrLoadModule(modulePath);\n    foundPath = componentModule ? modulePath : undefined;\n  }\n\n  if (!componentModule) {\n    throw new Error(`Couldn't find module: ${modulePath}`);\n  }\n  const Component = componentModule.Component;\n  const fields = componentModule.fields;\n  const meta = componentModule.meta;\n  const hublDataTemplate = componentModule.hublDataTemplate;\n\n  if (!Component) {\n    throw new Error(\n      `Module does not have a named Component export: ${foundPath}`\n    );\n  } else if (!fields) {\n    throw new Error(`Module does not have a named fields export: ${foundPath}`);\n  } else if (!meta) {\n    throw new Error(`Module does not have a named meta export: ${foundPath}`);\n  }\n\n  const internalSsrPath = packagePath(import.meta.url, 'internalSsr');\n  const { renderFieldsToJson } =\n    await viteServer.ssrLoadModule(internalSsrPath);\n  const localFieldsJson = renderFieldsToJson(fields, modulePath);\n\n  // render template preview using local fields.json and hublDataTemplate\n  const localModule = {\n    isJsModule: true,\n    schemaVersion: 2,\n    fields: localFieldsJson,\n    id: 1,\n    path: `@projects/${projectName}/${projectComponentPath}/components/modules/${moduleName}`,\n    hublDataTemplate,\n  };\n  const queryParams = new URLSearchParams({\n    portalId: `${authedPortalId}`,\n    hsLocalProxy: `${true}`,\n    localProxySchemaVersion: '2',\n    hsLoginVerifyDisabled: `${true}`,\n  });\n\n  // this endpoint does not work with default LB from hs cli\n  // override LB with api.hubspot\n  const currentHubApiDomainOverride = process.env.HUBAPI_DOMAIN_OVERRIDE;\n  process.env.HUBAPI_DOMAIN_OVERRIDE = `api.hubspot`;\n\n  const templatePreviewPromise = hsCliHttp.post<string>(authedPortalId, {\n    url: `/api/cos-rendering/v1/public/_hcms/preview/template/multiform?${queryParams}`,\n    headers: {\n      ['content-type']: 'application/x-www-form-urlencoded',\n      ['Accept']: 'text/html',\n      referer: `https://app.hubspot${authedEnv === 'qa' ? 'qa' : ''}.com`,\n      cookie: cookieValue,\n      'User-Agent': 'HubSpot CMS Dev Server',\n    },\n    data: `module=${encodeURIComponent(JSON.stringify(localModule))}`,\n  });\n  // reset HUBAPI_DOMAIN_OVERRIDE to previous value\n  // clear env variable if none previously set\n  if (currentHubApiDomainOverride) {\n    process.env.HUBAPI_DOMAIN_OVERRIDE = currentHubApiDomainOverride;\n  } else {\n    delete process.env.HUBAPI_DOMAIN_OVERRIDE;\n  }\n  const templatePreview = await templatePreviewPromise;\n\n  const localRenderPlaceholders = findLocalRenderPlaceholders(templatePreview);\n\n  // Expect only 1 comment on a specific module preview template\n  if (localRenderPlaceholders.length !== 1) {\n    throw new Error(\n      `Error previewing module (${moduleName}), exception in module preview HTML\\n\\n`\n    );\n  }\n\n  return await renderComponentForPlaceholder(\n    0,\n    localRenderPlaceholders[0],\n    webRoot,\n    viteServer,\n    fullOriginalUrl,\n    basePath,\n    environmentConfig,\n    projectName,\n    projectComponentPath\n  );\n}\n", "/* hs-eslint ignored failing-rules */\n/* eslint-disable consistent-return */\n\nimport fs from 'fs';\nimport { resolve } from 'path';\nimport { ModuleProps } from '@hubspot/cms-components';\nimport { unescape } from 'html-escaper';\n\nconst localJsRenderStartString = '<!-- proxy local render of \"';\n// const localJsRenderStartRegex = /<!-- proxy local render of \"([^\"]+)\"/;\nconst localJsRenderEndString = 'end proxy local render -->';\n\ntype BaseJson = {\n  props: Record<string, any>;\n  request: Record<string, any>;\n};\n\nexport interface LocalRenderBlockInfo {\n  startOffset: number;\n  endOffset: number;\n  path: string;\n  json: {\n    props: {\n      fieldValues?: Record<string, any>;\n      hublParameters?: Record<string, any>;\n      supplementalFieldValues?: Record<string, any>;\n      hublData?: any;\n    } & Record<string, any>;\n    request: Record<string, any>;\n  };\n}\n\nexport type LocalModuleRenderPlaceholderProps = ModuleProps &\n  Record<string, any>;\n\nexport interface LocalModuleRenderBlockInfo extends LocalRenderBlockInfo {\n  json: {\n    props: LocalModuleRenderPlaceholderProps;\n  } & BaseJson;\n}\n\nfunction isRecord(value: unknown): value is Record<string, unknown> {\n  return typeof value === 'object' && value !== null;\n}\n\nexport const findLocalRenderPlaceholders = (\n  body: string\n): Array<LocalRenderBlockInfo> => {\n  let offsetSoFar = 0;\n  const result: Array<LocalRenderBlockInfo> = [];\n\n  while (offsetSoFar < body.length && offsetSoFar !== -1) {\n    // Get start of local render block\n    const startOffset = body.indexOf(localJsRenderStartString, offsetSoFar);\n    offsetSoFar = startOffset;\n\n    if (startOffset >= 0) {\n      const nextNewlineOffset = body.indexOf(\n        '\\n',\n        startOffset + localJsRenderStartString.length\n      );\n      const pathEndOffset = body.indexOf(\n        '\"',\n        startOffset + localJsRenderStartString.length\n      );\n      const nearestNewlineOrQuoteAfterBlockOpen = Math.min(\n        nextNewlineOffset,\n        pathEndOffset\n      );\n\n      // Keep on moving our \"where we've scanned so far\" pointer\n      offsetSoFar = nearestNewlineOrQuoteAfterBlockOpen;\n\n      if (pathEndOffset >= 0 && pathEndOffset < nextNewlineOffset) {\n        // Pull the path out of double quotes after the block opening\n        const path = body.substring(\n          startOffset + localJsRenderStartString.length,\n          pathEndOffset\n        );\n        offsetSoFar = pathEndOffset + 1;\n\n        // console.log(`${startOffset}: path = ${path}`);\n\n        // If we're in a valid bloc so far that exists and has a path...\n        if (startOffset >= 0 && path) {\n          const nextCommentEndOffset = body.indexOf('-->', pathEndOffset);\n          const endOffset = body.indexOf(localJsRenderEndString, pathEndOffset);\n          offsetSoFar = Math.min(nextCommentEndOffset, endOffset);\n\n          // Make sure that there is an ending to the block and there is not another\n          // HTML end comment string before it\n          if (endOffset >= startOffset && endOffset < nextCommentEndOffset) {\n            // Then pull out the JSON in the middle and try to parse it\n            const jsonString = body\n              .substring(pathEndOffset + 1, endOffset)\n              .trim();\n            // console.log(`${endOffset}: jsonString = ${jsonString}`);\n\n            try {\n              let json: any;\n              try {\n                json = JSON.parse(unescape(jsonString));\n              } catch (e) {\n                json = JSON.parse(jsonString);\n              }\n\n              if (!isRecord(json.request)) {\n                console.error(\n                  `Invalid JSON inside <!-- proxy local render .. --> string (missing request key)`\n                );\n              } else if (!isRecord(json.props)) {\n                console.error(\n                  `Invalid JSON inside <!-- proxy local render .. --> string (missing props key)`\n                );\n              } else {\n                result.push({\n                  startOffset,\n                  endOffset: endOffset + localJsRenderEndString.length,\n                  path,\n                  json,\n                });\n              }\n\n              offsetSoFar = endOffset + localJsRenderEndString.length;\n            } catch (e) {\n              console.error(\n                `Invalid JSON inside <!-- proxy local render .. --> string (around offset ${pathEndOffset})`\n              );\n              offsetSoFar = endOffset;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  return result;\n};\n\nexport const getHSProjectConfig = (\n  hsProjectConfigPath: string\n): Record<string, any> | null => {\n  try {\n    return JSON.parse(fs.readFileSync(hsProjectConfigPath, 'utf8'));\n  } catch (e) {\n    console.warn(\n      `Missing hsproject.json file (${resolve(hsProjectConfigPath)}): `,\n      e.message\n    );\n    return null;\n  }\n};\n\nexport const getProjectNameFromHSConfig = (\n  hsProjectConfigPath: string\n): string => {\n  const hsProjectConfig = getHSProjectConfig(hsProjectConfigPath);\n  if (hsProjectConfig) {\n    return hsProjectConfig.name;\n  }\n\n  throw new Error('hsproject.json file not found');\n};\n", "/* hs-eslint ignored failing-rules */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable no-loop-func */\n\nimport path from 'path';\nimport { Request, Response } from 'express';\nimport { normalizePath, ViteDevServer } from 'vite';\nimport { getAccountId, getEnv } from '@hubspot/local-dev-lib/config';\nimport localDevHttpImport from '@hubspot/local-dev-lib/http';\nimport {\n  findLocalRenderPlaceholders,\n  LocalModuleRenderBlockInfo,\n  LocalRenderBlockInfo,\n} from '../lib/proxyHelpers.js';\nimport renderPartial from '../lib/renderPartial.js';\nimport renderModule from '../lib/renderModule.js';\nimport criticalDevErrorsToServerMessages from '../lib/criticalDevErrorsToServerMessages.js';\nimport { RenderResult } from '../lib/renderComponentWithCSS.js';\nimport { getIslandRuntimeAndGlobalToInject } from '../lib/templates.js';\nimport {\n  ENTRY_POINTS_PATH,\n  MODULE_FOLDER_PATH,\n  getServerGlobalsToInject,\n  getEntryPointHashWithIndexSuffix,\n  Gate,\n  scriptTagToLogServerMessages,\n} from '@hubspot/cms-js-internal';\nimport { fakeRenderJsComponent } from './utils.js';\nimport renderLocalError from './renderLocalError.js';\nimport fetchPreviewInfo from './fetchPreviewInfo.js';\nimport {\n  buildStaticEnvConfig,\n  EnvironmentConfig,\n  Hublet,\n  isDebugUrlString,\n  mergeServerRequestData_internal,\n} from '@hubspot/cms-components';\n\nconst { default: hsCliHttp } = localDevHttpImport;\n\nconst getEntryPointBasePathFromProxyRequest = (request): string => {\n  if (!request) {\n    return '';\n  }\n\n  const { path: requestPath, pathParamDict } = request;\n\n  if (!pathParamDict || !pathParamDict.dynamic_slug) {\n    return requestPath;\n  }\n\n  return requestPath.replace(pathParamDict.dynamic_slug, '');\n};\n\n// Use standard placeholder path if DEFAULT_MODULE_PATH_REWRITE is unset\n// DEFAULT_MODULE_PATH_REWRITE example: @hubspot/blog_posts:BlogPosts.tsx\n// Given a renderer comment proxy path: @default-modules/blog-default-modules/@hubspot/blog_posts\n// Use DEFAULT_MODULE_PATH_REWRITE to rewrite to a locally available module\n// e.g. @blog-default-module/cms-assets/components/modules/BlogPosts.tsx\nfunction resolvePlaceholderPath(\n  placeholderPath: string,\n  projectName: string,\n  projectComponent: string\n) {\n  if (!process.env.DEFAULT_MODULE_PATH_REWRITE) {\n    return placeholderPath;\n  }\n  const mappedPlaceholderPath = `@projects/${projectName}/${projectComponent}/components/modules/${\n    process.env.DEFAULT_MODULE_PATH_REWRITE.split(':')[1]\n  }`;\n\n  if (\n    placeholderPath.startsWith(`@default-modules/${projectName}/`) &&\n    placeholderPath.endsWith(\n      process.env.DEFAULT_MODULE_PATH_REWRITE.split(':')[0]\n    )\n  ) {\n    return mappedPlaceholderPath;\n  }\n  return placeholderPath;\n}\n\ntype ProxiedQueryParams = Partial<{\n  hs_preview: string;\n  hsLocalProxyProject: string;\n  localProxySchemaVersion: string;\n  hsDebugOverridePublicHost: string;\n  hsLoginVerifyDisabled?: string;\n}>;\n\nexport const makeProxyPreviewRequest = (\n  accountId: number,\n  urlToProxy: string,\n  previewKey: string,\n  contentId: string,\n  projectName: string,\n  environmentConfig: EnvironmentConfig,\n  __jsRenderingGates: Gate[],\n  cookieHeader?: string\n): Promise<string> => {\n  const url = new URL(urlToProxy);\n\n  const renderPreviewLocally = url.searchParams.has('renderPreviewLocally');\n  let proxiedQueryParams: ProxiedQueryParams = {};\n  let baseURL = url.origin;\n  let pathname = url.pathname;\n\n  // Convert searchParams to object param format hsGet/request expects\n  const PARAMS_TO_IGNORE = ['renderPreviewLocally'];\n  const queryKeys = Array.from(url.searchParams.keys()).filter(\n    (queryKey) => !PARAMS_TO_IGNORE.includes(queryKey)\n  );\n\n  for (const queryKey of queryKeys) {\n    const values = url.searchParams.getAll(queryKey);\n\n    if (values.length > 1) {\n      proxiedQueryParams[queryKey] = values;\n    } else {\n      proxiedQueryParams[queryKey] = values[0];\n    }\n  }\n\n  const localProxyProject = process.env.DEFAULT_MODULE_PATH_REWRITE\n    ? `@default-modules/${projectName}`\n    : `@projects/${projectName}`;\n\n  proxiedQueryParams = {\n    ...proxiedQueryParams,\n    hs_preview: `${previewKey}-${contentId}`,\n    hsLocalProxyProject: localProxyProject,\n    localProxySchemaVersion: '2',\n    hsLoginVerifyDisabled: `${true}`,\n  };\n\n  if (renderPreviewLocally) {\n    proxiedQueryParams.hsDebugOverridePublicHost = url.host;\n    baseURL = `http://local.hubspot${\n      environmentConfig.getInternalHSEnv() === 'qa' ? 'qa' : ''\n    }.com`;\n    pathname = `/cos-rendering/v1/public${url.pathname}`;\n  }\n\n  console.log(\n    `Proxying request to ${baseURL}${pathname}?${new URLSearchParams({\n      ...proxiedQueryParams,\n      previewKey,\n      contentId,\n    }).toString()}`\n  );\n\n  const result = hsCliHttp.get<string>(accountId, {\n    baseURL,\n    url: pathname,\n    params: proxiedQueryParams,\n    responseType: 'text',\n\n    headers: {\n      COOKIE: cookieHeader,\n    },\n  });\n\n  return result.catch((error) => {\n    if (error.status >= 400 && error.status < 500 && !!error.response.data) {\n      return error.response.data;\n    } else {\n      throw error;\n    }\n  });\n};\n\nfunction isRecord(value: unknown): value is Record<string, unknown> {\n  return typeof value === 'object' && value !== null;\n}\n\nfunction isModulePlaceholder(\n  value: unknown\n): value is LocalModuleRenderBlockInfo {\n  return (\n    isRecord(value) &&\n    isRecord(value.json) &&\n    isRecord(value.json.props) &&\n    isRecord(value.json.props.fieldValues) &&\n    isRecord(value.json.props.hublParameters)\n  );\n}\n\nexport const renderComponentForPlaceholder = (\n  indexForThisRender: number,\n  localRenderPlaceholder: LocalRenderBlockInfo,\n  webRoot: string,\n  viteServer: ViteDevServer,\n  pageUrl: string,\n  basePath: string,\n  environmentConfig: EnvironmentConfig,\n  hsProjectJsonProjectName: string,\n  webRootProjectComponent: any\n): Promise<RenderResult> => {\n  const placeholderPath = resolvePlaceholderPath(\n    localRenderPlaceholder.path,\n    hsProjectJsonProjectName,\n    webRootProjectComponent\n  );\n\n  const localRenderPlaceholderProps = localRenderPlaceholder.json.props;\n\n  const [\n    __projectIdentifier,\n    projectFolder,\n    projectComponentFolder,\n    componentFolder,\n    componentTypeFolder,\n    componentFileName,\n  ] = placeholderPath.split('/');\n  const partialPath = `${componentFolder}/${componentTypeFolder}/`;\n\n  if (projectFolder !== hsProjectJsonProjectName) {\n    throw new Error(\n      `Unable to render component located outside of the project folder \"${hsProjectJsonProjectName}\". Components should be nested within the project folder. Check that the specified path is correct: ${placeholderPath}.`\n    );\n  } else if (projectComponentFolder !== webRootProjectComponent) {\n    throw new Error(\n      `The specified component folder \"${projectComponentFolder}\" does not match the webroot project component folder \"${webRootProjectComponent}/${projectComponentFolder}\" specified to the cms-dev-server. Components must be located within the webroot project folder. Check that the specified path is correct: ${placeholderPath}.`\n    );\n  }\n\n  const resolvedPath = normalizePath(\n    path.resolve(webRoot, partialPath, componentFileName)\n  );\n  const entryPointPath = [\n    '@projects',\n    webRootProjectComponent,\n    projectComponentFolder,\n    partialPath,\n    componentFileName,\n  ].join('/');\n\n  if (placeholderPath.startsWith('/fake/path/to/')) {\n    return fakeRenderJsComponent(indexForThisRender);\n  } else if (partialPath === ENTRY_POINTS_PATH) {\n    return renderComponentForPlaceholderPartial(\n      viteServer,\n      resolvedPath,\n      localRenderPlaceholderProps,\n      pageUrl,\n      basePath,\n      environmentConfig,\n      entryPointPath,\n      indexForThisRender\n    );\n  } else if (partialPath === MODULE_FOLDER_PATH) {\n    if (!isModulePlaceholder(localRenderPlaceholder)) {\n      console.error(\n        `Skipping local module render of ${componentFileName} <!-- proxy local render .. --> is missing necessary module prop keys (fieldValues? hublParameters?) `\n      );\n    } else {\n      const localModuleRenderPlaceholder: LocalModuleRenderBlockInfo = {\n        ...localRenderPlaceholder,\n      };\n      return renderComponentForPlaceholderModule(\n        viteServer,\n        resolvedPath,\n        localModuleRenderPlaceholder,\n        pageUrl,\n        basePath,\n        environmentConfig,\n        entryPointPath,\n        indexForThisRender\n      );\n    }\n  } else {\n    throw new Error(`Unimplemented render of ${placeholderPath}.`);\n  }\n};\n\nfunction renderComponentForPlaceholderPartial(\n  viteServer: ViteDevServer,\n  resolvedPath: string,\n  localRenderPlaceholderProps: Record<string, any>,\n  pageUrl: string,\n  basePath: string,\n  environmentConfig: EnvironmentConfig,\n  entryPointPath: string,\n  indexForThisRender: number\n): Promise<RenderResult> {\n  return renderPartial(\n    viteServer,\n    resolvedPath,\n    localRenderPlaceholderProps,\n    pageUrl,\n    basePath,\n    environmentConfig,\n    {\n      identifierPrefix: getEntryPointHashWithIndexSuffix(\n        entryPointPath,\n        indexForThisRender\n      ),\n    }\n  );\n}\n\nfunction renderComponentForPlaceholderModule(\n  viteServer: ViteDevServer,\n  resolvedPath: string,\n  localModuleRenderPlaceholder: LocalModuleRenderBlockInfo,\n  pageUrl: string,\n  basePath: string,\n  environmentConfig: EnvironmentConfig,\n  entryPointPath: string,\n  indexForThisRender: number\n) {\n  return renderModule(\n    viteServer,\n    resolvedPath,\n    localModuleRenderPlaceholder.json.props,\n    pageUrl,\n    basePath,\n    environmentConfig,\n    {\n      identifierPrefix: getEntryPointHashWithIndexSuffix(\n        entryPointPath,\n        indexForThisRender\n      ),\n    }\n  );\n}\n\nexport default async function proxySpecificPage(\n  request: Request,\n  response: Response,\n  portalId: number,\n  hublet: Hublet,\n  contentId: string,\n  webRoot: string,\n  viteServer: ViteDevServer,\n  projectName: string,\n  projectComponentPath: string,\n  jsRenderingGates: Gate[],\n  urlToProxy?: string,\n  fullOriginalUrl?: string\n) {\n  let accountId;\n  let proxyEnv;\n  const prettyPrint = isDebugUrlString(urlToProxy);\n\n  try {\n    accountId = getAccountId(portalId);\n\n    if (accountId === null) {\n      throw new Error();\n    }\n\n    proxyEnv = getEnv(accountId);\n  } catch (e) {\n    response\n      .status(500)\n      .end(\n        `Unable to find account for hubid = ${portalId}. Please check your hubspot.config.yaml`\n      );\n    return;\n  }\n\n  if (!accountId) {\n    response\n      .status(500)\n      .end(\n        `Unable to find account for hubid = ${portalId}. Please check your hubspot.config.yaml`\n      );\n    return;\n  }\n\n  try {\n    const previewInfo = await fetchPreviewInfo(accountId, portalId, contentId);\n    const { previewKey } = previewInfo;\n\n    const environmentConfig = buildStaticEnvConfig(\n      portalId,\n      hublet,\n      proxyEnv,\n      false,\n      jsRenderingGates\n    );\n    const pageHtml = await makeProxyPreviewRequest(\n      accountId,\n      urlToProxy,\n      previewKey,\n      contentId,\n      projectName,\n      environmentConfig,\n      jsRenderingGates,\n      request.get('COOKIE')\n    );\n\n    // Loading through vite so all of nested `@hubspot/cms-*` imports work\n    const { sortIslandRootsByPriority } = await viteServer.ssrLoadModule(\n      '@hubspot/cms-components'\n    );\n\n    const localRenderPlaceholders = findLocalRenderPlaceholders(pageHtml);\n    const numPlaceholders = localRenderPlaceholders.length;\n\n    let numJsRenderFailures = 0;\n    let islands = [];\n    let mergedPerRequestState = new Map<string, any>();\n    let basePath;\n    const criticalDevErrors = [];\n    const renderPromisesByChunkIndex: Array<Promise<string | void>> = new Array(\n      numPlaceholders\n    );\n    if (localRenderPlaceholders.length > 0) {\n      let offsetSoFar = 0;\n      const pageChunks = new Array(numPlaceholders + 1);\n\n      for (\n        let indexForThisRender = 0;\n        indexForThisRender < numPlaceholders;\n        indexForThisRender++\n      ) {\n        const localRenderPlaceholder =\n          localRenderPlaceholders[indexForThisRender];\n        pageChunks[indexForThisRender] = pageHtml.slice(\n          offsetSoFar,\n          localRenderPlaceholder.startOffset\n        );\n\n        if (basePath === undefined) {\n          basePath = getEntryPointBasePathFromProxyRequest(\n            localRenderPlaceholder.json.request\n          );\n        }\n\n        const renderPromise = renderComponentForPlaceholder(\n          indexForThisRender,\n          localRenderPlaceholder,\n          webRoot,\n          viteServer,\n          fullOriginalUrl,\n          basePath,\n          environmentConfig,\n          projectName,\n          projectComponentPath\n        );\n\n        renderPromisesByChunkIndex[indexForThisRender] = renderPromise\n          .then((promiseResult) => {\n            // eslint-disable-next-line prefer-const\n            let { html, cssNeeded, inlineAssets, renderContext } =\n              promiseResult;\n\n            console.log(\n              `Finished render of ${localRenderPlaceholder.path} (i = ${indexForThisRender})`\n            );\n\n            if (renderContext.criticalDevErrors?.length) {\n              criticalDevErrors.push(...renderContext.criticalDevErrors);\n            }\n\n            if (renderContext.islands.length > 0) {\n              islands = islands.concat(renderContext.islands);\n            }\n            mergedPerRequestState = mergeServerRequestData_internal(\n              mergedPerRequestState,\n              renderContext.perServerRequestData\n            );\n\n            let result = html;\n\n            if (inlineAssets) {\n              result = `${inlineAssets\n                .map((inlineAsset) => inlineAsset.html)\n                .join('\\n')}\\n${result}`;\n            }\n\n            if (cssNeeded) {\n              result = `${cssNeeded}\\n${result}`;\n            }\n\n            return result;\n          })\n          .catch((e) => {\n            numJsRenderFailures += 1;\n            console.log(\n              'Attempted to render',\n              localRenderPlaceholder.path,\n              'with props',\n              localRenderPlaceholder.json\n            );\n            console.error(e);\n            return renderLocalError(localRenderPlaceholder.path, e);\n          });\n\n        offsetSoFar = localRenderPlaceholder.endOffset;\n      }\n\n      // Last chunk from end of last placeholder to end of HTML\n      pageChunks[localRenderPlaceholders.length] = pageHtml.slice(offsetSoFar);\n\n      response.writeHead(200);\n\n      for (let i = 0; i < localRenderPlaceholders.length; i++) {\n        const chunk = pageChunks[i];\n        response.write(chunk);\n\n        const foobar = await renderPromisesByChunkIndex[i];\n\n        // console.log(\"JS rendered chunk\", i, foobar);\n        response.write(foobar);\n      }\n\n      response.write(\n        getServerGlobalsToInject(\n          environmentConfig,\n          fullOriginalUrl,\n          basePath,\n          undefined,\n          criticalDevErrors\n        )\n      );\n\n      if (criticalDevErrors.length) {\n        response.write(\n          scriptTagToLogServerMessages(\n            criticalDevErrorsToServerMessages(criticalDevErrors),\n            '@hubspot/cms-dev-server messages'\n          )\n        );\n      }\n\n      if (islands.length > 0) {\n        const sortedIslandRoots = sortIslandRootsByPriority(islands);\n        const islandRuntimeAndGlobalScriptHtml =\n          await getIslandRuntimeAndGlobalToInject(\n            sortedIslandRoots,\n            mergedPerRequestState,\n            viteServer,\n            jsRenderingGates,\n            prettyPrint\n          );\n\n        response.write(islandRuntimeAndGlobalScriptHtml);\n      }\n\n      // Write last string chunk located after last placeholder\n      response.write(pageChunks[pageChunks.length - 1]);\n\n      response.end();\n    } else {\n      response.writeHead(200);\n      response.write(pageHtml);\n      response.end();\n    }\n  } catch (error) {\n    // TODO change error.stack to error.message before we publish\n    response\n      .status(500)\n      .end(\n        `Failed proxy render of page id = ${contentId} hub id = ${portalId}\\n\\n${error.stack}`\n      );\n    return;\n  }\n}\n", "import { ViteDevServer } from 'vite';\nimport { join as joinPosix } from 'path/posix';\nimport { RenderToPipeableStreamOptions } from 'react-dom/server';\nimport { EnvironmentConfig } from '@hubspot/cms-components/config';\nimport { Field, traverseFieldsJSON } from '@hubspot/cms-components/fields';\nimport { LogMessage, ModuleProps } from '@hubspot/cms-components';\nimport * as cmsComponents from '@hubspot/cms-components';\nimport localDevHttpImport from '@hubspot/local-dev-lib/http';\nimport {\n  hasComponentExtension,\n  setIn,\n  isUngatedFor,\n  namespaceModulePropsShape,\n} from '@hubspot/cms-js-internal';\n\nimport renderComponentWithCSS, {\n  RenderResult,\n} from '../lib/renderComponentWithCSS.js';\n\nimport fetchModuleGraphQLData from './fetchModuleGraphQLData.js';\nimport packagePath from './packagePath.js';\n\nconst { default: hsCliHttp } = localDevHttpImport;\n\nconst { filterToModuleDataDepsIncludedIn, getModuleDataDependecyTypeFrom } =\n  cmsComponents;\n\ntype FieldValidationResponseBody = {\n  errorType: string;\n  message: string;\n  severity: string;\n  succeeded: boolean;\n  status: string;\n  errorTokens: {\n    field: Array<string>;\n    path: Array<string>;\n    type: Array<string>;\n    uiattribute: Array<string>;\n    value: Array<string>;\n  };\n};\n\nconst getApplyFieldsValidationToRenderContext = (\n  portalId,\n  fieldsJSON,\n  requestedModulePath\n) => {\n  return async (renderResult: RenderResult): Promise<RenderResult> => {\n    const { renderContext } = renderResult;\n\n    const validationSeverityToLogLevel = {\n      FATAL: 'error',\n      WARNING: 'warn',\n    };\n\n    let validationRequest;\n\n    try {\n      validationRequest = await hsCliHttp.post(portalId, {\n        url: '/designmanager/v1/modules/validate-fields',\n        data: fieldsJSON,\n        resolveWithFullResponse: true,\n      });\n    } catch {\n      console.log('Failed to validate module fields for', requestedModulePath);\n    }\n\n    if (validationRequest.length) {\n      validationRequest.forEach((fieldValidationError) => {\n        renderContext.criticalDevErrors.push({\n          message: `Field Validation Error in ${requestedModulePath}: ${fieldValidationError.message}`,\n          error: new Error(fieldValidationError.message),\n          level:\n            validationSeverityToLogLevel[fieldValidationError.severity] ||\n            'info',\n        });\n      });\n    }\n\n    return renderResult;\n  };\n};\n\nexport const lookForModuleInFolder = async (\n  modulePath: string,\n  viteServer: ViteDevServer\n): Promise<[any, string]> => {\n  let componentModule;\n  const insideFolderPath = joinPosix(modulePath, 'index');\n\n  try {\n    componentModule = await viteServer.ssrLoadModule(insideFolderPath);\n  } catch (e) {\n    if (!e.message.includes('Failed to load url')) {\n      throw e;\n    }\n  }\n\n  return [componentModule, insideFolderPath];\n};\n\nasync function renderModule(\n  viteServer: ViteDevServer,\n  requestedModulePath: string,\n  moduleProps: ModuleProps,\n  pageUrl: string,\n  basePath: string,\n  environmentConfig: EnvironmentConfig,\n  renderOptions?: RenderToPipeableStreamOptions\n) {\n  console.log('Rendering module', requestedModulePath);\n\n  const {\n    fieldValues: fieldOverrides = {},\n    hublParameters,\n    supplementalFieldValues,\n    experimentalHublData,\n    hublData,\n    moduleName,\n  } = moduleProps;\n\n  const ungatedForServerSideProps = isUngatedFor(\n    environmentConfig.getGates(),\n    'CMS:JSRenderer:GetServerSideProps'\n  );\n\n  const messagesForBrowser: LogMessage[] = [];\n  let componentModule;\n  let dataQueryResult;\n  let foundPath: string;\n  let getServerSideProps;\n  let extraDeps;\n\n  if (!hasComponentExtension(requestedModulePath)) {\n    [componentModule, foundPath] = await lookForModuleInFolder(\n      requestedModulePath,\n      viteServer\n    );\n  }\n\n  if (!componentModule) {\n    // Look for non-folder module\n    componentModule = await viteServer.ssrLoadModule(requestedModulePath);\n    foundPath = componentModule ? requestedModulePath : undefined;\n  }\n\n  if (!componentModule) {\n    throw new Error(`Couldn't find module: ${requestedModulePath}`);\n  }\n\n  const Component = componentModule.Component;\n  const fields = componentModule.fields;\n  const meta = componentModule.meta;\n\n  if (!Component) {\n    throw new Error(\n      `Module does not have a named Component export: ${foundPath}`\n    );\n  } else if (!fields) {\n    throw new Error(`Module does not have a named fields export: ${foundPath}`);\n  } else if (!meta) {\n    throw new Error(`Module does not have a named meta export: ${foundPath}`);\n  }\n\n  const internalSsrPath = packagePath(import.meta.url, 'internalSsr');\n  const { renderFieldsToJson } =\n    await viteServer.ssrLoadModule(internalSsrPath);\n  const fieldsJSON = renderFieldsToJson(fields, requestedModulePath);\n  const fieldValues = getFieldValuesForModule(fieldsJSON, fieldOverrides);\n\n  const applyFieldsValidationToRenderContext =\n    getApplyFieldsValidationToRenderContext(\n      environmentConfig.getPortalID(),\n      fieldsJSON,\n      requestedModulePath\n    );\n\n  if (componentModule.query && typeof componentModule.query === 'string') {\n    try {\n      dataQueryResult = await fetchModuleGraphQLData(\n        environmentConfig.getHubID(),\n        componentModule.query,\n        requestedModulePath,\n        pageUrl\n      );\n\n      if (dataQueryResult.errors && dataQueryResult.errors.length) {\n        const errorString = `GraphQL query for ${requestedModulePath} had errors.`;\n        messagesForBrowser.push({\n          level: 'error',\n          parameters: [errorString],\n        });\n\n        dataQueryResult.errors.forEach((graphQLError) => {\n          console.error(graphQLError);\n          messagesForBrowser.push({\n            level: 'error',\n            parameters: [graphQLError.message, graphQLError],\n          });\n        });\n      }\n    } catch (error) {\n      const errorString = `Failed to execute query for ${requestedModulePath}.`;\n\n      console.error(errorString);\n      console.error(error.message);\n\n      messagesForBrowser.push({\n        level: 'error',\n        parameters: [errorString, error.message],\n      });\n    }\n  }\n\n  const namespacedModuleProps = namespaceModulePropsShape({\n    fieldValues,\n    hublParameters,\n    dataQueryResult,\n    supplementalFieldValues,\n    experimentalHublData,\n    hublData,\n    moduleName,\n  });\n\n  if (ungatedForServerSideProps && componentModule.getServerSideProps) {\n    if (!getModuleDataDependecyTypeFrom || !filterToModuleDataDepsIncludedIn) {\n      throw new Error(\n        `Need to upgrade to @hubspot/cms-components 0.15.x or higher to use getServerSideProps`\n      );\n    }\n\n    getServerSideProps = componentModule.getServerSideProps;\n\n    const depType = getModuleDataDependecyTypeFrom(\n      componentModule.getServerSideProps\n    );\n\n    extraDeps = filterToModuleDataDepsIncludedIn(depType, {\n      url: new URL(pageUrl),\n      contact: undefined, // TODO\n      request: undefined, // TODO\n    });\n  }\n\n  return renderComponentWithCSS(\n    viteServer,\n    foundPath,\n    Component,\n    { props: namespacedModuleProps, extraDeps },\n    pageUrl,\n    basePath,\n    { supplementalFieldValues, messagesForBrowser },\n    environmentConfig,\n    renderOptions,\n    getServerSideProps,\n    componentModule.unstable_modifyHtml\n  ).then(applyFieldsValidationToRenderContext);\n}\n\nfunction getFieldValuesForModule(fieldsJSON: Field[], fieldOverrides = {}) {\n  const props: object = {};\n\n  traverseFieldsJSON(fieldsJSON, fieldOverrides, (fieldPathArray, value) => {\n    setIn(props, fieldPathArray, value);\n  });\n\n  return props;\n}\n\nexport default renderModule;\n", "import localDevHttpImport from '@hubspot/local-dev-lib/http';\n\nconst {  default: hsCliHttp } = localDevHttpImport;\n\ntype DataQueryPoints = {\n  count: number;\n  weight: number;\n  used_points: number;\n};\n\ntype DataQueryResult = {\n  extensions: {\n    query_complexity: {\n      max_points: number;\n      used_points: number;\n      points_for_internal_api_requests: DataQueryPoints;\n      points_for_objects_retrieved: DataQueryPoints;\n      points_for_properties_with_value: DataQueryPoints;\n      points_for_properties_without_value: DataQueryPoints;\n    };\n  };\n  data?: {\n    CRM?: any;\n    HUBDB?: any;\n  };\n};\n\nconst graphQLCache = new Map();\n\nexport function clearGraphQLDataCache() {\n  graphQLCache.clear();\n}\n\nexport default async function fetchModuleGraphQLData(\n  accountId: number,\n  query: string,\n  requestedModulePath: string,\n  pageUrl: string\n): Promise<DataQueryResult> {\n  const { searchParams } = new URL(pageUrl);\n  const hsLocalQueryKey = searchParams.get('hsLocalQueryKey');\n  const compositeQueryKey = `${hsLocalQueryKey}:${query}`;\n  let dataQueryResult: DataQueryResult;\n\n  if (graphQLCache.has(compositeQueryKey)) {\n    console.log(`Using cached GraphQL Query for ${requestedModulePath}`);\n\n    return Promise.resolve(graphQLCache.get(compositeQueryKey));\n  }\n\n  try {\n    dataQueryResult = await hsCliHttp.post(accountId, {\n      url: '/collector/v3/graphql',\n      data: {\n        query,\n      },\n    });\n  } catch (e) {\n    throw new Error(e);\n  }\n\n  graphQLCache.set(compositeQueryKey, dataQueryResult);\n\n  return dataQueryResult;\n}\n", "/* hs-eslint ignored failing-rules */\n/* eslint-disable prefer-promise-reject-errors */\n\nimport { createEmptyServerRenderContext } from '@hubspot/cms-components';\nimport { RenderResult } from '../lib/renderComponentWithCSS.js';\nimport { VALID_PROXY_DOMAIN_SUFFIXES } from './constants.js';\n\nexport const getSubDomainFromValidLocalDomain = (hostname) => {\n  for (const validProxyDomainSuffix of VALID_PROXY_DOMAIN_SUFFIXES) {\n    if (hostname.endsWith(`.${validProxyDomainSuffix}`)) {\n      return hostname.slice(0, -1 * validProxyDomainSuffix.length - 1);\n    }\n  }\n  return undefined;\n};\n\nconst randomStringWithLotsOf = (char: string, maxLength: number): string => {\n  return new Array(Math.floor(Math.random() * maxLength)).fill(char).join('');\n};\n\nexport const fakeRenderJsComponent = (\n  indexForThisRender\n): Promise<RenderResult> => {\n  return new Promise((resolve, reject) => {\n    const randomTimeout =\n      Math.floor(Math.random() * 200) + indexForThisRender * 1000;\n\n    setTimeout(() => {\n      try {\n        const fakeJsRenderedOutput = `<div data-js-rendered>JS render #${\n          indexForThisRender + 1\n        } (${randomTimeout}ms delay) ${randomStringWithLotsOf(\n          '?',\n          100\n        )}</div>\\n`;\n\n        resolve({\n          html: fakeJsRenderedOutput,\n          cssNeeded: '',\n          renderContext: createEmptyServerRenderContext(),\n          inlineAssets: [],\n        });\n      } catch (e) {\n        console.log('Error with JS render...');\n        console.error(e);\n        reject();\n      }\n    }, randomTimeout);\n  });\n};\n\nexport const consoleWarn = (message) => {\n  console.warn('\\x1b[33m%s\\x1b[0m', 'WARNING:', message);\n};\n", "export const VALID_PROXY_DOMAIN_SUFFIXES = ['localhost', 'hslocal.net'];\n", "import AnsiToHtmlConverter from 'ansi-to-html';\n\n// Custom ansi colors pulled from tfinley's terminal theme\nconst customColors = [\n  // Normal colors\n  '#000', // black\n  '#ec392c', // red\n  '#b3e439', // green\n  '#fea525', // yellow\n  '#76dff3', // blue\n  '#fd4285', // magenta\n  '#cfa3ff', // cyan\n  '#f4f4f4', // White\n\n  // Bright colors (mostly identical to ^)\n  '#646464',\n  '#ec392c',\n  '#fea525',\n  '#76dff3',\n  '#fd4285',\n  '#cfa3ff',\n  '#f4f4f4',\n];\n\nconst Converter = new AnsiToHtmlConverter({ colors: customColors });\n\nconst darkErrorStyles = `background-color: #222; color: #ccc; padding: 0.5em; font-family: ui-monospace, Menlo, Monaco, 'Cascadia Mono', 'Segoe UI Mono', 'Roboto Mono', 'Oxygen Mono', 'Ubuntu Monospace', 'Source Code Pro', 'Fira Mono', 'Droid Sans Mono', 'Courier New', monospace;`;\n\nexport default (path: string, error: Error): string => {\n  const stackWithColorClasses = Converter.toHtml(error.stack);\n  return `<div data-js-rendered=\"error\" style=\"${darkErrorStyles}\">Error rendering ${path}<br/><br/><code><pre>${stackWithColorClasses}</pre></code></div>`;\n};\n", "import localDevHttpImport from '@hubspot/local-dev-lib/http';\n\nconst {  default: hsCliHttp } = localDevHttpImport;\nexport interface PreviewInfoResponse {\n  previewDomain: string;\n  previewKey: string;\n}\n\nexport default async (\n  accountId: number,\n  portalId: number,\n  contentId: string\n): Promise<PreviewInfoResponse> => {\n  if (!contentId) {\n    throw new Error(\n      `Invalid contentId when attempting to fetch preview info: ${contentId}`\n    );\n  }\n\n  try {\n    // Works with oauth if any scopes present [blog-access, landingpages-access, service-knowledge-access, sitepages-access, pages-access]\n    const content = await hsCliHttp.get<Record<string, any>>(accountId, {\n      url: `/content/api/v4/contents/${contentId}`,\n      params: { portalId },\n      responseType: 'json',\n    });\n\n    return {\n      previewDomain: content.previewDomain ?? content.resolvedDomain,\n      previewKey: content.previewKey,\n    };\n  } catch (error) {\n    if (\n      error.statusCode === 403 &&\n      error.error.message.match(\n        /^This oauth-token \\([\\w]+\\) does not have proper permissions!/\n      )\n    ) {\n      const errorMessagePrefix = `Your personal access key is missing required scopes to preview a CMS page.\\nYou may need to re-generate a new personal access key with the required scopes and re-run \\`hs-auth\\`, or you may not have this functionality enabled in your account\\n`;\n      console.error('Error: ', errorMessagePrefix);\n      console.error(error.error.message);\n      throw new Error(`${errorMessagePrefix}\\n${error.error.message}`);\n    } else {\n      console.log(`fetchPreviewInfo Error`, error);\n      if (error.options) {\n        console.log(`error.options`, error.options);\n      }\n      if (error.response && error.response.headers) {\n        console.log(`error.response.headers`, error.response.headers);\n      }\n      throw error;\n    }\n  }\n};\n", "function EmptyPartialsList({ webRoot }) {\n  return (\n    <p>\n      No partials in <code>{webRoot}components/partials</code>\n    </p>\n  );\n}\n\nfunction PartialLinkInLI({ partialName }) {\n  return (\n    <li>\n      <a href={`/partial/${partialName}`}>{partialName}</a>\n    </li>\n  );\n}\n\nexport default function PartialsList({ webRoot, partialNames }) {\n  if (partialNames.length === 0) {\n    return <EmptyPartialsList webRoot={webRoot} />;\n  }\n\n  return (\n    <ul>\n      {partialNames.map((partialName) => (\n        <PartialLinkInLI partialName={partialName} key={partialName} />\n      ))}\n    </ul>\n  );\n}\n", "import {\n  findAllPartialsInRoot,\n  renderOnServer,\n} from '@hubspot/cms-js-internal';\nimport PartialsList from '../components/PartialsList.js';\n\nconst linksToAllPartialRouteHandler = async (request, response) => {\n  const { webRoot } = request.app.locals;\n  const { partialNames } = findAllPartialsInRoot(webRoot);\n  const { html: responseHtml } = await renderOnServer(\n    <PartialsList webRoot={webRoot} partialNames={partialNames} />\n  );\n  response.status(200).set({ 'Content-Type': 'text/html' }).end(responseHtml);\n};\n\nexport default linksToAllPartialRouteHandler;\n", "function EmptyModulesList({ webRoot }) {\n  return (\n    <p>\n      No modules in <code>{webRoot}components/modules</code>\n    </p>\n  );\n}\n\nfunction ModuleLinkInLI({ moduleName }) {\n  return (\n    <li>\n      <a href={`/preview/module/${moduleName}`}>{moduleName}</a>\n      {' / '}\n      <a href={`/module/${moduleName}`}>Local Version</a>\n    </li>\n  );\n}\n\nfunction ModulesList({ webRoot, moduleNames }) {\n  if (moduleNames.length === 0) {\n    return <EmptyModulesList webRoot={webRoot} />;\n  }\n\n  return (\n    <ul>\n      {moduleNames.map((moduleName) => (\n        <ModuleLinkInLI moduleName={moduleName} key={moduleName} />\n      ))}\n    </ul>\n  );\n}\n\nexport default ModulesList;\n", "import { findAllModulesInRoot, renderOnServer } from '@hubspot/cms-js-internal';\nimport ModulesList from '../components/ModulesList.js';\n\nconst linksToAllModuleRouteHandler = async (request, response) => {\n  const { webRoot } = request.app.locals;\n  const { moduleNames } = findAllModulesInRoot(webRoot);\n\n  const { html: responseHtml } = await renderOnServer(\n    <ModulesList webRoot={webRoot} moduleNames={moduleNames} />\n  );\n  response.status(200).set({ 'Content-Type': 'text/html' }).end(responseHtml);\n};\n\nexport default linksToAllModuleRouteHandler;\n", "import { buildStaticEnvConfig } from '@hubspot/cms-components';\nimport path from 'path';\nimport { normalizePath } from 'vite';\nimport { Request } from 'express';\nimport fullOriginalUrlFromRequest from '../lib/fullOriginalUrlFromRequest.js';\nimport renderModule from '../lib/renderModule.js';\nimport { createHtmlShellDependingOnRenderContext } from '../lib/templates.js';\nimport packagePath from '../lib/packagePath.js';\nimport { getEntryPointHash } from '@hubspot/cms-js-internal';\nimport { getEntryPointBasePath } from '../lib/pathHelpers.js';\nimport sendTrackingRequest from '../lib/trackUsage.js';\n\nconst moduleRouteHandler = async (request: Request, response) => {\n  sendTrackingRequest('view-module-route');\n  const {\n    authedPortalId,\n    authedEnv,\n    authedHublet,\n    webRoot,\n    viteServer,\n    jsRenderingGates,\n    projectName,\n    projectComponentPath,\n  } = request.app.locals;\n  const moduleName = request.params.moduleName;\n  const baseTemplatePath = packagePath(\n    import.meta.url,\n    'html/baseTemplate.html'\n  );\n\n  // todo: use partial prefix const\n  const modulePath = normalizePath(\n    path.resolve(webRoot, 'components/modules/', moduleName)\n  );\n  const entrypointPath = normalizePath(\n    [\n      '@projects',\n      projectName,\n      projectComponentPath,\n      'components/modules/',\n      moduleName,\n    ].join('/')\n  );\n\n  let fieldOverrides = null;\n\n  if (request.query.fields) {\n    try {\n      if (typeof request.query.fields === 'string') {\n        fieldOverrides = JSON.parse(\n          decodeURIComponent(request.query.fields.replace(/\\+/g, '%20'))\n        );\n      }\n    } catch (e) {\n      console.error(\n        `Error parsing field param for module ${moduleName}: ${request.query.fields}`\n      );\n    }\n  }\n\n  const basePath = getEntryPointBasePath(modulePath);\n\n  const environmentConfig = buildStaticEnvConfig(\n    authedPortalId,\n    authedHublet,\n    authedEnv,\n    false,\n    jsRenderingGates\n  );\n\n  try {\n    const {\n      html: renderedHtml,\n      cssNeeded,\n      renderContext,\n      inlineAssets,\n    } = await renderModule(\n      viteServer,\n      modulePath,\n      {\n        fieldValues: fieldOverrides,\n        hublParameters: {},\n        moduleName: `local-${moduleName}`,\n      },\n      fullOriginalUrlFromRequest(request),\n      basePath,\n      environmentConfig,\n      {\n        identifierPrefix: getEntryPointHash(entrypointPath),\n      }\n    );\n\n    const htmlShell = await createHtmlShellDependingOnRenderContext(\n      baseTemplatePath,\n      request.originalUrl,\n      `Module: ${modulePath}`,\n      renderContext,\n      viteServer,\n      jsRenderingGates\n    );\n\n    const html = htmlShell\n      .replace(\n        '<!--headend-->',\n        [\n          cssNeeded,\n          ...inlineAssets.map((inlineAsset) => inlineAsset.html),\n        ].join('\\n')\n      )\n      .replace(`<!--ssr-outlet-->`, renderedHtml);\n\n    response.status(200).set({ 'Content-Type': 'text/html' }).end(html);\n  } catch (e) {\n    console.error(e);\n    viteServer.ssrFixStacktrace(e);\n\n    response\n      .status(500)\n      .end(`Error rendering module (${moduleName})\\n\\n${e.stack}`);\n  }\n};\n\nexport default moduleRouteHandler;\n", "/* hs-eslint ignored failing-rules */\n/* eslint-disable require-await */\n\nimport { Hublet } from '@hubspot/cms-components';\nimport http from 'http';\nimport https from 'https';\nimport { getAccountId } from '@hubspot/local-dev-lib/config';\nimport { debug } from '../lib/debug.js';\n\nexport type PortalContentIdAndHublet = {\n  portalId: number;\n  contentId: string;\n  hublet: Hublet;\n};\n\nasync function requestPage(\n  url: string,\n  redirects = 0,\n  originalUrl?: string\n): Promise<{\n  portalIdHeader: string | string[];\n  contentId: string | string[];\n  res: http.IncomingMessage;\n}> {\n  if (redirects > 5) {\n    throw new Error(\n      `Hit too many redirects to HEAD requests for ${originalUrl}`\n    );\n  }\n\n  return new Promise((resolve, reject) => {\n    const protocolAPI = url.startsWith('https://') ? https : http;\n    protocolAPI\n      .request(\n        url,\n        {\n          method: 'HEAD',\n          headers: {\n            // Keep this user agent, so we don't get 403s from the request\n            ['User-Agent']: 'cms-dev-server',\n          },\n        },\n        async (res) => {\n          let portalIdHeader: string | string[];\n          let contentId: string | string[];\n          const isContentMembershipRedirect = Boolean(\n            res.headers['x-hs-content-membership-redirect']\n          );\n\n          if (isContentMembershipRedirect) {\n            debug('Content Membership Redirect', res.headers);\n\n            portalIdHeader = res.headers['x-hs-portal-id'];\n            contentId = res.headers['x-hs-content-id'];\n\n            if (portalIdHeader && contentId) {\n              // assume we have what we need.\n              return resolve({\n                portalIdHeader,\n                contentId,\n                res,\n              });\n            }\n          }\n\n          // Use a lib to better follow various redirects?\n          if (\n            res.statusCode >= 300 &&\n            res.statusCode < 400 &&\n            res.headers.location\n          ) {\n            console.log(`Redirecting to ${res.headers.location} (from ${url})`);\n            return resolve(\n              requestPage(\n                res.headers.location,\n                redirects + 1,\n                originalUrl ?? url\n              )\n            );\n          }\n\n          portalIdHeader = res.headers['x-hs-hub-id'];\n          contentId = res.headers['x-hs-content-id'];\n\n          return resolve({\n            res,\n            portalIdHeader,\n            contentId,\n          });\n        }\n      )\n      .on('error', (err) => {\n        console.error(err);\n        reject(err);\n      })\n      .end();\n  });\n}\n\nexport default async function fetchContentMetadata(\n  url: string,\n  portalId: number\n): Promise<PortalContentIdAndHublet> {\n  const { portalIdHeader, contentId, res } = await requestPage(url);\n\n  if (Array.isArray(portalIdHeader) || Array.isArray(contentId)) {\n    throw new Error(\n      `There were multiple hub ID or content ID headers in the HEAD request to ${url}`\n    );\n  } else {\n    const portalIdFromResponse = parseInt(portalIdHeader, 10);\n    const pageAccount = await getAccountId(portalIdFromResponse);\n\n    if (!pageAccount) {\n      throw new Error(\n        `No CLI auth for portal ${portalIdFromResponse} found, please run \\`hs auth\\``\n      );\n    }\n\n    if (\n      res.statusCode !== 200 &&\n      !(portalIdFromResponse && pageAccount && contentId)\n    ) {\n      throw new Error(\n        `${res.statusCode} ${\n          res.statusMessage\n        } - Unable to obtain HEAD information from ${url}. ${\n          res.statusCode === 429 && res.headers['retry-after']\n            ? `Retry after ${res.headers['retry-after']} seconds.`\n            : ''\n        }`\n      );\n    } else if (!portalId || !contentId) {\n      throw new Error(\n        `Missing hub ID or content ID headers on HEAD request to ${url}`\n      );\n    } else if (isNaN(portalId)) {\n      throw new Error(\n        `Hub ID from the HEAD request is not a number: '${portalId}' (${url})`\n      );\n    }\n\n    // TODO, the hubs-hublets/hublets/find/<portalId> API is internal auth only.\uD83E\uDD14...\n    // Prior implementation of fetchHubletForPortalId that would work execept for an internal auth issue:\n    // https://git.hubteam.com/HubSpot/cms-js-platform/blob/ef6e8029df6c09fe30d65a80073606f41ca324a6/cms-dev-server/src/proxyPage/fetchHubletForPortalId.ts\n    //\n    // const hublet = await fetchHubletForPortalId(portalId);\n\n    const hublet = 'na1';\n\n    return { portalId, contentId, hublet };\n  }\n}\n", "/* hs-eslint ignored failing-rules */\n/* eslint-disable consistent-return */\n\nimport { Request, Response } from 'express';\nimport fetchContentMetadata from '../proxyPage/fetchContentMetadata.js';\nimport proxyPage from '../proxyPage/proxyPage.js';\nimport {\n  getSubDomainFromValidLocalDomain,\n  consoleWarn,\n} from '../proxyPage/utils.js';\nimport { VALID_PROXY_DOMAIN_SUFFIXES } from '../proxyPage/constants.js';\nimport fullOriginalUrlFromRequest from '../lib/fullOriginalUrlFromRequest.js';\nimport sendTrackingRequest from '../lib/trackUsage.js';\n\nexport default async function proxyPageRouteHandler(\n  request: Request,\n  response: Response,\n  next: Function\n) {\n  sendTrackingRequest('view-proxy-page-route');\n  const {\n    viteServer,\n    webRoot,\n    projectName,\n    projectComponentPath,\n    jsRenderingGates,\n  } = request.app.locals;\n\n  if (!request.accepts().includes('text/html')) {\n    return response.sendStatus(404);\n  }\n\n  const fullOriginalUrl = fullOriginalUrlFromRequest(request);\n\n  const domainToProxy = getSubDomainFromValidLocalDomain(request.hostname);\n  const urlToProxy = `http://${domainToProxy}${request.originalUrl}`;\n\n  if (!domainToProxy) {\n    if (VALID_PROXY_DOMAIN_SUFFIXES.includes(request.hostname)) {\n      const message = `Can't make a proxy request, you need to prepend the real page's domain to '${request.hostname}' (i.e. your.page.com.${request.hostname})`;\n      consoleWarn(message);\n      return response.status(400).send(message);\n    } else {\n      const message = `Can't make a proxy request, the domain '${request.hostname}' is not a valid proxy-able domain`;\n      consoleWarn(message);\n      return response.status(400).send(message);\n    }\n  }\n\n  try {\n    const { portalId, contentId, hublet } = await fetchContentMetadata(\n      urlToProxy,\n      request.app.locals.authedPortalId\n    );\n    await proxyPage(\n      request,\n      response,\n      portalId,\n      hublet,\n      contentId,\n      webRoot,\n      viteServer,\n      projectName,\n      projectComponentPath,\n      jsRenderingGates,\n      urlToProxy,\n      fullOriginalUrl\n    );\n  } catch (e) {\n    next(e);\n  }\n}\n", "import { Request, Response } from 'express';\nimport request from 'request';\nimport { getSubDomainFromValidLocalDomain } from '../proxyPage/utils.js';\nimport { VALID_PROXY_DOMAIN_SUFFIXES } from '../proxyPage/constants.js';\n\n// From(ish) https://git.hubteam.com/HubSpot/cloudflare-workers/blob/master/worker-lib/src/Constants.ts\nconst HCMS_PATH = '/_hcms/';\nconst HS_FS_PATH = '/hs-fs/';\nconst HUB_FS_PATH = '/hubfs/';\n\nconst isInternalCMSRoute = (req: Request) =>\n  req.path.startsWith(HCMS_PATH) ||\n  req.path.startsWith(HS_FS_PATH) ||\n  req.path.startsWith(HUB_FS_PATH);\n\nexport default function proxyPageResourceRedirect(\n  req: Request,\n  res: Response,\n  next\n) {\n  const isAHtmlRequest = req.accepts().includes('text/html');\n\n  if (\n    (isAHtmlRequest && !isInternalCMSRoute(req)) ||\n    VALID_PROXY_DOMAIN_SUFFIXES.includes(req.hostname)\n  ) {\n    next();\n    return;\n  }\n\n  const domainToProxy = getSubDomainFromValidLocalDomain(req.hostname);\n  const pathToProxy = req.originalUrl;\n  const urlToProxy = `https://${domainToProxy}${pathToProxy}`;\n\n  if (req.method === 'GET') {\n    request(urlToProxy).pipe(res);\n  } else {\n    const contentType = req.headers['content-type'];\n    const isSendingJSON =\n      contentType && /\\bjson\\b/.test(req.headers['content-type'].toString());\n\n    const headerEntries = Object.entries(req.headers).filter(([header]) => {\n      if (\n        // Need to reset these headers for https (and recompression/encoding?) to work properly\n        ['host', 'origin', 'connection', 'content-length'].includes(\n          header.toLowerCase()\n        ) ||\n        header.startsWith('sec-')\n      ) {\n        return false;\n      }\n      return true;\n    });\n\n    let body = undefined;\n\n    if (req.body) {\n      if (isSendingJSON) {\n        body = JSON.stringify(req.body);\n      } else {\n        body = req.body.toString();\n      }\n    }\n\n    request({\n      url: urlToProxy,\n      method: req.method,\n      headers: Object.fromEntries(headerEntries),\n      body,\n    }).pipe(res);\n  }\n}\n", "import {\n  findAllModulesInRoot,\n  findAllPartialsInRoot,\n  renderOnServer,\n} from '@hubspot/cms-js-internal';\nimport { Request, Response } from 'express';\nimport ModulesList from '../components/ModulesList.js';\nimport PartialsList from '../components/PartialsList.js';\nimport sendTrackingRequest from '../lib/trackUsage.js';\nimport { getSubDomainFromValidLocalDomain } from '../proxyPage/utils.js';\n\nconst homeRouteHandler = async (\n  request: Request,\n  response: Response,\n  next: Function\n) => {\n  const domainToProxy = getSubDomainFromValidLocalDomain(request.hostname);\n\n  // If this is a request to the root of a _subdomain_ pass through and let the\n  // proxy code handle this later (i.e. something.hslocal.net/ instead of hslocal.net/ or localhost/)\n  if (domainToProxy) {\n    next();\n    return;\n  }\n\n  sendTrackingRequest('view-home-route');\n\n  const { webRoot, storybookEnabled, devServerPort } = request.app.locals;\n  const { partialNames } = findAllPartialsInRoot(webRoot);\n  const { moduleNames } = findAllModulesInRoot(webRoot);\n\n  const { html: responseHtml } = await renderOnServer(\n    <>\n      {storybookEnabled ? (\n        <h2>\n          <a href={`//storybook.${request.hostname}:${devServerPort}`}>\n            Storybook\n          </a>\n        </h2>\n      ) : null}\n\n      <h2>Partials</h2>\n      <PartialsList webRoot={webRoot} partialNames={partialNames} />\n      <h2>Modules</h2>\n      <ModulesList webRoot={webRoot} moduleNames={moduleNames} />\n    </>\n  );\n  response.status(200).set({ 'Content-Type': 'text/html' }).end(responseHtml);\n};\n\nexport default homeRouteHandler;\n", "/* hs-eslint ignored failing-rules */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n/* eslint-disable consistent-return */\n\nimport { renderOnServer } from '@hubspot/cms-js-internal';\nimport { Request, Response } from 'express';\nimport fetchContentMetadata from '../proxyPage/fetchContentMetadata.js';\nimport proxyPage from '../proxyPage/proxyPage.js';\nimport { consoleWarn } from '../proxyPage/utils.js';\nimport sendTrackingRequest from '../lib/trackUsage.js';\n\nexport default async function proxyPathPageRouteHandler(\n  request: Request,\n  response: Response,\n  next: Function\n) {\n  sendTrackingRequest('view-proxy-path-route');\n  const {\n    viteServer,\n    webRoot,\n    projectName,\n    projectComponentPath,\n    jsRenderingGates,\n  } = request.app.locals;\n  if (!request.accepts().includes('text/html')) {\n    return response.sendStatus(404);\n  }\n\n  // render proxy index page if not supplied with query param\n  if (!request.query.page) {\n    const { html: responseHtml } = await renderOnServer(\n      <div>\n        <h2>Local Proxy</h2>\n        <form action=\"/proxy\">\n          <label htmlFor=\"page\" style={{ display: 'block' }}>\n            Page URL\n          </label>\n          <input\n            style={{ width: '300px' }}\n            name=\"page\"\n            type=\"text\"\n            placeholder=\"https://somecmspage.com/path\"\n          />\n          <button style={{ display: 'block' }}>Proxy</button>\n        </form>\n      </div>\n    );\n    response.status(200).set({ 'Content-Type': 'text/html' }).end(responseHtml);\n    return;\n  }\n  // parse proxy page URL from query param\n  let proxyPageUrl: URL;\n  try {\n    proxyPageUrl = new URL(request.query.page as string);\n  } catch (e) {\n    const message =\n      'Please provide a valid page query parameter, e.g., http://localhost:3000/proxy?page=https://yourdomain.com/path';\n    consoleWarn(message);\n    response.status(400).send(message);\n    return;\n  }\n\n  // validate proxy page URL query params\n  if (proxyPageUrl.searchParams.has('hs_preview')) {\n    const message = `Can't make a proxy request, you cannot proxy URLs that include internal query params like hs_preview`;\n    consoleWarn(message);\n    return response.status(400).send(message);\n  }\n\n  try {\n    const { portalId, contentId, hublet } = await fetchContentMetadata(\n      proxyPageUrl.href,\n      request.app.locals.authedPortalId\n    );\n    await proxyPage(\n      request,\n      response,\n      portalId,\n      hublet,\n      contentId,\n      webRoot,\n      viteServer,\n      projectName,\n      projectComponentPath,\n      jsRenderingGates,\n      proxyPageUrl.href,\n      proxyPageUrl.href\n    );\n  } catch (e) {\n    next(e);\n  }\n}\n", "import { NextFunction, Request, Response } from 'express';\nimport fetch from 'node-fetch';\n\nconst HCMS_PATH = '/_hcms/';\nconst HS_FS_PATH = '/hs-fs/';\nconst HUB_FS_PATH = '/hubfs/';\n\n// From(ish) https://git.hubteam.com/HubSpot/cloudflare-workers/blob/master/worker-lib/src/Constants.ts\nconst isInternalCMSRoute = (req: Request) =>\n  req.path.startsWith(HCMS_PATH) ||\n  req.path.startsWith(HS_FS_PATH) ||\n  req.path.startsWith(HUB_FS_PATH);\n\nexport default function proxyPathPageResourceRedirect(\n  req: Request,\n  res: Response,\n  next: NextFunction\n) {\n  const isAHtmlRequest = req.accepts().includes('text/html');\n\n  // only proxy when referer's path is /proxy && has page query param\n  let proxyPageUrl: URL;\n  let refererUrl: URL;\n  try {\n    refererUrl = new URL(req.headers.referer);\n    proxyPageUrl = new URL(\n      new URL(req.headers.referer).searchParams.get('page')\n    );\n  } catch (e) {\n    next();\n    return;\n  }\n  if (!refererUrl.pathname.startsWith('/proxy')) {\n    next();\n    return;\n  }\n\n  // handle anchor links, unless internal CMS route\n  if (isAHtmlRequest && !isInternalCMSRoute(req)) {\n    const encodedPageUrl = encodeURIComponent(\n      `${proxyPageUrl.origin}${req.url}`\n    );\n    res.redirect(`/proxy?page=${encodedPageUrl}`);\n    return;\n  }\n\n  const urlToProxy = `https://${proxyPageUrl.host}${req.url}`;\n  fetch(urlToProxy)\n    .then((response) => response.body.pipe(res))\n    .catch((err) => console.log(err));\n}\n", "import { NextFunction, Request, Response } from 'express';\nimport fetch from 'node-fetch';\n\nconst localDomains = ['localhost', 'hslocal.net'];\n\nexport default function proxyServerlessRequest(\n  req: Request,\n  res: Response,\n  next: NextFunction\n) {\n  const { method, headers } = req;\n\n  let refererUrl: URL;\n  let domainToProxy: string;\n  let body;\n\n  if (!req.headers.referer) {\n    console.log('unable to proxy serverless request, no referer header found');\n    next();\n    return;\n  }\n\n  try {\n    refererUrl = new URL(req.headers.referer);\n\n    const referrerDomain = refererUrl.hostname;\n\n    if (localDomains.includes(referrerDomain)) {\n      // pulling off the first domain to proxy for serverless requests because\n      // a portals serverless endpoints are supported at all domains\n      domainToProxy = req.app.locals.domainsToProxy[0];\n    } else {\n      domainToProxy = referrerDomain.replace(/\\.localhost|\\.hslocal\\.net/, '');\n    }\n  } catch (e) {\n    console.log('Error parsing referer URL:', e);\n    next();\n  }\n\n  if (!domainToProxy) {\n    console.log('No domain to proxy for serverless request, skipping...');\n    next();\n    return;\n  }\n\n  const urlToProxy = `${refererUrl.protocol}//${domainToProxy}${req.url}`;\n  const contentType = headers['content-type'];\n  const cookie = headers.cookie;\n\n  if (req.body) {\n    body = JSON.stringify(req.body);\n  }\n\n  const headersToPass: HeadersInit = {\n    ...(contentType ? { 'Content-Type': contentType } : {}),\n    ...(cookie ? { COOKIE: cookie } : {}),\n  };\n\n  const proxyLogArgs = [\n    `attempting to proxy a ${method} serverless request to domain:`,\n    domainToProxy,\n    'for resource:',\n    req.url,\n  ];\n\n  if (body) {\n    proxyLogArgs.push('with body:', body);\n  }\n\n  console.log(...proxyLogArgs);\n\n  switch (method) {\n    case 'POST':\n    case 'DELETE':\n    case 'PUT':\n      fetch(urlToProxy, {\n        method,\n        body,\n        headers: headersToPass,\n      })\n        .then((response) => response.body.pipe(res))\n        .catch((err) => console.log(err));\n      break;\n\n    default:\n      fetch(urlToProxy, {\n        headers: headersToPass,\n      })\n        .then((response) => response.body.pipe(res))\n        .catch((err) => console.log(err));\n  }\n}\n", "import path from 'path';\nimport { normalizePath } from 'vite';\nimport { Request, Response } from 'express';\nimport sendTrackingRequest from '../lib/trackUsage.js';\nimport { createHtmlShellDependingOnRenderContext } from '../lib/templates.js';\nimport packagePath from '../lib/packagePath.js';\nimport fullOriginalUrlFromRequest from '../lib/fullOriginalUrlFromRequest.js';\nimport { renderLocalProjectModulePreview } from '../lib/renderModulePreview.js';\n\nasync function modulePreviewRouteHandler(request: Request, response: Response) {\n  sendTrackingRequest('view-module-preview-route');\n  const {\n    authedPortalId,\n    authedEnv,\n    authedHublet,\n    webRoot,\n    viteServer,\n    jsRenderingGates,\n    projectName,\n    projectComponentPath,\n  } = request.app.locals;\n  const moduleName = request.params.moduleName;\n\n  const modulePath = normalizePath(\n    path.resolve(webRoot, 'components/modules/', moduleName)\n  );\n  try {\n    // render component from comment placeholder\n    const {\n      html: renderedHtml,\n      cssNeeded,\n      renderContext,\n      inlineAssets,\n    } = await renderLocalProjectModulePreview(\n      moduleName,\n      authedPortalId,\n      authedEnv,\n      authedHublet,\n      webRoot,\n      viteServer,\n      jsRenderingGates,\n      projectName,\n      projectComponentPath,\n      fullOriginalUrlFromRequest(request),\n      request.get('COOKIE')\n    );\n\n    // inject rendered component into Vite base development template\n    const baseTemplatePath = packagePath(\n      import.meta.url,\n      'html/baseTemplate.html'\n    );\n    const htmlShell = await createHtmlShellDependingOnRenderContext(\n      baseTemplatePath,\n      request.originalUrl,\n      `Module: ${modulePath}`,\n      renderContext,\n      viteServer,\n      jsRenderingGates\n    );\n\n    const html = htmlShell\n      .replace(\n        '<!--headend-->',\n        [\n          cssNeeded,\n          ...inlineAssets.map((inlineAsset) => inlineAsset.html),\n        ].join('\\n')\n      )\n      .replace(`<!--ssr-outlet-->`, renderedHtml);\n\n    response.status(200).set({ 'Content-Type': 'text/html' }).end(html);\n  } catch (e) {\n    console.error(e);\n    viteServer.ssrFixStacktrace(e);\n    return response\n      .status(500)\n      .end(`Error rendering module (${moduleName})\\n\\n${e.stack}`);\n  }\n}\n\nexport default modulePreviewRouteHandler;\n", "import net from 'net';\nimport express from 'express';\n\nimport createShadowDevServerRoutes from './createShadowDevServerRoutes.js';\nimport { Gate } from '@hubspot/cms-js-internal';\n\nconst testNetServer = net.createServer();\n\nexport default async function startShadowDevServer(\n  devServerPort: number,\n  shadowPort: number,\n  projectName: string,\n  jsRenderingGates: Gate[]\n) {\n  const portIsTaken = await new Promise((res, rej) => {\n    console.log(`Starting proxy link server on port ${shadowPort}`);\n\n    testNetServer.once('error', (err) => {\n      if (err['code'] === 'EADDRINUSE') {\n        console.error(\n          `Port ${shadowPort} is in use. HubSpot is unable to automatically create proxy links in the Sprocket Menu`\n        );\n        res(true);\n      } else {\n        rej(err);\n      }\n    });\n\n    testNetServer.once('listening', () => {\n      testNetServer.close();\n    });\n\n    testNetServer.once('close', () => {\n      res(false);\n    });\n\n    testNetServer.listen(shadowPort);\n  });\n\n  if (portIsTaken) {\n    return;\n  }\n\n  const shadowDevServer = express();\n\n  shadowDevServer.listen(shadowPort);\n\n  shadowDevServer.use(\n    '/',\n    await createShadowDevServerRoutes(\n      devServerPort,\n      projectName,\n      jsRenderingGates\n    )\n  );\n}\n", "/* hs-eslint ignored failing-rules */\n/* eslint-disable require-await */\n\nimport { Router, Request, Response } from 'express';\nimport { ParsedQs } from 'qs';\nimport { getAccountId, getEnv } from '@hubspot/local-dev-lib/config';\nimport { Gate } from '@hubspot/cms-js-internal';\nimport cors from 'cors';\n\nimport { findLocalRenderPlaceholders } from '../lib/proxyHelpers.js';\nimport { makeProxyPreviewRequest } from '../proxyPage/proxyPage.js';\nimport fetchPreviewInfo from '../proxyPage/fetchPreviewInfo.js';\nimport { buildStaticEnvConfig } from '@hubspot/cms-components';\n\ninterface CheckHandlerQuery extends ParsedQs {\n  hostName: string;\n  pathName: string;\n  protocol: string;\n  contentId: string;\n  portalId: string;\n}\n\nfunction getShadowDevServerCheckHandler(\n  devServerPort: number,\n  projectName: string,\n  gates: Gate[]\n) {\n  return async function shadowDevServerCheckHandler(\n    request: Request,\n    response: Response\n  ) {\n    const { query } = request;\n\n    if (query) {\n      const {\n        hostName,\n        pathName,\n        protocol,\n        contentId,\n        portalId: portalIdString,\n      } = query as CheckHandlerQuery;\n      const pageUrl = `${protocol}//${hostName}${pathName}`;\n      const portalId = parseInt(portalIdString, 10);\n      let proxyEnv;\n\n      let accountId: number;\n      let hasJSBuildingBlocks = false;\n      let localProxyUrl: string;\n\n      try {\n        accountId = getAccountId(portalId);\n\n        if (accountId === null) {\n          throw new Error();\n        }\n        proxyEnv = getEnv(accountId);\n      } catch (e) {\n        response\n          .status(500)\n          .end(\n            `Unable to find account for hubid = ${portalId}. Please check your hubspot.config.yaml`\n          );\n\n        return;\n      }\n\n      try {\n        const previewInfo = await fetchPreviewInfo(\n          accountId,\n          portalId,\n          contentId\n        );\n        const { previewKey } = previewInfo;\n\n        const environmentConfig = buildStaticEnvConfig(\n          portalId,\n          'na1', // bad lazy TF (but does it really matter for this check)\n          proxyEnv,\n          false,\n          gates\n        );\n\n        const pageHtml = await makeProxyPreviewRequest(\n          accountId,\n          pageUrl,\n          previewKey,\n          contentId,\n          projectName,\n          environmentConfig,\n          gates\n        );\n\n        const localRenderPlaceholders = findLocalRenderPlaceholders(pageHtml);\n\n        if (localRenderPlaceholders.length) {\n          hasJSBuildingBlocks = true;\n          localProxyUrl = `http://${hostName}.hslocal.net:${devServerPort}${pathName}`;\n        }\n\n        response\n          .status(200)\n          .set({ 'Content-Type': 'application/json' })\n          .json({ hasJSBuildingBlocks, localProxyUrl });\n      } catch (error) {\n        response\n          .status(500)\n          .end(\n            `Failed proxy render of page id = ${contentId} hub id = ${portalId}\\n\\n${error.stack}`\n          );\n        return;\n      }\n    } else {\n      response\n        .status(500)\n        .end(\n          `Missing pageUrl param, cannot check for proxied page without a pageUrl`\n        );\n    }\n  };\n}\n\nexport default async function createShadowDevServerRoutes(\n  devServerPort: number,\n  projectName: string,\n  gates: Gate[]\n) {\n  const shadowDevServerRoutes = Router();\n\n  shadowDevServerRoutes.get(\n    '/check-if-local-dev-server',\n    cors(),\n    getShadowDevServerCheckHandler(devServerPort, projectName, gates)\n  );\n\n  return shadowDevServerRoutes;\n}\n", "/* hs-eslint ignored failing-rules */\n/* eslint-disable require-await */\n\nimport { createServer as createViteServer, InlineConfig } from 'vite';\nimport { default as react } from '@vitejs/plugin-react';\nimport {\n  Gate,\n  clientIslandEntryPlugin,\n  resolveIslandPlugin,\n  noncePlaceholderPlugin,\n  findCmsModules,\n} from '@hubspot/cms-js-internal';\nimport { default as mkcert } from 'vite-plugin-mkcert';\nimport { viteCommonjs } from '@originjs/vite-plugin-commonjs';\nimport devSecretsPlugin from './plugins/devSecretsPlugin.js';\n\nasync function createViteDevServer(\n  webRoot: string,\n  port,\n  sslEnabled: boolean,\n  domainsToProxy = [],\n  jsRenderingGates: Gate[],\n  secretNames: string[]\n) {\n  const additionalMkcertHosts = domainsToProxy\n    .map((proxyDomain) => [\n      `${proxyDomain}.localhost`,\n      `${proxyDomain}.hslocal.net`,\n    ])\n    .flat();\n\n  if (process.env.VITE_ORIGIN) {\n    console.log(`\\nCustom origin: ${process.env.VITE_ORIGIN}\\n`);\n  }\n\n  const origin =\n    process.env.VITE_ORIGIN ??\n    (sslEnabled ? `https://hslocal.net:${port}` : `http://hslocal.net:${port}`);\n\n  const viteConfig: InlineConfig = {\n    appType: 'custom',\n    server: {\n      middlewareMode: true,\n      host: 'hslocal.net',\n      origin,\n      https: sslEnabled,\n      hmr: {\n        protocol: sslEnabled ? 'wss' : undefined,\n      },\n    },\n    root: webRoot,\n    ssr: {\n      // TODO: might need more entries here to get things to resolve through\n      // resolveWebRootDepsPlugin\n      noExternal: '@hubspot/cms-components',\n    },\n    resolve: {\n      conditions: ['server'],\n      dedupe: ['react', 'react-dom', '@hubspot/cms-components', 'styled-jsx'],\n    },\n    optimizeDeps: {\n      include: ['react', 'react-dom', 'react-dom/client'],\n    },\n    plugins: [\n      true ? findCmsModules() : null,\n      sslEnabled ? mkcert({ hosts: additionalMkcertHosts }) : null,\n      react({\n        babel: {\n          plugins: [\n            'babel-plugin-styled-components',\n            'styled-jsx/babel',\n            'macros',\n          ],\n        },\n      }),\n      clientIslandEntryPlugin(),\n      resolveIslandPlugin(),\n      jsRenderingGates.includes('CMS:JSRenderer:RemoveCjsPlugin')\n        ? null\n        : viteCommonjs(),\n      devSecretsPlugin(secretNames),\n      noncePlaceholderPlugin(),\n    ],\n    css: {\n      postcss: webRoot,\n    },\n    envDir: webRoot,\n    envPrefix: 'HS_',\n  };\n\n  return createViteServer(viteConfig);\n}\n\nexport default createViteDevServer;\n", "import { Plugin, ViteDevServer } from 'vite';\n\nexport default function devSecretsPlugin(secretNames: Array<string>): Plugin {\n  return {\n    name: 'dev-secrets',\n    configureServer: {\n      order: 'post',\n      async handler(server: ViteDevServer) {\n        const cmsComponents = await server.ssrLoadModule(\n          '@hubspot/cms-components'\n        );\n\n        if (cmsComponents.setSecretsFromEnv) {\n          console.log(\n            `Attempting to load HS_* secrets from .env: ${secretNames}`\n          );\n          cmsComponents.setSecretsFromEnv(secretNames);\n        } else if (secretNames.length > 0) {\n          console.warn(\n            'Not loading secrets into the local environment. Make sure that your @hubspot/cms-components and @hubspot/cms-dev-server package versions match.'\n          );\n        }\n      },\n    },\n  };\n}\n", "import net from 'net';\nimport http from 'http';\nimport https from 'https';\n\nfunction requireHTTPS(\n  message: http.IncomingMessage,\n  response: http.ServerResponse\n) {\n  const newLocation = `https://${message.headers.host}${message.url}`;\n\n  response\n    .writeHead(302, {\n      Location: newLocation,\n    })\n    .end();\n}\n\n// Running http and https servers on the same port pulled from https://stackoverflow.com/a/42019773\nexport function createHttpsRedirectingServer(opts, handler) {\n  const innerHTTPServer = http.createServer(requireHTTPS);\n  const innerHTTPSServer = https.createServer(opts, handler);\n\n  const server = net.createServer((socket) => {\n    socket.once('data', (buffer) => {\n      // Pause the socket\n      socket.pause();\n\n      // Determine if this is an HTTP(s) request\n      const byte = buffer[0];\n\n      let protocol: string;\n      if (byte === 22) {\n        protocol = 'https';\n      } else if (32 < byte && byte < 127) {\n        protocol = 'http';\n      } else {\n        throw new Error(\n          'Unknown issue with incoming data, unknown if http or https'\n        );\n      }\n\n      const proxy = protocol === 'http' ? innerHTTPServer : innerHTTPSServer;\n      if (proxy) {\n        // Push the buffer back onto the front of the data stream\n        socket.unshift(buffer);\n\n        // Emit the socket to the HTTP(s) server\n        proxy.emit('connection', socket);\n      }\n\n      // As of NodeJS 10.x the socket must be\n      // resumed asynchronously or the socket\n      // connection hangs, potentially crashing\n      // the process. Prior to NodeJS 10.x\n      // the socket may be resumed synchronously.\n      process.nextTick(() => socket.resume());\n    });\n  });\n\n  return { server, innerHTTPServer, innerHTTPSServer };\n}\n", "import { fetchAccessToken } from '@hubspot/local-dev-lib/api/localDevAuth';\nimport { Gate, ENABLED_FEATURES_GATE_MAP } from '@hubspot/cms-js-internal';\nimport { getGatesFromEnv } from './gates.js';\nimport { HSEnvironment } from '@hubspot/cms-components';\n\ntype EnabledFeatures = {\n  [name: string]: number;\n};\n\nexport const mapEnabledFeaturesToGates = (\n  enabledFeatures: EnabledFeatures\n): Gate[] => {\n  return Object.keys(enabledFeatures).reduce((gates, enabledFeature) => {\n    if (enabledFeatures[enabledFeature]) {\n      gates.push(ENABLED_FEATURES_GATE_MAP[enabledFeature]);\n    }\n\n    return gates;\n  }, []);\n};\n\nexport default async function getJsRenderingGates(\n  portalId: number,\n  env: HSEnvironment,\n  personalAccessKey: string\n): Promise<Gate[]> {\n  const { enabledFeatures = {} } = await fetchAccessToken(\n    personalAccessKey,\n    env,\n    portalId\n  );\n\n  const envGates = getGatesFromEnv();\n  const gates = mapEnabledFeaturesToGates(enabledFeatures);\n  const mergedGates = [...envGates, ...gates];\n\n  process.env.GATES = mergedGates.join(',');\n\n  return mergedGates;\n}\n", "import { Gate } from '@hubspot/cms-js-internal';\n\nexport function getGatesFromEnv(): Gate[] {\n  const gates = process.env.GATES ? process.env.GATES.split(',') : [];\n\n  return gates as Gate[];\n}\n", "import localDevHttpImport from '@hubspot/local-dev-lib/http';\nimport { isMissingScopeError, MissingScopeError } from '../lib/errors.js';\n\nconst {  default: hsCliHttp } = localDevHttpImport;\n\ninterface DomainResult {\n  domain: string;\n  isUsedForBlogPost: boolean;\n  isUsedForSitePage: boolean;\n  isUsedForLandingPage: boolean;\n}\n\ninterface DomainsResponse {\n  total: number;\n  results: DomainResult[];\n}\n\nexport async function fetchDomains(portalId: number): Promise<DomainResult[]> {\n  try {\n    // Works with oauth if content-custom-domain-read scope present  (from cms.domains.read scope group)\n    const result = (await hsCliHttp.get(portalId, {\n      url: `/cms/v3/domains`,\n      params: { portalId },\n      responseType: 'json',\n    })) as DomainsResponse;\n\n    return result.results;\n  } catch (error) {\n    if (isMissingScopeError(error)) {\n      throw new MissingScopeError(error);\n    }\n    throw error;\n  }\n}\n\nexport async function fetchWebsiteDomainNames(portalId: number) {\n  const domains = await fetchDomains(portalId);\n\n  const filteredDomains = domains.filter((domain) => {\n    return (\n      domain.isUsedForBlogPost ||\n      domain.isUsedForSitePage ||\n      domain.isUsedForLandingPage\n    );\n  });\n\n  const domainNames = filteredDomains.map((r) => r.domain);\n  return domainNames;\n}\n", "const MISSING_SCOPE_ERROR_PREFIX = `Your personal access key is missing required scopes fetch domains.\\nYou may need to re-generate a new personal access key with the required scopes and re-run \\`hs-auth\\`, or you may not have this functionality enabled in your account\\n`;\nconst OAUTH_ERROR_REGEX =\n  /^This oauth-token \\([\\w]+\\) does not have proper permissions!/;\nconst NOT_PUBLIC_USE_ERROR = `The scope needed for this API call isn't available for public use`;\n\nexport class MissingScopeError extends Error {\n  constructor(error) {\n    let messageEnd = '';\n    if (error.error.message.match(OAUTH_ERROR_REGEX)) {\n      messageEnd = error.error.message;\n    }\n\n    super(`${MISSING_SCOPE_ERROR_PREFIX}\\n${messageEnd}`);\n\n    // Set the prototype explicitly.\n    Object.setPrototypeOf(this, MissingScopeError.prototype);\n  }\n}\n\nexport function logMissingScopeWarning(error: MissingScopeError) {\n  console.warn(error.message);\n}\n\nexport function isMissingScopeError(error) {\n  return (\n    error.statusCode === 403 &&\n    (error.error.message.match(OAUTH_ERROR_REGEX) ||\n      error.error.message.startsWith(NOT_PUBLIC_USE_ERROR))\n  );\n}\n\nexport function handleSecretsError(error) {\n  if (error && error.statusCode && error.error) {\n    const { statusCode, error: errorDetails } = error;\n\n    if (errorDetails?.category === 'MISSING_SCOPES') {\n      console.log(\n        '\\nMissing scopes for secrets.',\n        '\\nSecrets require Serverless functions which are scoped to Enterprise portals.\\n'\n      );\n    } else {\n      console.error(`Error ${statusCode}: ${errorDetails.message}`);\n\n      if (errorDetails.correlationId) {\n        console.error(`Correlation ID: ${errorDetails.correlationId}`);\n      }\n\n      if (errorDetails.category) {\n        console.error(`Category: ${errorDetails.category}`);\n      }\n\n      if (errorDetails.links) {\n        if (errorDetails.links.support) {\n          console.error(`Support URL: ${errorDetails.links.support}`);\n        }\n\n        if (errorDetails.links.forum) {\n          console.error(`Forum URL: ${errorDetails.links.forum}`);\n        }\n      }\n    }\n  } else {\n    console.error('Unexpected error structure:', error);\n  }\n}\n", "import path from 'path';\nimport fs from 'fs';\nimport select from '@inquirer/select';\n\nimport localDevHttpImport from '@hubspot/local-dev-lib/http';\n\nconst {  default: hsCliHttp } = localDevHttpImport;\n\nconst HSPROJECT_JSON = 'hsproject.json';\n\nexport function checkFileExists(filePath: string) {\n  return fs.existsSync(filePath) && fs.statSync(filePath).isFile();\n}\n\nexport function findHSProjectJson(startPath): string | null {\n  let currentDir = startPath;\n  let dirLevel = 0;\n  const maxDirLevel = 4;\n\n  while (path.dirname(currentDir) !== currentDir && dirLevel < maxDirLevel) {\n    const filePath = path.join(currentDir, HSPROJECT_JSON);\n\n    if (checkFileExists(filePath)) {\n      return filePath;\n    }\n\n    currentDir = path.dirname(currentDir);\n    dirLevel++;\n  }\n\n  console.log(\n    `'${HSPROJECT_JSON}' not found in any parent of dev server target`\n  );\n  return null;\n}\n\nexport default async function validateHSPlatform(\n  projectConfigPath: string,\n  portalId: number\n): Promise<Boolean> {\n  if (projectConfigPath === null) {\n    console.log(\n      `Unable to find local ${HSPROJECT_JSON}, skipping platform version validation.`\n    );\n    return false;\n  }\n\n  const hsProjectJSONContents = fs.readFileSync(projectConfigPath, 'utf8');\n  const hsProjectJSONData = JSON.parse(hsProjectJSONContents);\n\n  const { platformVersion } = hsProjectJSONData;\n\n  let platformVersionResult;\n\n  try {\n    platformVersionResult = await hsCliHttp.get(portalId, {\n      url: `developer/projects/v1/platformVersion`,\n      responseType: 'json',\n    });\n  } catch (e) {\n    console.error(e.message);\n    console.log(\n      'Unable to find active platform versions, skipping platform version validation.'\n    );\n\n    return false;\n  }\n\n  if (\n    platformVersion === undefined ||\n    !platformVersionResult.activePlatformVersions.includes(platformVersion)\n  ) {\n    const answer = await select({\n      message:\n        'Your local \"hsproject.json\" does not have a valid platform version, please select a valid platform version. You can read more about Platform Versioning here https://developers.hubspot.com/docs/platform/platform-versioning',\n      choices: platformVersionResult.activePlatformVersions.map(\n        (versionNumber) => ({\n          name: versionNumber,\n          value: versionNumber,\n        })\n      ),\n    });\n\n    hsProjectJSONData.platformVersion = answer;\n\n    try {\n      fs.writeFileSync(\n        projectConfigPath,\n        JSON.stringify(hsProjectJSONData, undefined, 2),\n        'utf8'\n      );\n\n      return true;\n    } catch (e) {\n      console.error(\n        `unable to write updated valid platform version, please make sure platformVersion in \"${HSPROJECT_JSON}\" is one of ${platformVersionResult.activePlatformVersions}`\n      );\n\n      return false;\n    }\n  }\n\n  return true;\n}\n", "import { writeFileSync } from \"fs\";\nimport ts from \"typescript\";\nconst fieldTypeNameByType = {\n  alignment: \"AlignmentFieldType\",\n  audioplayer: \"AudioFieldType\",\n  backgroundimage: \"BackgroundImageFieldType\",\n  blog: \"BlogFieldType\",\n  boolean: \"BooleanFieldType\",\n  border: \"BorderFieldType\",\n  choice: \"ChoiceFieldType\",\n  color: \"ColorFieldType\",\n  crmobject: \"CrmObjectFieldType\",\n  cta: \"CtaFieldType\",\n  date: \"DateFieldType\",\n  datetime: \"DateTimeFieldType\",\n  email: \"EmailFieldType\",\n  embed: \"EmbedFieldType\",\n  file: \"FileFieldType\",\n  followupemail: \"FollowUpEmailFieldType\",\n  font: \"FontFieldType\",\n  form: \"FormFieldType\",\n  gradient: \"GradientFieldType\",\n  group: \"GroupFieldType\",\n  html: \"HtmlFieldType\",\n  hubdbrow: \"HubDbRowFieldType\",\n  hubdbtable: \"HubDbTableFieldType\",\n  hubl: \"HublFieldType\",\n  icon: \"IconFieldType\",\n  image: \"ImageFieldType\",\n  link: \"LinkFieldType\",\n  logo: \"LogoFieldType\",\n  meeting: \"MeetingFieldType\",\n  menu: \"MenuFieldType\",\n  number: \"NumberFieldType\",\n  page: \"PageFieldType\",\n  payment: \"PaymentFieldType\",\n  podcast: \"PodcastFieldType\",\n  richtext: \"RichTextFieldType\",\n  salesforcecampaign: \"SfdcCamapaignFieldType\",\n  simplemenu: \"SimpleMenuFieldType\",\n  spacing: \"SpacingFieldType\",\n  survey: \"SurveyFieldType\",\n  tag: \"TagFieldType\",\n  textalignment: \"TextAlignmentFieldType\",\n  text: \"TextFieldType\",\n  url: \"UrlFieldType\",\n  videoplayer: \"VideoFieldType\",\n  workflow: \"WorkflowFieldType\"\n};\nfunction getFieldEntries(fields) {\n  if (!Array.isArray(fields)) {\n    return void 0;\n  }\n  return fields.filter((field) => field.name && field.type).map((field) => {\n    const { name, type } = field;\n    const fieldType = fieldTypeNameByType[type];\n    if (!fieldType) {\n      return void 0;\n    }\n    const entry = {\n      type: fieldType,\n      name,\n      isRepeater: \"occurrence\" in field,\n      isRequired: !!field.required,\n      choices: (\n        // Choices are pair [value, label] but only the value is printed to the page, so flatten it.\n        \"choices\" in field ? field.choices.map(([value, label]) => value) : void 0\n      ),\n      children: []\n    };\n    if (fieldType === \"GroupFieldType\" && \"children\" in field) {\n      const children = getFieldEntries(field.children);\n      return { ...entry, children };\n    }\n    return entry;\n  }).filter((entry) => entry !== void 0);\n}\nconst INVALID_IMPORTS = [\"ChoiceFieldType\", \"GroupFieldType\"];\nconst FIELD_GROUP_TYPE = \"FieldGroupWithChildren\";\nconst REPEATER_GROUP_TYPE = \"RepeaterGroup\";\nconst REQUIRED_TYPE = \"RequiredField\";\nconst DEFAULT_VALUES_TYPE = \"DefaultValues\";\nconst CMS_COMPONENTS = \"@hubspot/cms-components\";\nconst CMS_COMPONENTS_FIELD_TYPES = `${CMS_COMPONENTS}/fields`;\nconst AUTO_GEN_COMMENT = \"THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.\";\nconst createPropertySignature = (identifier, type, hasQuestionToken = false) => ts.factory.createPropertySignature(\n  [],\n  identifier,\n  hasQuestionToken ? ts.factory.createToken(ts.SyntaxKind.QuestionToken) : void 0,\n  type\n);\nconst createUnionTypeFromArray = (values) => ts.factory.createUnionTypeNode(\n  values.map(\n    (value) => ts.factory.createLiteralTypeNode(ts.factory.createStringLiteral(value))\n  )\n);\nconst buildTypeFromField = (field, additionalNode) => {\n  const imports = [field.type];\n  const identifier = ts.factory.createIdentifier(field.name);\n  const baseType = ts.factory.createTypeReferenceNode(field.type);\n  const requiredType = ts.factory.createTypeReferenceNode(REQUIRED_TYPE, [\n    baseType\n  ]);\n  let finalType = field.isRequired ? requiredType : baseType;\n  if (field.choices) {\n    finalType = createUnionTypeFromArray(field.choices);\n  }\n  if (field.isRequired) {\n    imports.push(REQUIRED_TYPE);\n  }\n  if (additionalNode) {\n    const typeLiteral = ts.isTypeLiteralNode(additionalNode) ? additionalNode : ts.factory.createTypeLiteralNode([additionalNode]);\n    const genericType = field.isRepeater ? REPEATER_GROUP_TYPE : FIELD_GROUP_TYPE;\n    imports.push(genericType);\n    finalType = ts.factory.createTypeReferenceNode(genericType, [typeLiteral]);\n  }\n  return {\n    type: createPropertySignature(\n      identifier,\n      finalType,\n      !field.isRequired && !additionalNode\n    ),\n    imports\n  };\n};\nconst filterUnusedImports = (imports, type) => {\n  const usedImports = /* @__PURE__ */ new Set();\n  const visit = (node) => {\n    if (ts.isTypeReferenceNode(node)) {\n      const typeName = node.typeName;\n      if (\"escapedText\" in typeName) {\n        usedImports.add(typeName.escapedText.toString());\n      }\n    }\n    ts.forEachChild(node, visit);\n  };\n  visit(type);\n  return imports.filter((name) => usedImports.has(name));\n};\nfunction getImportDeclaration(imports, moduleSpecifier) {\n  const importSpecifiers = Array.from(imports).map(\n    (importName) => ts.factory.createImportSpecifier(\n      true,\n      void 0,\n      ts.factory.createIdentifier(importName)\n    )\n  );\n  const namedImports = ts.factory.createNamedImports(importSpecifiers);\n  return ts.factory.createImportDeclaration(\n    [],\n    [],\n    ts.factory.createImportClause(false, void 0, namedImports),\n    ts.factory.createStringLiteral(moduleSpecifier)\n  );\n}\nfunction getFieldTypes(fields) {\n  const imports = [];\n  const types = fields.map((field) => {\n    if (field.children) {\n      const childrenResult = getFieldTypes(field.children);\n      imports.push(...childrenResult.imports);\n      if (childrenResult.types.length) {\n        const subType = ts.factory.createTypeLiteralNode(childrenResult.types);\n        const { type: type2, imports: newImports2 } = buildTypeFromField(\n          field,\n          subType\n        );\n        imports.push(...newImports2);\n        return type2;\n      }\n    }\n    const { type, imports: newImports } = buildTypeFromField(field);\n    imports.push(...newImports);\n    return type;\n  });\n  const validImports = Array.from(\n    new Set(imports.filter((name) => !INVALID_IMPORTS.includes(name)))\n  );\n  return { types, imports: validImports };\n}\nfunction constructFinalType(fields, typeName) {\n  const { types, imports } = getFieldTypes(fields);\n  const baseType = ts.factory.createTypeAliasDeclaration(\n    [],\n    [],\n    \"\",\n    void 0,\n    ts.factory.createTypeLiteralNode(types)\n  );\n  const wrappedType = ts.factory.createTypeReferenceNode(DEFAULT_VALUES_TYPE, [\n    baseType.type\n  ]);\n  const finalType = ts.factory.createTypeAliasDeclaration(\n    [],\n    [],\n    typeName,\n    void 0,\n    wrappedType\n  );\n  const filteredImports = filterUnusedImports(imports, finalType);\n  const importDeclaration = getImportDeclaration(\n    [...filteredImports, DEFAULT_VALUES_TYPE],\n    CMS_COMPONENTS_FIELD_TYPES\n  );\n  const defaultExport = ts.factory.createExportDefault(\n    ts.factory.createIdentifier(typeName)\n  );\n  return [importDeclaration, finalType, defaultExport];\n}\nfunction writeFieldsType(fields, fileName, typeName) {\n  const entries = getFieldEntries(fields);\n  if (!entries) {\n    return false;\n  }\n  try {\n    const file = ts.createSourceFile(\n      fileName,\n      \"\",\n      ts.ScriptTarget.ESNext,\n      false,\n      ts.ScriptKind.TS\n    );\n    const printer = ts.createPrinter();\n    const nodes = constructFinalType(entries, typeName);\n    const comments = [\n      AUTO_GEN_COMMENT,\n      \"Removing the above comment will disable type generation for this module\",\n      \"This file was created by @hubspot/cms-dev-server, for more information see https://github.hubspot.com/cms-react/reference/js-modules.html#module-fields\"\n    ].map((comment) => `// ${comment}`);\n    const typeResult = nodes.map(\n      (node) => printer.printNode(ts.EmitHint.Unspecified, node, file)\n    );\n    const result = [...comments, ...typeResult].join(\"\\n\");\n    writeFileSync(fileName, result);\n    return true;\n  } catch (e) {\n    console.error(e);\n    return false;\n  }\n}\nexport {\n  AUTO_GEN_COMMENT,\n  buildTypeFromField,\n  constructFinalType,\n  getFieldTypes,\n  writeFieldsType\n};\n", "import { Field } from '@hubspot/cms-components/fields';\nimport { findAllModulesInRoot } from '@hubspot/cms-js-internal';\nimport {\n  AUTO_GEN_COMMENT,\n  writeFieldsType,\n} from '@hubspot/cms-js-internal/buildFieldsTypes';\nimport fs from 'fs';\nimport path from 'path';\nimport { ReactElement } from 'react';\nimport readline from 'readline';\nimport { ViteDevServer } from 'vite';\nimport { wrapMessageInColor } from './logColors.js';\nimport packagePath from './packagePath.js';\n\nconst lastSerializedFieldsCache: Record<string, string> = {};\n\nexport const formatAsTypeName = (str: string): string => {\n  // Replace invalid chars w/ numbers, and prefix with underscore if invalid start\n  const typeName = `${str.replace(/[^a-zA-Z0-9_$]/g, '_')}FieldsType`;\n  const validFirstChar = /^[A-Za-z_$]/.test(str.charAt(0));\n\n  return validFirstChar ? typeName : `_${typeName}`;\n};\n\nconst isInModulesFolder = (filePath: string, projectRoot: string) => {\n  const getEntryPathFromId = (id: string) => {\n    return id.startsWith(projectRoot) ? id.replace(`${projectRoot}/`, '') : '';\n  };\n  const currentModuleId = path.normalize(filePath);\n  const moduleEntryPath = getEntryPathFromId(currentModuleId);\n\n  const subFolderTokens = moduleEntryPath.split(path.sep);\n  return {\n    inModuleFolder:\n      subFolderTokens[0] === 'components' && subFolderTokens[1] === 'modules',\n    isRootModuleFile: subFolderTokens.length === 3,\n  };\n};\n\nconst fileContainsAutoGenComment = async (filePath: string) => {\n  // Always auto gen if file DNE\n  if (!fs.existsSync(filePath)) return true;\n\n  const stream = fs.createReadStream(filePath);\n  const reader = readline.createInterface({ input: stream });\n  const firstLine: string = await new Promise((resolve) =>\n    reader.once('line', (line) => resolve(line.trim()))\n  );\n  reader.close();\n  stream.close();\n\n  return firstLine && firstLine === `// ${AUTO_GEN_COMMENT}`;\n};\n\n/**\n * If the filePath file is in the modules folder, find and return the closest index file.\n * If the filePath that was updated in modules root, return that path instead.\n */\nexport const getIndexFile = (filePath: string, projectRoot: string) => {\n  const { inModuleFolder, isRootModuleFile } = isInModulesFolder(\n    filePath,\n    projectRoot\n  );\n  if (!inModuleFolder) return undefined;\n\n  if (isRootModuleFile) return { indexFilePath: filePath, isRootModuleFile };\n\n  // Get the index file in the root of the directory since not a root module file\n  const dir = path.dirname(filePath);\n  const files = fs.readdirSync(dir);\n  const indexFileName = files.find((file) => file.startsWith('index.'));\n  return indexFileName\n    ? { indexFilePath: path.join(dir, indexFileName), isRootModuleFile }\n    : undefined;\n};\n\n/*\n * Get the exported fields object from the indexFilePath and render out to JSON\n */\nexport const getIndexFileFields = async (\n  indexFilePath: string,\n  indexFileName: string,\n  viteServer: ViteDevServer\n) => {\n  let indexFile: Record<string, any>;\n  let renderFieldsToJson: (\n    fields: ReactElement | Field[] | any,\n    moduleName: string\n  ) => Field[];\n\n  try {\n    indexFile = await viteServer.ssrLoadModule(indexFilePath);\n    const internalSsrPath = packagePath(import.meta.url, 'internalSsr');\n    ({ renderFieldsToJson } = await viteServer.ssrLoadModule(internalSsrPath));\n  } catch (e) {\n    return undefined;\n  }\n  if (!indexFile.fields) return undefined;\n\n  const fields = indexFile.fields;\n  const renderedFieldsJson = renderFieldsToJson(fields, indexFileName);\n  const isValidFields = Array.isArray(renderedFieldsJson);\n\n  return isValidFields ? renderedFieldsJson : undefined;\n};\n\n/**\n * When a file inside of a module folder is updated, find the exported fields object\n * and try to generate a type file for it. If a types file exists, checks for the auto-gen\n * comment at the top before overwriting.\n */\nexport const maybeUpdateFields = async (\n  filePath: string,\n  viteServer: ViteDevServer,\n  projectRoot: string\n) => {\n  const indexInfo = getIndexFile(filePath, projectRoot);\n  if (!indexInfo) return;\n\n  const { indexFilePath, isRootModuleFile } = indexInfo;\n  const indexFileName = path.parse(indexFilePath).name;\n\n  // Do not regen if the only a types file was changed. Can infinite loop\n  const isTypeFile = filePath.endsWith('.types.ts');\n  if (isTypeFile) return;\n\n  const fields = await getIndexFileFields(\n    indexFilePath,\n    indexFileName,\n    viteServer\n  );\n  if (fields) {\n    const typeFileName = isRootModuleFile\n      ? `${indexFileName}.fields.types.ts`\n      : 'fields.type.ts';\n    const typeFilePath = path.join(path.dirname(filePath), typeFileName);\n\n    // cache the field files based on path name & serialized file\n    const lastSerializedFields = lastSerializedFieldsCache[typeFilePath];\n    const serializedFields = JSON.stringify(fields);\n    if (lastSerializedFields === serializedFields) return;\n\n    const hasAutoGenComment = await fileContainsAutoGenComment(typeFilePath);\n    if (!hasAutoGenComment) return;\n\n    const moduleFolderName = path.basename(path.dirname(filePath));\n    const outputTypeName = formatAsTypeName(moduleFolderName);\n    const didSucceed = writeFieldsType(fields, typeFilePath, outputTypeName);\n\n    if (didSucceed) {\n      lastSerializedFieldsCache[typeFilePath] = serializedFields;\n    }\n\n    const pathToLog = isRootModuleFile\n      ? `${moduleFolderName}/${indexFileName}`\n      : moduleFolderName;\n    const successMsg = `Successfully generated types for ${pathToLog}`;\n    const errorMsg = `Failed to generate types for ${pathToLog}`;\n    const message = didSucceed ? successMsg : errorMsg;\n    console.log(wrapMessageInColor(didSucceed ? 'green' : 'red', message));\n  }\n};\n\n/**\n * Generate field types for all modules once and start module file watcher to generate on add/change\n */\nexport const startFieldsTypeGenWatcher = (\n  viteServer: ViteDevServer,\n  projectRoot: string\n) => {\n  // On server start, run auto-gen for all module folders\n  const { moduleSubpaths } = findAllModulesInRoot(projectRoot);\n  moduleSubpaths.forEach((modulePath) => {\n    const resolvedPath = path.resolve(projectRoot, modulePath);\n    maybeUpdateFields(resolvedPath, viteServer, projectRoot);\n  });\n\n  const watchCallback = (filePath: string) =>\n    maybeUpdateFields(filePath, viteServer, projectRoot);\n  viteServer.watcher.on('add', watchCallback).on('change', watchCallback);\n};\n", "#!/usr/bin/env node\n\nimport { getDevServerCommandLineOptions } from './lib/cli.js';\nimport createDevServer from './createDevServer.js';\n\nconst {\n  webRoot,\n  hubspotCliConfigPathOption,\n  hubspotCliAccountNameOption,\n  sslEnabledOption,\n  storybook,\n  fieldGenEnabledOption,\n} = getDevServerCommandLineOptions(process.argv);\n\nif (!webRoot) {\n  throw new Error(`No web root path argument specified`);\n}\n\ncreateDevServer(\n  webRoot,\n  storybook,\n  hubspotCliConfigPathOption,\n  hubspotCliAccountNameOption,\n  sslEnabledOption,\n  fieldGenEnabledOption\n);\n"],
  "mappings": "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",
  "names": ["webRoot", "hubspotCliConfigPathOption", "hubspotCliAccountNameOption", "sslEnabledOption", "storybook", "fieldGenEnabledOption", "path", "url", "express", "http", "normalizePath", "path", "normalizePath", "request", "renderToStaticMarkup", "path", "path", "path", "webRoot", "path", "webRoot", "url", "path", "resolve", "createServerRenderContextV2", "createServerRenderContext", "collectCssInDev", "renderToStaticMarkup", "isDebugUrlString", "url", "isDebugUrlString", "createIslandsGlobalJsForClientInDev", "buildStaticEnvConfig", "url", "buildStaticEnvConfig", "path", "normalizePath", "fs", "resolve", "path", "path", "normalizePath", "localDevHttpImport", "joinPosix", "cmsComponents", "localDevHttpImport", "localDevHttpImport", "hsCliHttp", "hsCliHttp", "hsCliHttp", "localDevHttpImport", "cmsComponents", "lookForModuleInFolder", "joinPosix", "resolve", "path", "localDevHttpImport", "hsCliHttp", "isDebugUrlString", "hsCliHttp", "localDevHttpImport", "request", "url", "isRecord", "webRoot", "normalizePath", "path", "localDevHttpImport", "hsCliHttp", "webRoot", "normalizePath", "path", "buildStaticEnvConfig", "lookForModuleInFolder", "joinPosix", "request", "webRoot", "normalizePath", "path", "buildStaticEnvConfig", "jsx", "webRoot", "jsx", "request", "webRoot", "jsx", "jsxs", "webRoot", "jsx", "request", "webRoot", "buildStaticEnvConfig", "path", "normalizePath", "request", "webRoot", "normalizePath", "path", "buildStaticEnvConfig", "getAccountId", "url", "resolve", "getAccountId", "request", "webRoot", "jsx", "jsxs", "request", "webRoot", "jsx", "jsxs", "request", "webRoot", "HCMS_PATH", "HS_FS_PATH", "HUB_FS_PATH", "isInternalCMSRoute", "fetch", "path", "normalizePath", "request", "webRoot", "normalizePath", "path", "request", "url", "Router", "getAccountId", "getEnv", "buildStaticEnvConfig", "request", "getAccountId", "getEnv", "Router", "cmsComponents", "webRoot", "net", "http", "https", "getEnv", "getAccountId", "getAccountConfig", "localDevHttpImport", "hsCliHttp", "localDevHttpImport", "path", "fs", "localDevHttpImport", "hsCliHttp", "localDevHttpImport", "fs", "path", "path", "fs", "stream", "resolve", "hsCliHttp", "localDevHttpImport", "webRoot", "storybook", "hubspotCliConfigPathOption", "hubspotCliAccountNameOption", "sslEnabledOption", "fieldGenEnabledOption", "getAccountId", "getEnv", "getAccountConfig", "normalizePath", "path", "express", "http", "url", "resolve"]
}
