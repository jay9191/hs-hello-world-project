{
  "version": 3,
  "sources": ["../../cms-js-internal/dist/island-runtime/island-runtime.js"],
  "sourcesContent": ["const onVisible = (islandEl, callback) => {\n  const observer = new IntersectionObserver((entries) => {\n    if (entries.some((entry) => entry.isIntersecting)) {\n      observer.disconnect();\n      callback();\n    }\n    return;\n  });\n  for (let i = 0; i < islandEl.children.length; i++) {\n    const child = islandEl.children[i];\n    observer.observe(child);\n  }\n};\nlet rootsToProcess;\nlet hydrationQueue = [];\nconst hydrationTypesToAccept = /* @__PURE__ */ new Set([\"load\", \"visible\"]);\nlet startHydratingIdleRootsTimeout;\nconst shouldForceSeparateJsForAllIslands = /(&|\\?)forceSeparateIslandJs=true/.test(window.location.search);\nlet scheduledHydrationIndexCtr = 1;\nconst rootsById = /* @__PURE__ */ new Map();\nconst typedWindow = window;\nconst startHydratingIdleRoots = () => {\n  hydrationTypesToAccept.add(\"idle\");\n  for (const root of rootsToProcess) {\n    if (root.hydrationStatus === \"HYDRATION_WAITING\" && hydrationTypesToAccept.has(root.hydrateOn)) {\n      root.hydrationStatus = \"HYDRATION_PREPARING\";\n      waitThenLoadAndHydrateIfNeeded(\n        root,\n        getLoadableModuleFor(root),\n        root.wrapperUrl ? getLoadableModuleFor({\n          url: root.wrapperUrl,\n          id: `${root.id}-wrapper`,\n          moduleName: `${root.moduleName}-wrapper`\n        }) : void 0\n      );\n    }\n  }\n};\nfunction setupIdleCallbackIfNeeded() {\n  if (!startHydratingIdleRootsTimeout) {\n    if (!window.requestIdleCallback) {\n      setTimeout(() => {\n        startHydratingIdleRoots();\n      }, 1);\n      return;\n    }\n    startHydratingIdleRootsTimeout = requestIdleCallback(\n      startHydratingIdleRoots,\n      { timeout: 5e3 }\n    );\n  }\n}\nfunction finishHydratingRootAndScheduleNext(rootAndExtraInfo) {\n  rootAndExtraInfo.root.hydrationStatus = \"HYDRATED\";\n  hydrationQueue = hydrationQueue.filter(\n    (x) => x.root.id !== rootAndExtraInfo.root.id\n  );\n  const hasOtherRootsToHydrate = hydrationQueue.length > 0;\n  if (hasOtherRootsToHydrate) {\n    setTimeout(() => hydrateRoot(hydrationQueue[0]), 0);\n  } else if (!hasOtherRootsToHydrate && !hydrationTypesToAccept.has(\"idle\")) {\n    setupIdleCallbackIfNeeded();\n  }\n}\nfunction hydrateRoot(rootAndExtraInfo) {\n  const { rootEl, root, IslandModule, WrapperModule } = rootAndExtraInfo;\n  if (window.location.search.includes(\"hsDebug=\")) {\n    console.log(\"Hydrating root\", root.id, root.hydrateOn);\n  }\n  const postHydration = () => {\n    finishHydratingRootAndScheduleNext(rootAndExtraInfo);\n  };\n  const renderableIsland = {\n    rootElement: rootEl,\n    pageUrl: typedWindow.__hsServerPageUrl,\n    basePath: typedWindow.__hsBasePath,\n    islands: typedWindow.__islands,\n    postHydration,\n    island: root,\n    WrapperModule: WrapperModule ? WrapperModule.default : void 0,\n    index: rootAndExtraInfo.islandScheduledIndex\n  };\n  const reactRoot = IslandModule.render(renderableIsland);\n  rootsById.set(root.id, reactRoot);\n}\nfunction pushToHydrationQueue(rootAndExtraInfo) {\n  rootAndExtraInfo.root.hydrationStatus = \"HYDRATION_QUEUED\";\n  hydrationQueue.push(rootAndExtraInfo);\n  if (hydrationQueue.length === 1) {\n    hydrateRoot(rootAndExtraInfo);\n  }\n}\nfunction loadThenHydrate(root, LoadableIslandModule, LoadableWrapperModule, rootEl, islandScheduledIndex) {\n  Promise.all([\n    LoadableIslandModule(),\n    LoadableWrapperModule ? LoadableWrapperModule() : Promise.resolve()\n  ]).then(\n    ([IslandModule, WrapperModule]) => {\n      pushToHydrationQueue({\n        rootEl,\n        root,\n        IslandModule,\n        WrapperModule,\n        islandScheduledIndex\n      });\n    }\n  ).catch((error) => {\n    console.error(`Failed to load module for island: ${root.id}`);\n    console.error(error);\n  });\n}\nfunction waitThenLoadAndHydrateIfNeeded(root, LoadableIslandModule, LoadableWrapperModule) {\n  const rootEl = document.getElementById(root.id);\n  const islandScheduledIndex = scheduledHydrationIndexCtr;\n  scheduledHydrationIndexCtr += 1;\n  if (root.hydrateOn === \"visible\") {\n    onVisible(rootEl, () => {\n      loadThenHydrate(\n        root,\n        LoadableIslandModule,\n        LoadableWrapperModule,\n        rootEl,\n        islandScheduledIndex\n      );\n    });\n  } else {\n    loadThenHydrate(\n      root,\n      LoadableIslandModule,\n      LoadableWrapperModule,\n      rootEl,\n      islandScheduledIndex\n    );\n  }\n}\nfunction getLoadableModuleFor(root) {\n  let url = root.url;\n  if (root.url.startsWith(\"/\") && !root.url.startsWith(\"//\") && window.location.search.includes(\"hsDebugOverridePublicHost=\")) {\n    const currentUrl = new URL(window.location.toString());\n    url = `${currentUrl.protocol}//${currentUrl.searchParams.get(\n      \"hsDebugOverridePublicHost\"\n    )}${root.url}`;\n  } else if (!root.url.startsWith(\"https://\") && !root.url.startsWith(\"http://\") && !root.url.startsWith(\"//\")) {\n    url = `${window.location.origin}${root.url}`;\n  }\n  if (shouldForceSeparateJsForAllIslands) {\n    url = `${root.url}?cacheBust=${Date.now()}-${root.id}`;\n  }\n  const LoadableIslandModule = () => import(\n    /* @vite-ignore */\n    url\n  );\n  if (!LoadableIslandModule) {\n    throw new Error(`Missing island component for ${root.moduleName}`);\n  }\n  return LoadableIslandModule;\n}\nfunction hydrateIslandRoots() {\n  if (rootsToProcess === void 0) {\n    rootsToProcess = typedWindow.__islands;\n    if (window.location.search.includes(\"hsDebug=\")) {\n      console.log(\"Starting to hydrate\", rootsToProcess);\n    }\n    if (shouldForceSeparateJsForAllIslands) {\n      console.log(\"  ... forcibly making every island refetch JS\");\n    }\n  }\n  let encounteredAnyNonIdleIslands = false;\n  for (const root of rootsToProcess) {\n    if (!root.hydrationStatus) {\n      root.hydrationStatus = root.hydrationStatus || \"HYDRATION_WAITING\";\n      if (hydrationTypesToAccept.has(root.hydrateOn)) {\n        encounteredAnyNonIdleIslands = true;\n        root.hydrationStatus = \"HYDRATION_PREPARING\";\n        waitThenLoadAndHydrateIfNeeded(\n          root,\n          getLoadableModuleFor(root),\n          root.wrapperUrl ? getLoadableModuleFor({\n            url: root.wrapperUrl,\n            id: `${root.id}-wrapper`,\n            moduleName: `${root.moduleName}-wrapper`\n          }) : void 0\n        );\n      }\n    }\n  }\n  if (rootsToProcess.length > 0 && !encounteredAnyNonIdleIslands) {\n    setupIdleCallbackIfNeeded();\n  }\n}\nfunction setupIslandHydration() {\n  if (document.readyState === \"interactive\" || document.readyState === \"complete\") {\n    hydrateIslandRoots();\n  } else {\n    window.addEventListener(\"DOMContentLoaded\", hydrateIslandRoots);\n  }\n}\nfunction unmountIsland(islandId) {\n  const islandToUnmount = rootsToProcess.find(\n    (island) => island.id === islandId\n  );\n  if (!islandToUnmount || !rootsById.get(islandId)) {\n    throw new Error(`No known island: ${islandId}`);\n  }\n  const islandIndex = rootsToProcess.indexOf(islandToUnmount);\n  const reactRoot = rootsById.get(islandId);\n  rootsToProcess.splice(islandIndex, 1);\n  rootsById.delete(islandId);\n  console.log(\"Unmounting island:\", islandId);\n  reactRoot.unmount();\n}\nexport {\n  setupIslandHydration,\n  unmountIsland\n};\n"],
  "mappings": "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",
  "names": []
}
