interface PaginatedApiResponse<T> {
    limit: number;
    objects: T[];
    offset: number;
    total: number;
    totalCount: number;
}
export interface HubLModule {
    moduleId: number;
    name: string;
    path: string;
    previewKey: string;
}
export interface HubLTemplate {
    path: string;
    label: string;
    previewKey: string;
    filename: string;
}
export interface HubLTemplateData {
    previewKey: string;
}
export interface HubLModuleData {
    previewKey: string;
    moduleId: string;
}
export declare function fetchHubLModules(accountId: any, previewToken: any): Promise<PaginatedApiResponse<HubLModule>>;
export declare function fetchPreviewTemplates(accountId: any, previewToken: any): Promise<PaginatedApiResponse<HubLTemplate>>;
export declare function fetchModuleByPath(accountId: number, path: string): Promise<any>;
export declare function fetchTemplateByPath(accountId: number, path: string): Promise<HubLTemplateData>;
export {};
